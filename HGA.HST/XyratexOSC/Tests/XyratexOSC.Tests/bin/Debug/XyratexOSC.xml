<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XyratexOSC</name>
    </assembly>
    <members>
        <member name="M:XyratexOSC.Factory.ICommProvider.Initialize">
            <summary>
            Initializes the communication provider.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.Uninitialize">
            <summary>
            Uninitializes the communication provider.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.Connect">
            <summary>
            Opens connection to Continuum system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.CheckConnection">
            <summary>
            Checks connection to Continuum system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.Disconnect">
            <summary>
            Closes connection to Continuum system.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.AttemptOnline">
            <summary>
            Attempts to establish communication with the factory host.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.Offline">
            <summary>
            Disables communication with the factory host.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.GetToolState">
            <summary>
            Gets the tool's communication/control state.
            </summary>
            <returns>The tool's communication/control state.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.GetHostState">
            <summary>
            Gets the Host's communication state as determined from the last GEM box heartbeat.
            </summary>
            <returns>The Host's communication state.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.RaiseEvent(System.Int32,System.Int32)">
            <summary>
            Raises the collection event specified by the CEID.
            </summary>
            <param name="ceid">The CEID.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.AddAlarm(XyratexOSC.Factory.GemAlarm)">
            <summary>
            Adds an alarm GEM item.
            </summary>
            <param name="alarm">The alarm.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.RaiseAlarm(System.Int32,System.Int32)">
            <summary>
            Sets the alarm state and raises the associated alarm collection event.
            </summary>
            <param name="aid">The alarm ID.</param>
            <param name="ceid">The collection event ID.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.ClearAlarm(System.Int32,System.Int32)">
            <summary>
            Sets the alarm state and raises the associated alarm collection event.
            </summary>
            <param name="aid">The alarm ID.</param>
            <param name="ceid">The collection event ID.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.AddVariable(XyratexOSC.Factory.GemVariable)">
            <summary>
            Adds a variable GEM item.
            </summary>
            <param name="var">The variable.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ICommProvider.SetVariable(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value of the variable with the specified variable ID.
            </summary>
            <param name="vid">The variable ID.</param>
            <param name="value">The value.</param>
        </member>
        <member name="E:XyratexOSC.Factory.ICommProvider.RecipeReady">
            <summary>
            Occurs when the recipe (process program) is downloaded and ready on the Equipment computer.
            </summary>
        </member>
        <member name="E:XyratexOSC.Factory.ICommProvider.VariableChanged">
            <summary>
            Occurs when the Host has changed any variable (status, equipment constant, etc)
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.Initialize">
            <summary>
            Initializes the communication provider.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.Uninitialize">
            <summary>
            Uninitializes the communication provider.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.Connect">
            <summary>
            Opens connection to Continuum system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.CheckConnection">
            <summary>
            Checks connection to Continuum system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.Disconnect">
            <summary>
            Closes connection to Continuum system.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.AttemptOnline">
            <summary>
            Attempts to connect to the factory host.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.Offline">
            <summary>
            Attempts to disconnect from the factory host.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.GetHostState">
            <summary>
            Gets the Host communication state as determined from the last GEM box heartbeat.
            </summary>
            <returns>The resulting host communication state.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.GetToolState">
            <summary>
            Gets the tool communication state.
            </summary>
            <returns>The tool communication state.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.RaiseEvent(System.Int32,System.Int32)">
            <summary>
            Raises the collection event specified by the CEID.
            </summary>
            <param name="ceid">The CEID.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.AddAlarm(XyratexOSC.Factory.GemAlarm)">
            <summary>
            Adds an alarm GEM item.
            </summary>
            <param name="alarm">The alarm.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.RaiseAlarm(System.Int32,System.Int32)">
            <summary>
            Sets the alarm state and raises the associated alarm collection event.
            </summary>
            <param name="aid">The alarm ID.</param>
            <param name="ceid">The collection event ID.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.ClearAlarm(System.Int32,System.Int32)">
            <summary>
            Sets the alarm state and raises the associated alarm collection event.
            </summary>
            <param name="aid">The alarm ID.</param>
            <param name="ceid">The collection event ID.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.AddVariable(XyratexOSC.Factory.GemVariable)">
            <summary>
            Adds a variable GEM item.
            </summary>
            <param name="var">The variable.</param>
        </member>
        <member name="M:XyratexOSC.Factory.ContinuumProvider.SetVariable(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value of the variable with the specified variable ID.
            </summary>
            <param name="vid">The variable ID.</param>
            <param name="value">The value.</param>
        </member>
        <member name="E:XyratexOSC.Factory.ContinuumProvider.RecipeReady">
            <summary>
            Occurs when the recipe (process program) is downloaded and ready on the Equipment computer.
            </summary>
        </member>
        <member name="E:XyratexOSC.Factory.ContinuumProvider.VariableChanged">
            <summary>
            Occurs when the Host has changed any variable (status, equipment constant, etc)
            </summary>
        </member>
        <member name="T:XyratexOSC.Factory.DataVariable`1">
            <summary>
            Represents a Data Variable (read-only and volatile). These variables are associated with events.
            </summary>
        </member>
        <member name="T:XyratexOSC.Factory.ECVariable`1">
            <summary>
            Represents an Equipment Constant Variable properties.
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.EquipmentPort.RemoveGemItem(System.Int32)">
            <summary>
            Removes the GEM variable specified by ID from the public data store.
            </summary>
            <param name="data">The data item.</param>
        </member>
        <member name="P:XyratexOSC.Factory.EquipmentPort.HeartbeatInterval">
            <summary>
            Gets or sets the communications heart beat interval in seconds.
            </summary>
            <value>
            The heart beat interval in seconds.
            </value>
        </member>
        <member name="F:XyratexOSC.Factory.HostState.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:XyratexOSC.Factory.HostState.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="P:XyratexOSC.Factory.RecipeEventArgs.Filepath">
            <summary>
            Gets or sets the filepath for the recipe.
            </summary>
            <value>
            The recipe filepath.
            </value>
        </member>
        <member name="T:XyratexOSC.Factory.SecsASCII">
            <summary>
            Secs II ASCII Encoded string
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsASCII"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsASCII"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsASCII"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="startIndex">The start index.</param>
            <param name="length">The length.</param>
            <exception cref="T:System.ArgumentNullException">data</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            startIndex
            or
            length
            </exception>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsASCII"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.Clone">
            <summary>
            Returns a reference to this instance of <see cref="T:XyratexOSC.Factory.SecsASCII"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates 
            whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.CompareTo(XyratexOSC.Factory.SecsASCII)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates 
            whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsASCII"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsASCII"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsASCII"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.op_Equality(XyratexOSC.Factory.SecsASCII,XyratexOSC.Factory.SecsASCII)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsASCII"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.op_Inequality(XyratexOSC.Factory.SecsASCII,XyratexOSC.Factory.SecsASCII)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsASCII"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.op_Implicit(XyratexOSC.Factory.SecsASCII)~System.String">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsASCII"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCII.op_Implicit(System.String)~XyratexOSC.Factory.SecsASCII">
            <summary>
            Implicit conversion from <see cref="T:System.String"/> to <see cref="T:XyratexOSC.Factory.SecsASCII"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.Factory.SecsASCII.Length">
            <summary>
            Gets the number of ASCII characters in the current ASCII string.
            </summary>
            <value>
            The ASCII string length.
            </value>
        </member>
        <member name="P:XyratexOSC.Factory.SecsASCII.Item(System.Int32)">
            <summary>
            Gets the ASCII <see cref="T:System.Byte"/> at the specified index.
            </summary>
            <value>
            The ASCII <see cref="T:System.Byte"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCIIChar.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates 
            whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCIIChar.CompareTo(XyratexOSC.Factory.SecsASCIIChar)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates 
            whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCIIChar.op_Implicit(System.Byte)~XyratexOSC.Factory.SecsASCIIChar">
            <summary>
            Implicit conversion from <see cref="T:System.Byte"/> to <see cref="T:XyratexOSC.Factory.SecsASCIIChar"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsASCIIChar.op_Implicit(XyratexOSC.Factory.SecsASCIIChar)~System.Byte">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsASCIIChar"/> to <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsBool">
            <summary>
            Secs II boolean data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsBool"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.CompareTo(XyratexOSC.Factory.SecsBool)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsBool"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsBool"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsBool"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsBool"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.op_Equality(XyratexOSC.Factory.SecsBool,XyratexOSC.Factory.SecsBool)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsBool"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.op_Inequality(XyratexOSC.Factory.SecsBool,XyratexOSC.Factory.SecsBool)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsBool"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.op_LogicalNot(XyratexOSC.Factory.SecsBool)">
            <summary>
            Performs logical negation on the <see cref="T:XyratexOSC.Factory.SecsBool"/> value.
            </summary>
            <param name="value">The value</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.op_Implicit(System.Boolean)~XyratexOSC.Factory.SecsBool">
            <summary>
            Implicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:XyratexOSC.Factory.SecsBool"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsBool.op_Implicit(XyratexOSC.Factory.SecsBool)~System.Boolean">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsBool"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsInt16">
            <summary>
            Secs II 16-bit signed integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsInt16"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.CompareTo(XyratexOSC.Factory.SecsInt16)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsInt16"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt16"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsInt16"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt16"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_Equality(XyratexOSC.Factory.SecsInt16,XyratexOSC.Factory.SecsInt16)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt16"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_Inequality(XyratexOSC.Factory.SecsInt16,XyratexOSC.Factory.SecsInt16)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt16"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_GreaterThan(XyratexOSC.Factory.SecsInt16,XyratexOSC.Factory.SecsInt16)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt16"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_LessThan(XyratexOSC.Factory.SecsInt16,XyratexOSC.Factory.SecsInt16)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt16"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_Addition(XyratexOSC.Factory.SecsInt16,XyratexOSC.Factory.SecsInt16)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsInt16"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_Subtraction(XyratexOSC.Factory.SecsInt16,XyratexOSC.Factory.SecsInt16)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsInt16"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_UnaryNegation(XyratexOSC.Factory.SecsInt16)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsInt16"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_Implicit(System.Int16)~XyratexOSC.Factory.SecsInt16">
            <summary>
            Implicit conversion from <see cref="T:System.Int16"/> to <see cref="T:XyratexOSC.Factory.SecsInt16"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt16.op_Implicit(XyratexOSC.Factory.SecsInt16)~System.Int16">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsInt16"/> to <see cref="T:System.Int16"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsInt32">
            <summary>
            Secs II 32-bit signed integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsInt32"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.CompareTo(XyratexOSC.Factory.SecsInt32)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsInt32"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt32"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsInt32"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt32"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_Equality(XyratexOSC.Factory.SecsInt32,XyratexOSC.Factory.SecsInt32)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt32"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_Inequality(XyratexOSC.Factory.SecsInt32,XyratexOSC.Factory.SecsInt32)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt32"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_GreaterThan(XyratexOSC.Factory.SecsInt32,XyratexOSC.Factory.SecsInt32)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt32"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_LessThan(XyratexOSC.Factory.SecsInt32,XyratexOSC.Factory.SecsInt32)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt32"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_Addition(XyratexOSC.Factory.SecsInt32,XyratexOSC.Factory.SecsInt32)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsInt32"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_Subtraction(XyratexOSC.Factory.SecsInt32,XyratexOSC.Factory.SecsInt32)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsInt32"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_UnaryNegation(XyratexOSC.Factory.SecsInt32)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsInt32"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_Implicit(System.Int32)~XyratexOSC.Factory.SecsInt32">
            <summary>
            Implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:XyratexOSC.Factory.SecsInt32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt32.op_Implicit(XyratexOSC.Factory.SecsInt32)~System.Int32">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsInt32"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsInt64">
            <summary>
            Secs II 64-bit signed integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsInt64"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.CompareTo(XyratexOSC.Factory.SecsInt64)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsInt64"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt64"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsInt64"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt64"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_Equality(XyratexOSC.Factory.SecsInt64,XyratexOSC.Factory.SecsInt64)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt64"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_Inequality(XyratexOSC.Factory.SecsInt64,XyratexOSC.Factory.SecsInt64)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt64"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_GreaterThan(XyratexOSC.Factory.SecsInt64,XyratexOSC.Factory.SecsInt64)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt64"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_LessThan(XyratexOSC.Factory.SecsInt64,XyratexOSC.Factory.SecsInt64)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt64"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_Addition(XyratexOSC.Factory.SecsInt64,XyratexOSC.Factory.SecsInt64)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsInt64"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_Subtraction(XyratexOSC.Factory.SecsInt64,XyratexOSC.Factory.SecsInt64)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsInt64"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_UnaryNegation(XyratexOSC.Factory.SecsInt64)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsInt64"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_Implicit(System.Int64)~XyratexOSC.Factory.SecsInt64">
            <summary>
            Implicit conversion from <see cref="T:System.Int64"/> to <see cref="T:XyratexOSC.Factory.SecsInt64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt64.op_Implicit(XyratexOSC.Factory.SecsInt64)~System.Int64">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsInt64"/> to <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsInt8">
            <summary>
            Secs II 8-bit signed integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.#ctor(System.SByte)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsInt8"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.CompareTo(XyratexOSC.Factory.SecsInt8)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsInt8"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt8"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsInt8"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsInt8"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_Equality(XyratexOSC.Factory.SecsInt8,XyratexOSC.Factory.SecsInt8)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt8"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_Inequality(XyratexOSC.Factory.SecsInt8,XyratexOSC.Factory.SecsInt8)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsInt8"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_GreaterThan(XyratexOSC.Factory.SecsInt8,XyratexOSC.Factory.SecsInt8)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt8"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_LessThan(XyratexOSC.Factory.SecsInt8,XyratexOSC.Factory.SecsInt8)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsInt8"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_Addition(XyratexOSC.Factory.SecsInt8,XyratexOSC.Factory.SecsInt8)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsInt8"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_Subtraction(XyratexOSC.Factory.SecsInt8,XyratexOSC.Factory.SecsInt8)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsInt8"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_UnaryNegation(XyratexOSC.Factory.SecsInt8)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsInt8"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_Implicit(System.SByte)~XyratexOSC.Factory.SecsInt8">
            <summary>
            Implicit conversion from <see cref="T:System.SByte"/> to <see cref="T:XyratexOSC.Factory.SecsInt8"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsInt8.op_Implicit(XyratexOSC.Factory.SecsInt8)~System.SByte">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsInt8"/> to <see cref="T:System.SByte"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsList.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsString">
            <summary>
            Secs II Localized String. A series of Unicode characters.
            </summary>
        </member>
        <member name="T:XyratexOSC.Factory.SecsUInt16">
            <summary>
            Secs II 16-bit unsigned integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsUInt16"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.CompareTo(XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsUInt16"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsUInt16"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsUInt16"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsUInt16"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_Equality(XyratexOSC.Factory.SecsUInt16,XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt16"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_Inequality(XyratexOSC.Factory.SecsUInt16,XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt16"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_GreaterThan(XyratexOSC.Factory.SecsUInt16,XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt16"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_LessThan(XyratexOSC.Factory.SecsUInt16,XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt16"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_Addition(XyratexOSC.Factory.SecsUInt16,XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsUInt16"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_Subtraction(XyratexOSC.Factory.SecsUInt16,XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsUInt16"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_UnaryNegation(XyratexOSC.Factory.SecsUInt16)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsUInt16"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_Implicit(System.UInt16)~XyratexOSC.Factory.SecsUInt16">
            <summary>
            Implicit conversion from <see cref="T:System.UInt16"/> to <see cref="T:XyratexOSC.Factory.SecsUInt16"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt16.op_Implicit(XyratexOSC.Factory.SecsUInt16)~System.UInt16">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsUInt16"/> to <see cref="T:System.UInt16"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsUInt32">
            <summary>
            Secs II 32-bit unsigned integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsUInt32"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.CompareTo(XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsUInt32"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsUInt32"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsUInt32"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsUInt32"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_Equality(XyratexOSC.Factory.SecsUInt32,XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt32"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_Inequality(XyratexOSC.Factory.SecsUInt32,XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt32"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_GreaterThan(XyratexOSC.Factory.SecsUInt32,XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt32"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_LessThan(XyratexOSC.Factory.SecsUInt32,XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt32"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_Addition(XyratexOSC.Factory.SecsUInt32,XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsUInt32"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_Subtraction(XyratexOSC.Factory.SecsUInt32,XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsUInt32"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_UnaryNegation(XyratexOSC.Factory.SecsUInt32)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsUInt32"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_Implicit(System.UInt32)~XyratexOSC.Factory.SecsUInt32">
            <summary>
            Implicit conversion from <see cref="T:System.UInt32"/> to <see cref="T:XyratexOSC.Factory.SecsUInt32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt32.op_Implicit(XyratexOSC.Factory.SecsUInt32)~System.UInt32">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsUInt32"/> to <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsUInt64">
            <summary>
            Secs II 64-bit unsigned integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsUInt64"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.CompareTo(XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsUInt64"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="!:SecsUint64"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="!:SecsUint64"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="!:SecsUint64"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_Equality(XyratexOSC.Factory.SecsUInt64,XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt64"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_Inequality(XyratexOSC.Factory.SecsUInt64,XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt64"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_GreaterThan(XyratexOSC.Factory.SecsUInt64,XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt64"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_LessThan(XyratexOSC.Factory.SecsUInt64,XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt64"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_Addition(XyratexOSC.Factory.SecsUInt64,XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsUInt64"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_Subtraction(XyratexOSC.Factory.SecsUInt64,XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsUInt64"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_UnaryNegation(XyratexOSC.Factory.SecsUInt64)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsUInt64"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_Implicit(System.UInt64)~XyratexOSC.Factory.SecsUInt64">
            <summary>
            Implicit conversion from <see cref="T:System.UInt64"/> to <see cref="T:XyratexOSC.Factory.SecsUInt64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt64.op_Implicit(XyratexOSC.Factory.SecsUInt64)~System.UInt64">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsUInt64"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.SecsUInt8">
            <summary>
            Secs II 8-bit unsigned integer data structure
            </summary>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Factory.SecsUInt8"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.GetSECSFormat">
            <summary>
            Gets the SECS format string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.CompareTo(XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Compares this instance to a specified <see cref="T:XyratexOSC.Factory.SecsUInt8"/> object and returns an integer that indicates their relationship to one another.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsUInt8"/> instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this <see cref="T:XyratexOSC.Factory.SecsUInt8"/> instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this <see cref="T:XyratexOSC.Factory.SecsUInt8"/> instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_Equality(XyratexOSC.Factory.SecsUInt8,XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt8"/> values are equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_Inequality(XyratexOSC.Factory.SecsUInt8,XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Determines if the two <see cref="T:XyratexOSC.Factory.SecsUInt8"/> values are not equal.
            </summary>
            <param name="val1">Value 1</param>
            <param name="val2">Value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_GreaterThan(XyratexOSC.Factory.SecsUInt8,XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt8"/> value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_LessThan(XyratexOSC.Factory.SecsUInt8,XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Determines if <see cref="T:XyratexOSC.Factory.SecsUInt8"/> value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_Addition(XyratexOSC.Factory.SecsUInt8,XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Adds the two <see cref="T:XyratexOSC.Factory.SecsUInt8"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_Subtraction(XyratexOSC.Factory.SecsUInt8,XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Subtracts the two <see cref="T:XyratexOSC.Factory.SecsUInt8"/> values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_UnaryNegation(XyratexOSC.Factory.SecsUInt8)">
            <summary>
            Subtracts the specified <see cref="T:XyratexOSC.Factory.SecsUInt8"/> value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_Implicit(System.Byte)~XyratexOSC.Factory.SecsUInt8">
            <summary>
            Implicit conversion from <see cref="T:System.Byte"/> to <see cref="T:XyratexOSC.Factory.SecsUInt8"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Factory.SecsUInt8.op_Implicit(XyratexOSC.Factory.SecsUInt8)~System.Byte">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.Factory.SecsUInt8"/> to <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Factory.StatusVariable`1">
            <summary>
            Represents a Status Variable (read-only).
            </summary>
        </member>
        <member name="F:XyratexOSC.Factory.ToolState.Disabled">
            <summary>
            Disabled. Tool has no connection to Host.
            </summary>
        </member>
        <member name="F:XyratexOSC.Factory.ToolState.Offline">
            <summary>
            Offline. Tool will not attempt to connect to Host.
            </summary>
        </member>
        <member name="F:XyratexOSC.Factory.ToolState.OfflineAttemptOnline">
            <summary>
            Offline. Tool will attempt to connect to Host.
            </summary>
        </member>
        <member name="F:XyratexOSC.Factory.ToolState.OnlineLocal">
            <summary>
            Online. Local Control.
            </summary>
        </member>
        <member name="F:XyratexOSC.Factory.ToolState.OnlineRemote">
            <summary>
            Online. Host (Remote) Control.
            </summary>
        </member>
        <member name="T:XyratexOSC.Hardware.DeviceException">
            <summary>
            Represents an error that occured on a specific hardware device
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceException.#ctor(XyratexOSC.Hardware.IDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Hardware.DeviceException"/> class.
            </summary>
            <param name="device">The hardware device.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceException.#ctor(XyratexOSC.Hardware.IDevice,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Hardware.DeviceException"/> class.
            </summary>
            <param name="device">The hardware device.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceException.#ctor(XyratexOSC.Hardware.IDevice,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Hardware.DeviceException"/> class.
            </summary>
            <param name="device">The hardware device.</param>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:XyratexOSC.Hardware.DeviceException.Device">
            <summary>
            Gets or sets the hardware device.
            </summary>
            <value>
            The hardware device.
            </value>
        </member>
        <member name="T:XyratexOSC.Hardware.DeviceManager">
            <summary>
            Manages all of our hardware devices/controllers and the software abstractions for interacting with those devices.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Hardware.DeviceManager"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:XyratexOSC.Hardware.DeviceManager"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.ResolveDevices">
            <summary>
            Resolves all of the <see cref="T:XyratexOSC.Hardware.IDevice"/>s available to our application.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.GetDevice(System.String)">
            <summary>
            Gets the hardware device with the specified name.
            </summary>
            <param name="deviceName">Name of the device.</param>
            <returns>The device.</returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.GetDevice(System.String,XyratexOSC.Hardware.IDevicePort)">
            <summary>
            Gets the hardware device of the specified type name and the specified port.
            </summary>
            <param name="deviceType">Type of the device.</param>
            <param name="port">The port.</param>
            <returns>The device.</returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.GetValidDeviceNames">
            <summary>
            Gets a list of all the valid device names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.FindOrCreateDevices(XyratexOSC.Settings.SettingsNode,System.Collections.Generic.IList{XyratexOSC.Settings.SettingsNode}@)">
            <summary>
            Finds or creates all of the devices specified in the settings node tree.
            </summary>
            <param name="settings">The settings node tree.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.FindOrCreateDevice(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Finds or creates the device specified in the settings node tree.
            </summary>
            <param name="deviceNode">The device node.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.FindOrCreateDevice(System.String)">
            <summary>
            Finds or creates the device with the following name or type/port shorthand.
            </summary>
            <param name="nameOrShorthand">The device name or type/port shorthand.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.CreatePort(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Creates a port from the specified settings node tree.
            </summary>
            <param name="portNode">The port node.</param>
            <returns>The device port.</returns>
            <exception cref="T:System.Exception">
            Invalid port format.
            </exception>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.CreatePort(System.String)">
            <summary>
            Creates the port for the specified port shorthand.
            </summary>
            <param name="portShorthand">The port shorthand.</param>
            <returns>The device port.</returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.AddDevices(System.Collections.Generic.IEnumerable{XyratexOSC.Hardware.IDevice})">
            <summary>
            Adds the specified devices to our managed list.
            </summary>
            <param name="devices">The devices.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.AddDevice(XyratexOSC.Hardware.IDevice)">
            <summary>
            Adds the specified device to our managed list.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.RemoveDevice(XyratexOSC.Hardware.IDevice)">
            <summary>
            Removes the specified device from our managed list.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.RemoveDevice(System.String)">
            <summary>
            Removes the device with the specified name from our managed list.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.IsAvailable(System.String)">
            <summary>
            Determines whether the device with the specified name is available.
            </summary>
            <param name="deviceName">Name of the device.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.IsConnected(System.String)">
            <summary>
            Determines whether the device with the specified name is connected.
            </summary>
            <param name="deviceName">Name of the device.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceManager.IsReady(System.String)">
            <summary>
            Determines whether the device with the specified name is initialized.
            </summary>
            <param name="deviceName">Name of the device.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.Hardware.DeviceManager.Instance">
            <summary>
            Gets the <see cref="T:XyratexOSC.Hardware.DeviceManager"/> instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.DeviceManager.Devices">
            <summary>
            Gets the hardware devices.
            </summary>
            <value>
            The hardware devices.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.DeviceManager.Parts">
            <summary>
            Gets the part abstractions.
            </summary>
            <value>
            The part abstractions.
            </value>
        </member>
        <member name="T:XyratexOSC.Hardware.DeviceNamesAttribute">
            <summary>
            Attribute for defining the valid device names for configuring an <see cref="T:XyratexOSC.Hardware.IDevice"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DeviceNamesAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Hardware.DeviceNamesAttribute"/> class.
            </summary>
            <param name="names">The names.</param>
        </member>
        <member name="P:XyratexOSC.Hardware.DeviceNamesAttribute.Names">
            <summary>
            Gets or sets the valid device names.
            </summary>
            <value>
            The names.
            </value>
        </member>
        <member name="T:XyratexOSC.Hardware.IDevicePort">
            <summary>
            Represents the details required to connect to a device over a communication port.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.DevicePortNumber.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DevicePortNumber.op_LessThan(XyratexOSC.Hardware.DevicePortNumber,XyratexOSC.Hardware.DevicePortNumber)">
            <summary>
            Determines if the left hand port is less than the right hand port.
            </summary>
            <param name="port1">The port1.</param>
            <param name="port2">The port2.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Hardware.DevicePortNumber.op_GreaterThan(XyratexOSC.Hardware.DevicePortNumber,XyratexOSC.Hardware.DevicePortNumber)">
            <summary>
            Determines if the left hand port is greater than the right hand port.
            </summary>
            <param name="port1">The port1.</param>
            <param name="port2">The port2.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.Hardware.DevicePortTcp.Address">
            <summary>
            Gets or sets the device's IP address.
            </summary>
            <value>
            The device IP address.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.DevicePortTcp.Port">
            <summary>
            Gets or sets the device's IP port.
            </summary>
            <value>
            The device IP port.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.DevicePortTcp.ReplyAddress">
            <summary>
            Gets or sets the application IP address for device responses.
            </summary>
            <value>
            The application IP address.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.DevicePortTcp.ReplyPort">
            <summary>
            Gets or sets the application IP port for device responses.
            </summary>
            <value>
            The application IP port.
            </value>
        </member>
        <member name="T:XyratexOSC.Hardware.IDevice">
            <summary>
            Represents a hardware device with a single-point of communication, ie. controllers.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.IDevice.Open">
            <summary>
            Opens a connection to this device using the device's specified <see cref="P:XyratexOSC.Hardware.IDevice.Port"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.IDevice.Close">
            <summary>
            Closes the connection to this device.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.IDevice.Configure(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Configures the device based on the specified device settings. This is called before <see cref="T:XyratexOSC.Hardware.IPart"/> creation.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.IDevice.Initialize">
            <summary>
            Initializes the device.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.IDevice.Uninitialize">
            <summary>
            Uninitializes the device.
            </summary>
        </member>
        <member name="P:XyratexOSC.Hardware.IDevice.Port">
            <summary>
            Represents the port details for connecting to this device.
            </summary>
            <value>
            The port details.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.IDevice.Simulated">
            <summary>
            Gets or sets a value indicating whether this is a simulated device.
            </summary>
            <value>
              <c>true</c> if simulated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.IDevice.Logging">
            <summary>
            Gets or sets a value indicating whether device logging is enabled. This is low-level logging used for debugging.
            </summary>
            <value>
              <c>true</c> if logging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.IDevice.Connected">
            <summary>
            Gets a value indicating whether this device is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.IDevice.Initialized">
            <summary>
            Gets a value indicating whether this device is initialized.
            </summary>
            <value>
              <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XyratexOSC.Hardware.HardwareComponent`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.HardwareComponent`2.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="managed"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.HardwareComponent`2.Initialize(System.String[])">
            <summary>
            Initializes the specified configuration files.
            </summary>
            <param name="configFiles">The configuration files.</param>
        </member>
        <member name="M:XyratexOSC.Hardware.HardwareComponent`2.RegisterParts(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Registers all parts to their parent device. This is called after <see cref="T:XyratexOSC.Hardware.IPart"/> creation.
            </summary>
        </member>
        <member name="M:XyratexOSC.Hardware.HardwareComponent`2.TrySpecificInit(XyratexOSC.Settings.SettingsNode,System.Collections.Generic.IList{`1}@)">
            <summary>
            Initializes this HardwareComponent using the V1 config files. This is only used when no parts were found on the first pass.
            </summary>
        </member>
        <member name="P:XyratexOSC.Hardware.HardwareComponent`2.Name">
            <summary>
            Gets or sets the component name, which is used for logging and can be used for identifying a component.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:XyratexOSC.Hardware.HardwareComponent`2.DefaultDeviceName">
            <summary>
            Gets or sets the device name to be used for parts that do not explicitly specify a device.
            </summary>
            <value>
            The name of the default device.
            </value>
        </member>
        <member name="P:XyratexOSC.Hardware.HardwareComponent`2.ConfigFilePath">
            <summary>
            Gets or sets the tabbed configuration file.
            </summary>
            <value>The configuration file.</value>
        </member>
        <member name="P:XyratexOSC.Hardware.HardwareComponent`2.Initialized">
            <summary>
            Gets a value indicating whether all of the associated hardware devices are initialized.
            </summary>
            <value>
              <c>true</c> if all initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XyratexOSC.INamedList`1.GetNames">
            <summary>
            Gets the names of all of the elements in this list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.INamedList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:INamedList`1"/>.
            </summary>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:INamedList`1"/>. The collection itself cannot be null, but it can contain elements that are null, if type <paramref name="T"/> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="collection"/> is null.
            </exception>
        </member>
        <member name="M:XyratexOSC.INamedList`1.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:XyratexOSC.INamed"/> element with the specified name exists in this <see cref="T:INamedList`1"/>.
            </summary>
            <param name="name">The name.</param>
            <returns>true if an element with the specified name exists in this <see cref="T:INamedList`1"/>; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.INamedList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into the <see cref="T:INamedList`1"/> at the specified index.
            
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the <see cref="T:INamedList`1"/>. The collection itself cannot be null, but it can contain elements that are null, if type <paramref name="T"/> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="collection"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> is less than 0.
                        -or-
                <paramref name="index"/> is greater than <see cref="P:INamedList`1.Count"/>.
            </exception>
        </member>
        <member name="E:XyratexOSC.INamedList`1.ListChanged">
            <summary>
            Occurs when the list has changed.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.IIODevice.RegisterDIBit(XyratexOSC.IO.DIBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DIBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DIBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.IIODevice.RegisterDOBit(XyratexOSC.IO.DOBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DOBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DOBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.IIODevice.RegisterAIBit(XyratexOSC.IO.AIBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.AIBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.AIBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.IIODevice.RegisterAOBit(XyratexOSC.IO.AOBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.AOBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.AOBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.IIODevice.RegisterDIWord(XyratexOSC.IO.DIWord)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DIWord"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DIWord"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.IIODevice.RegisterDOWord(XyratexOSC.IO.DOWord)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DOWord"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DOWord"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.Open">
            <summary>
            Opens a connection to this device using the device's specified <see cref="P:XyratexOSC.IO.Devices.Moxa1200.Port"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.Close">
            <summary>
            Closes the connection to this device.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.Configure(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Configures the device based on the specified device settings. This is called before <see cref="T:XyratexOSC.Hardware.IPart"/> creation.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.RegisterDIBit(XyratexOSC.IO.DIBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DIBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DIBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.RegisterDOBit(XyratexOSC.IO.DOBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DOBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DOBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.RegisterAIBit(XyratexOSC.IO.AIBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.AIBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.AIBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.RegisterAOBit(XyratexOSC.IO.AOBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.AOBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.AOBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.RegisterDIWord(XyratexOSC.IO.DIWord)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DIWord"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DIWord"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.RegisterDOWord(XyratexOSC.IO.DOWord)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DOWord"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DOWord"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.Initialize">
            <summary>
            Initializes the device.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.Moxa1200.Uninitialize">
            <summary>
            Uninitializes the device.
            </summary>
        </member>
        <member name="P:XyratexOSC.IO.Devices.Moxa1200.Name">
            <summary>
            Gets or sets the Moxa1200 device name.
            </summary>
            <value>
            The device name.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.Moxa1200.Port">
            <summary>
            Represents the port details for connecting to this device.
            </summary>
            <value>
            The port details.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.Moxa1200.Simulated">
            <summary>
            Gets or sets a value indicating whether this is a simulated device.
            </summary>
            <value>
              <c>true</c> if simulated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.Moxa1200.Logging">
            <summary>
            Gets or sets a value indicating whether device logging is enabled. This is low-level logging used for debugging.
            </summary>
            <value>
              <c>true</c> if logging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.Moxa1200.Connected">
            <summary>
            Gets a value indicating whether this device is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.Moxa1200.Initialized">
            <summary>
            Gets a value indicating whether this device is initialized.
            </summary>
            <value>
              <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MOXA.MoxaStatus">
            <summary>
            Represents a MOXA device return status
            </summary>
            <remarks>
            Added to MOXA API by Xyratex
            </remarks>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.Open">
            <summary>
            Opens a connection to this device using the device's specified <see cref="P:XyratexOSC.IO.Devices.SimIO.Port"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.Close">
            <summary>
            Closes the connection to this device.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.Configure(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Configures the device based on the specified device settings. This is called before <see cref="T:XyratexOSC.Hardware.IPart"/> creation.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.RegisterDIBit(XyratexOSC.IO.DIBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DIBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DIBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.RegisterDOBit(XyratexOSC.IO.DOBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DOBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DOBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.RegisterAIBit(XyratexOSC.IO.AIBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.AIBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.AIBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.RegisterAOBit(XyratexOSC.IO.AOBit)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.AOBit"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.AOBit"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.RegisterDIWord(XyratexOSC.IO.DIWord)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DIWord"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DIWord"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.RegisterDOWord(XyratexOSC.IO.DOWord)">
            <summary>
            Registers the specified <see cref="T:XyratexOSC.IO.DOWord"/> with this device.
            </summary>
            <param name="part">The <see cref="T:XyratexOSC.IO.DOWord"/>.</param>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.Initialize">
            <summary>
            Initializes the device.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.Devices.SimIO.Uninitialize">
            <summary>
            Uninitializes the device.
            </summary>
        </member>
        <member name="P:XyratexOSC.IO.Devices.SimIO.Port">
            <summary>
            Represents the port details for connecting to this device.
            </summary>
            <value>
            The port details.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.SimIO.Simulated">
            <summary>
            Gets or sets a value indicating whether this is a simulated device.
            </summary>
            <value>
              <c>true</c> if simulated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.SimIO.Logging">
            <summary>
            Gets or sets a value indicating whether device logging is enabled. This is low-level logging used for debugging.
            </summary>
            <value>
              <c>true</c> if logging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.SimIO.Connected">
            <summary>
            Gets a value indicating whether this device is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.Devices.SimIO.Initialized">
            <summary>
            Gets a value indicating whether this device is initialized.
            </summary>
            <value>
              <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.Set(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DOBit},System.Boolean[])">
            <summary>
            Sets the digital output values for the specified DO bits.
            </summary>
            <param name="bits">The DO bits.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.SetValues(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DOBit},System.Int32[])">
            <summary>
            Sets the digital output values for the specified DO bits.
            </summary>
            <param name="bits">The DO bits.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.Set(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DIBit},System.Boolean[])">
            <summary>
            Sets the digital input values for the specified DI bits.
            </summary>
            <param name="bits">The DI bits.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.SetValues(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DIBit},System.Int32[])">
            <summary>
            Sets the digital input values for the specified DI bits.
            </summary>
            <param name="bits">The DI bits.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.Get(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DIBit})">
            <summary>
            Gets the digital input values for the specified DI bits.
            </summary>
            <param name="bits">The DI bits.</param>
            <returns>The values.</returns>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.GetValues(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DIBit})">
            <summary>
            Gets the digital input values for the specified DI bits.
            </summary>
            <param name="bits">The DI bits.</param>
            <returns>The values.</returns>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.Get(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DOBit})">
            <summary>
            Gets the digital output values for the specified DO bits.
            </summary>
            <param name="bits">The DO bits.</param>
            <returns>The values.</returns>
        </member>
        <member name="M:XyratexOSC.IO.DIOBitExtensions.GetValues(System.Collections.Generic.IEnumerable{XyratexOSC.IO.DOBit})">
            <summary>
            Gets the digital output values for the specified DO bits.
            </summary>
            <param name="bits">The DO bits.</param>
            <returns>The values.</returns>
        </member>
        <member name="M:XyratexOSC.IO.IOComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.IOComponent"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.IOComponent.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:XyratexOSC.IO.IOComponent"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.IOComponent.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="managed"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XyratexOSC.IO.IOComponent.TrySpecificInit(XyratexOSC.Settings.SettingsNode,System.Collections.Generic.IList{XyratexOSC.IO.IIOPart}@)">
            <summary>
            Initializes the IOComponent using the old config files.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.IOComponent.CreateIOParts(System.Collections.Generic.IEnumerable{System.String},XyratexOSC.IO.IOComponent.IOPartType,System.Collections.Generic.IList{XyratexOSC.IO.IIOPart}@)">
            <summary>
            Creates the IO parts from comma separated strings.
            Uses the format "Name,Device,Channel,
            </summary>
            <param name="partLines">The bit lines.</param>
            <param name="ioParts">The io bits.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.IO.IOComponent.RegisterParts(System.Collections.Generic.IEnumerable{XyratexOSC.IO.IIOPart})">
            <summary>
            Registers all parts to their parent device. This is called after <see cref="T:XyratexOSC.Hardware.IPart"/> creation.
            </summary>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.Instance">
            <summary>
            Gets the IOComponent instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.Name">
            <summary>
            The component name, which is used for logging and can be used for identifying a component.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.INBIT_DOOR_STAT">
            <summary>
            The index for the door status input-bit. Use this bit to monitor the machine door.
            </summary>
            <value>The door status input bit.</value>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.INBIT_ESTOP_STAT">
            <summary>
            The index for the estop-pressed status input-bit. Use this bit to monitor the estop.
            </summary>
            <value>The estop status input bit.</value>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.INBIT_AMP_ENABLED">
            <summary>
            The index for the amplifiers enabled input-bit. Use this bit to monitor if the amps are on.
            </summary>
            <value>The amp enabled input bit.</value>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_AMP_ENABLE">
            <summary>
            The index for the amplifiers enabled output-bit.
            </summary>
            <value>The amp enabled output bit.</value>
            <remarks>
            Use the <see cref="!:EnableAmplifiers"/> function for enabling the amplifiers.
            </remarks>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_SAFETY_OVERRIDE">
             <summary>
            The index for the safety override output-bit.
             </summary>
             <value>The safety override output bit.</value>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_AMP_LATCH">
            <summary>
            The index for the amplifiers latch output-bit.
            </summary>
            <value>The amp latch output bit.</value>
            <remarks>
            Use the <see cref="!:EnableAmplifiers"/> function for enabling the amplifiers.
            </remarks>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_LIGHT_RED">
            <summary>Output Bit: Red LED Indicator</summary>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_LIGHT_YELLOW">
            <summary>Output Bit: Yellow LED Indicator</summary>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_LIGHT_GREEN">
            <summary>Output Bit: Green LED Indicator</summary>
        </member>
        <member name="P:XyratexOSC.IO.IOComponent.OUTBIT_LIGHT_BLUE">
            <summary>Output Bit: Blue LED Indicator</summary>
        </member>
        <member name="T:XyratexOSC.IO.IOException">
            <summary>
            Represents errors that occur within the <see cref="T:XyratexOSC.IO.IOComponent"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.IOException.#ctor(XyratexOSC.IO.Devices.IIODevice)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.IOException"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.IOException.#ctor(XyratexOSC.IO.Devices.IIODevice,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.IOException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:XyratexOSC.IO.IOException.#ctor(XyratexOSC.IO.Devices.IIODevice,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.IOException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:XyratexOSC.IO.LightStackColor">
            <summary>
            Specifies the on/off states of all the lights in the lightstack.
            </summary>
        </member>
        <member name="F:XyratexOSC.IO.LightStackColor.Off">
            <summary>Light Stack: Off</summary>
        </member>
        <member name="F:XyratexOSC.IO.LightStackColor.Green">
            <summary>Light Stack: Green</summary>
        </member>
        <member name="F:XyratexOSC.IO.LightStackColor.Yellow">
            <summary>Light Stack: Yellow</summary>
        </member>
        <member name="F:XyratexOSC.IO.LightStackColor.Red">
            <summary>Light Stack: Red</summary>
        </member>
        <member name="F:XyratexOSC.IO.LightStackColor.Blue">
            <summary>Light Stack: Blue</summary>
        </member>
        <member name="F:XyratexOSC.IO.LightStackColor.All">
            <summary>Light Stack: All</summary>
        </member>
        <member name="T:XyratexOSC.IO.LightTower">
            <summary>
            Represents a light tower beacon
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.LightTower"/> class using the 
            default DO bit names : 'BeaconRed','BeaconYellow','BeaconGeen','BeaconBlue'.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.LightTower"/> class.
            </summary>
            <param name="redName">Name of the red DO bit.</param>
            <param name="yellowName">Name of the yellow DO bit.</param>
            <param name="greenName">Name of the green DO bit.</param>
            <param name="blueName">Name of the blue DO bit.</param>
            <exception cref="T:System.ArgumentException">
            redName
            or
            yellowName 
            or
            greenName
            or
            blueName
            </exception>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.#ctor(XyratexOSC.IO.DOBit,XyratexOSC.IO.DOBit,XyratexOSC.IO.DOBit,XyratexOSC.IO.DOBit)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.LightTower"/> class.
            </summary>
            <param name="red">The red DO bit.</param>
            <param name="yellow">The yellow DO bit.</param>
            <param name="green">The green DO bit.</param>
            <param name="blue">The blue DO bit.</param>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.Blink(XyratexOSC.IO.LightStackColor)">
            <summary>
            Sets the specified colors to blink at every half-second interval.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.Steady(XyratexOSC.IO.LightStackColor)">
            <summary>
            Sets the specified colors to steady on.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.Off(XyratexOSC.IO.LightStackColor)">
            <summary>
            Turns off the specified colors.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.GetStack">
            <summary>
            Gets the current stack colors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.GetBlink">
            <summary>
            Gets the current blinking stack colors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.IO.LightTower.GetSteady">
            <summary>
            Gets the current steady stack colors.
            </summary>
            <returns></returns>
        </member>
        <member name="E:XyratexOSC.IO.LightTower.StackUpdate">
            <summary>
            Event to update light stack in the UI at the same timer as the blinking timer
            </summary>
        </member>
        <member name="T:XyratexOSC.IO.LightStackEventArgs">
            <summary>
            Light Stack event data.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.LightStackEventArgs.#ctor(XyratexOSC.IO.LightStackColor)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.LightStackEventArgs"/> class.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="P:XyratexOSC.IO.LightStackEventArgs.Colors">
            <summary>
            Gets or sets the current light stack colors.
            </summary>
            <value>
            The colors.
            </value>
        </member>
        <member name="T:XyratexOSC.IO.UI.IOPanel">
            <summary>
            Provides a paged arrangement of LED controls that represent machine IO bits
            </summary>
        </member>
        <member name="F:XyratexOSC.IO.UI.IOPanel.NUM_IO_DISPLAY">
            <summary>The number of I/O bits displayed at a time.</summary>
        </member>
        <member name="F:XyratexOSC.IO.UI.IOPanel.EXP_HEIGHT_DIFF">
            <summary>The added height difference with the I/O names showing.</summary>
        </member>
        <member name="M:XyratexOSC.IO.UI.IOPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.IO.UI.IOPanel"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.UI.IOPanel.UpdateState">
            <summary>
            Gets the I/O bits values.
            </summary>
        </member>
        <member name="F:XyratexOSC.IO.UI.IOPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.IO.UI.IOPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.IO.UI.IOPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.IO.UI.IOPanel.ShowNames">
            <summary>
            Gets or sets a value indicating whether to display each IO bit label.
            </summary>
            <value>
              <c>true</c> if displaying names; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XyratexOSC.NamedList`1.GetNames">
            <summary>
            Gets the names of all of the items in this collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.NamedList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into the <see cref="!:NamedList'1"/> at the specified index.
            
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1"/>. The collection itself cannot be null, but it can contain elements that are null, if type <paramref name="T"/> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0.
                                -or-
            <paramref name="index"/> is greater than <see cref="P:NamedList`1.Count"/>.
            </exception>
        </member>
        <member name="M:XyratexOSC.NamedList`1.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.Collection`1"/> contains a specific name.
            </summary>
            <param name="name">The item name.</param>
            <returns>
              <c>true</c> if the specified name is found; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:XyratexOSC.UI.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.DataConverter`1">
            <summary>
            Provides a type converter to convert expandable objects of the specified genertic type to a string representation.
            </summary>
            <typeparam name="T">Any type</typeparam>
        </member>
        <member name="M:XyratexOSC.UI.DataConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.UI.DataConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information. Converts to string using the object's ToString().
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="F:XyratexOSC.UI.IPAddressTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.IPAddressTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.IPAddressTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.LEDButton">
            <summary>
            Provides a clickable LED indicator with on/pressed/off states. Used for IO bits.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.LEDButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.LEDButton"/> class.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.LEDButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.LEDButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.LEDButton.Color">
            <summary>
            Gets or sets the LED color.
            </summary>
            <value>
            The LED color.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.LEDButton.ReadOnly">
            <summary>
            Gets or sets a value indicating whether this LED button accepts user input.
            </summary>
            <value>
              <c>true</c> if the LED rejects user input; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.LEDButton.ShowFocusCues">
            <summary>
            Gets a value indicating whether the control should display focus rectangles.
            </summary>
            <returns>true if the control should display focus rectangles; otherwise, false.</returns>
        </member>
        <member name="T:XyratexOSC.UI.LEDColor">
            <summary>
            LED Indicator Colors
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDColor.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDColor.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDColor.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDColor.Orange">
            <summary>
            Orange
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDColor.Yellow">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.LEDIndicator">
            <summary>
            Provides an LED indicator with on/off states
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.LEDIndicator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.LEDIndicator"/> class.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.LEDIndicator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.LEDIndicator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.LEDIndicator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.LEDIndicator.Color">
            <summary>
            Gets or sets the LED color.
            </summary>
            <value>
            The LED color.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.LEDIndicator.On">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:XyratexOSC.UI.LEDIndicator"/> is on.
            </summary>
            <value>
              <c>true</c> if on; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.YesNoConverter">
            <summary>
            Provides a type converter to convert <see cref="T:System.Boolean"/> objects to "Yes"/"No" representations.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.YesNoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:XyratexOSC.UI.YesNoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given value object to a Boolean object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to which to convert.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.
            </returns>
        </member>
        <member name="T:XyratexOSC.Utilities.IBufferedValue">
            <summary>
            Public interface for generic BufferedValue class.
            </summary>
        </member>
        <member name="P:XyratexOSC.Utilities.IBufferedValue.Name">
            <summary>
            Readonly accessor for the Name of the BufferedValue variable.
            </summary>
        </member>
        <member name="P:XyratexOSC.Utilities.IBufferedValue.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:XyratexOSC.Utilities.IBufferedValue`1">
            <summary>
            Public generic interface for generic BufferedValue class.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XyratexOSC.Utilities.IBufferedValue`1.Value">
            <summary>
            Accessor for generic Value object
            </summary>
        </member>
        <member name="E:XyratexOSC.Utilities.IBufferedValue`1.ValueChanged">
            <summary>
            EventHandler for when the value variable is updated.
            </summary>
        </member>
        <member name="T:XyratexOSC.Utilities.BufferedValue`1">
            <summary>
            A generic BufferedValue class to be used for settings variables
            to create a binding when values are updated.
            This is a thread safe class.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XyratexOSC.Utilities.BufferedValue`1.#ctor(System.String,`0)">
            <summary>
            A generic BufferedValue class to be used for settings variables
            to create a binding when values are updated.
            </summary>
            <param name="name"></param>
            <param name="settingVariable"></param>
        </member>
        <member name="M:XyratexOSC.Utilities.BufferedValue`1.ChangeType(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Utilities.BufferedValue`1.ToString">
            <summary>
            Returns an string with variable name and current value.
            </summary>
            <returns></returns>
        </member>
        <member name="E:XyratexOSC.Utilities.BufferedValue`1.ValueChanged">
            <summary>
            EventHandler for when the value variable is updated.
            </summary>
        </member>
        <member name="P:XyratexOSC.Utilities.BufferedValue`1.Name">
            <summary>
            Readonly accessor for the Name of the BufferedValue variable.
            </summary>
        </member>
        <member name="P:XyratexOSC.Utilities.BufferedValue`1.Value">
            <summary>
            Read/Write accessor for generic value object T.
            </summary>
        </member>
        <member name="T:XyratexOSC.Utilities.ValueChangedArg`1">
            <summary>
            Event arguments used with the ValueChanged EventHandler.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XyratexOSC.Utilities.ValueChangedArg`1.#ctor(System.String,`0,`0)">
            <summary>
            Constructor for the ValueChangedArg.
            </summary>
            <param name="name"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:XyratexOSC.Utilities.ValueChangedArg`1.Name">
            <summary>
            Readonly accessor for the variable that represents Name of the object.
            </summary>
        </member>
        <member name="P:XyratexOSC.Utilities.ValueChangedArg`1.OldValue">
            <summary>
            Readonly accessor for the variable that represents value before it was updated.
            </summary>
        </member>
        <member name="P:XyratexOSC.Utilities.ValueChangedArg`1.NewValue">
            <summary>
            Readonly accessor for the variable that represent the new value.
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.EventExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires this event only if any listeners are attached
            </summary>
            <typeparam name="T">EventArgs Type</typeparam>
            <param name="event"></param>
            <param name="sender">The source of the event.</param>
            <param name="e">An object that contains the event data.</param>
        </member>
        <member name="M:XyratexOSC.Utilities.EventExtensions.SafeInvoke(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            Fires this event only if any listeners are attached
            </summary>
            <param name="event"></param>
            <param name="sender">The source of the event.</param>
            <param name="e">An object that contains the event data.</param>
        </member>
        <member name="T:XyratexOSC.XMath.Int128">
            <summary>
            Int128 struct (enables safe math on signed 64bit integers).
            </summary>
            <remarks>
            eg. Int128 val1((Int64)9223372036854775807); //ie 2^63 -1
                Int128 val2((Int64)9223372036854775807);
                Int128 val3 = val1 * val2;
                val3.ToString => "85070591730234615847396907784232501249" (8.5e+37)
            </remarks>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Int128"/> struct.
            </summary>
            <param name="lo">The 64-bit lo value.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Int128"/> struct.
            </summary>
            <param name="lo">The 64-bit lo value.</param>
            <param name="hi">The 64-bit hi value.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.#ctor(XyratexOSC.XMath.Int128)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Int128"/> struct.
            </summary>
            <param name="val">The 128-bit value.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.IsNegative">
            <summary>
            Determines whether this 128-bit Integer is negative.
            </summary>
            <returns>
              <c>true</c> if this 128-bit Integer is negative; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_Equality(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Determines if the two 128-bit integers are equal.
            </summary>
            <param name="val1">Int128 value 1</param>
            <param name="val2">Int128 value 2</param>
            <returns>True, if equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_Inequality(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Determines if the two 128-bit integers are not equal.
            </summary>
            <param name="val1">Int128 value 1</param>
            <param name="val2">Int128 value 2</param>
            <returns>True, if not equal; otherwise, false.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this 128-bit Integer instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_GreaterThan(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Determines if 128-bit integer value 1 is greater than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if greater than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_LessThan(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Determines if 128-bit integer value 1 is less than value 2.
            </summary>
            <param name="val1">Value 1.</param>
            <param name="val2">Value 2.</param>
            <returns>True, if less than; otherwize, false.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_Addition(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Adds the two 128-bit integer values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_Subtraction(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Subtracts the two 128-bit integer values.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_UnaryNegation(XyratexOSC.XMath.Int128)">
            <summary>
            Subtracts the specified 128-bit integer value.
            </summary>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.Int128Mul(System.Int64,System.Int64)">
            <summary>
            Multiplies the two specified Int128s.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.op_Division(XyratexOSC.XMath.Int128,XyratexOSC.XMath.Int128)">
            <summary>
            Divides the two specified Int128s.
            </summary>
            <param name="lhs">Left-hand side value.</param>
            <param name="rhs">Right-hand side value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Int128.ToDouble">
            <summary>
            Converts this 128-bit integer to a <see cref="T:System.Double"/>
            </summary>
            <returns>A double conversion of this integer.</returns>
        </member>
        <member name="T:XyratexOSC.XMath.IntPoint2D">
            <summary>
            Represents a 2D point of 64-bit integers. Avoids floating point arithmetic with 64-bit precision.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.IntPoint2D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.IntPoint2D"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.#ctor(XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.IntPoint2D"/> class.
            </summary>
            <param name="pt">The point to copy.</param>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.Offset(XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Returns a copy of this point offset by X and Y from the specified point.
            </summary>
            <param name="offsets">The specified offsets.</param>
            <returns>An offset copy of this point.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.Offset(System.Int64,System.Int64)">
            <summary>
            Returns a copy of this point offset by the specified X and Y.
            </summary>
            <param name="x">The x offset.</param>
            <param name="y">The y offset.</param>
            <returns>An offset copy of this point.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.OffsetX(System.Int64)">
            <summary>
            Returns a copy of this point offset by the specified X.
            </summary>
            <param name="x">The x offset.</param>
            <returns>An offset copy of this point.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.OffsetY(System.Int64)">
            <summary>
            Returns a copy of this point offset by the specified Y.
            </summary>
            <param name="y">The y offset.</param>
            <returns>An offset copy of this point.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.Equals(XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Determines if this point is equal to the specified point.
            </summary>
            <param name="point">The other point.</param>
            <returns>True, if equal; otherwise, false</returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.Delta(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Returns the distance between the two specified points.
            </summary>
            <param name="point1">Point 1.</param>
            <param name="point2">Point 2.</param>
            <returns>The distance between the two points.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_UnaryNegation(XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Subtracts the specified value.
            </summary>
            <param name="a">Value to subtract</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Subtraction(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Subtracts b from a.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Addition(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Adds a to b.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Multiply(System.Int64,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Multiplies A and B
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Multiply(XyratexOSC.XMath.IntPoint2D,System.Int64)">
            <summary>
            Multiplies A and B
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Division(XyratexOSC.XMath.IntPoint2D,System.Int64)">
            <summary>
            Divides B from A
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Equality(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Determines if A equals B.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Inequality(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Determines if A is not equal to B
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.ToPoint">
            <summary>
            Converts this to a <see cref="T:System.Drawing.Point"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.IntPoint2D.op_Implicit(System.Drawing.Point)~XyratexOSC.XMath.IntPoint2D">
            <summary>
            Implicit cast from <see cref="T:System.Drawing.Point"/> to a 64-bit precision point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.IntPoint2D.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
            <value>
            The X coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.IntPoint2D.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>
            The Y coordinate.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.IntRegion2D">
            <summary>
            2D Rectanglular bounds in 64-bit integer coordinates
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.IntRegion2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.IntRegion2D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.IntRegion2D.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.IntRegion2D"/> class.
            </summary>
            <param name="left">The left position.</param>
            <param name="top">The top position.</param>
            <param name="right">The right position.</param>
            <param name="bottom">The bottom position.</param>
        </member>
        <member name="P:XyratexOSC.XMath.IntRegion2D.Left">
            <summary>
            Gets or sets the left position of this region.
            </summary>
            <value>
            The left position.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.IntRegion2D.Top">
            <summary>
            Gets or sets the top position of this region.
            </summary>
            <value>
            The top position.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.IntRegion2D.Right">
            <summary>
            Gets or sets the right position of this region.
            </summary>
            <value>
            The right position.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.IntRegion2D.Bottom">
            <summary>
            Gets or sets the bottom position of this region.
            </summary>
            <value>
            The bottom position.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.Line2D">
            <summary>
            A 2D line represented in Slope-YIntercept form (unless vertical in which case the line is represented in X-intercept form).
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Line2D"/> class.
            </summary>
            <param name="slope">The slope of the line.</param>
            <param name="intercept">The Y-intercept of the line; unless the slope is an infinity, then X = Intercept.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.#ctor(XyratexOSC.XMath.Point2D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Line2D"/> class, using point-slope form.
            </summary>
            <param name="point">A point on the line.</param>
            <param name="slope">The slope of the line.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.#ctor(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Line2D"/> class through two given points.
            </summary>
            <param name="point1">Point 1 on the line.</param>
            <param name="point2">Point 2 on the line.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.GetY(System.Double)">
            <summary>
            Solves for Y given X.
            </summary>
            <param name="x">X value</param>
            <returns>Y value</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.GetX(System.Double)">
            <summary>
            Solves for X given Y.
            </summary>
            <param name="y">Y value</param>
            <returns>X Value</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.FromBestFit(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.Point2D},System.Collections.Generic.IList{XyratexOSC.XMath.Point2D}@)">
            <summary>
            Determines the line that best-fits to the specified points (using the Area method).
            </summary>
            <param name="points">The points to fit.</param>
            <param name="fitPoints">The calculated best-fit points.</param>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">
            Best-Fit lines require two points.
            or
            Best-Fit lines require two unique points.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.FromRobustFit(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.Point2D},System.Collections.Generic.IList{XyratexOSC.XMath.Point2D}@,System.Int32)">
            <summary>
            Determines the line that best-fits to the specified points (using bisquare regression).
            </summary>
            <param name="points">The points to fit.</param>
            <param name="fitPoints">The calculated best-fit points.</param>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">
            Best-Fit lines require two points.
            or
            Best-Fit lines require two unique points.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.FromDemingBestFit(System.Collections.Generic.IList{XyratexOSC.XMath.Point2D},System.Collections.Generic.IList{XyratexOSC.XMath.Point2D}@)">
            <summary>
            Determines the best-fit line of the specified points using Deming regression.
            </summary>
            <param name="points">The points to fit.</param>
            <param name="fitPoints">The calculated best-fit points.</param>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">Best-Fit lines require two points.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.IntersectAt(XyratexOSC.XMath.Line2D,XyratexOSC.XMath.Line2D)">
            <summary>
            Determines the point of intersection between the specified lines.
            </summary>
            <param name="line1">Line 1.</param>
            <param name="line2">Line 2.</param>
            <returns>The point of intersection if the lines intersect; otherwise, null.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.Line2D.AngleBetween(XyratexOSC.XMath.Line2D,XyratexOSC.XMath.Line2D)">
            <summary>
            Determines the angle between line 1 and line 2.
            </summary>
            <param name="line1">Line 1.</param>
            <param name="line2">Line 2.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.Line2D.Slope">
            <summary>
            Gets the slope of the line.
            </summary>
            <value>
            The slope.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Line2D.Intercept">
            <summary>
            Gets the Y-intercept of the line, unless the line is vertical in which case it returns the X-intercept.
            </summary>
            <value>
            The intercept.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Line2D.IsVertical">
            <summary>
            Gets a value indicating whether this line is vertical or not.
            </summary>
            <value>
            <c>true</c> if this line is vertical; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Line2D.IsHorizontal">
            <summary>
            Gets a value indicating whether this line is horizontal or not.
            </summary>
            <value>
            <c>true</c> if this line is horizontal; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.LineSeg2D">
            <summary>
            A 2D line segment represented by two points (Start and End). Inherits from <see cref="T:XyratexOSC.XMath.Line2D"/>
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.#ctor(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.LineSeg2D"/> class.
            </summary>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.LineSeg2D"/> class.
            </summary>
            <param name="X1">The start X-coordinate.</param>
            <param name="Y1">The start Y-coordinate.</param>
            <param name="X2">The end X-coordinate.</param>
            <param name="Y2">The end Y-coordinate.</param>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.GetLength">
            <summary>
            Gets the length of this line segment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.GetCenterPoint">
            <summary>
            Gets the center point of this line segment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.DistanceTo(XyratexOSC.XMath.Point2D)">
            <summary>
            Determines the shortest distance from anywhere on the line segment to the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.FromBestFit(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.Point2D},System.Collections.Generic.IList{XyratexOSC.XMath.Point2D}@)">
            <summary>
            Determines the line that best-fits to the specified pointws (using the Area method).
            </summary>
            <param name="points">The points to fit.</param>
            <param name="fitPoints">The calculated best-fit points.</param>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">
            Best-Fit lines require two points.
            or
            Best-Fit lines require two unique points.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.FromRobustFit(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.Point2D},System.Collections.Generic.IList{XyratexOSC.XMath.Point2D}@,System.Int32)">
            <summary>
            Determines the line that best-fits to the specified points (using bisquare regression).
            </summary>
            <param name="points">The points to fit.</param>
            <param name="fitPoints">The calculated best-fit points.</param>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">
            Best-Fit lines require two points.
            or
            Best-Fit lines require two unique points.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.FromDemingBestFit(System.Collections.Generic.IList{XyratexOSC.XMath.Point2D},System.Collections.Generic.IList{XyratexOSC.XMath.Point2D}@)">
            <summary>
            Determines the best-fit line of the specified points using Deming regression.
            </summary>
            <param name="points">The points to fit.</param>
            <param name="fitPoints">The calculated best-fit points.</param>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">Best-Fit lines require two points.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.IntersectAt(XyratexOSC.XMath.LineSeg2D,XyratexOSC.XMath.LineSeg2D)">
            <summary>
            Determines the point of intersection between the specified lines.
            </summary>
            <param name="line1">Line 1.</param>
            <param name="line2">Line 2.</param>
            <returns>The point of intersection if the lines intersect; otherwise, null.</returns>
        </member>
        <member name="M:XyratexOSC.XMath.LineSeg2D.AngleBetween(XyratexOSC.XMath.LineSeg2D,XyratexOSC.XMath.LineSeg2D)">
            <summary>
            Determines the angle between line 1 and line 2.
            </summary>
            <param name="line1">Line 1.</param>
            <param name="line2">Line 2.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.Slope">
            <summary>
            Gets the slope of the line.
            </summary>
            <value>
            The slope.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.Intercept">
            <summary>
            Gets the Y-intercept of the line, unless the line is vertical in which case it returns the X-intercept.
            </summary>
            <value>
            The intercept.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.Start">
            <summary>
            Gets or sets the start point of the line segment.
            </summary>
            <value>
            The starting point.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.End">
            <summary>
            Gets or sets the end point of the line segment.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.X1">
            <summary>
            Gets or sets the X-coordinate of the <see cref="P:XyratexOSC.XMath.LineSeg2D.Start"/> point.
            </summary>
            <value>
            The <see cref="P:XyratexOSC.XMath.LineSeg2D.Start"/> point X-coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.Y1">
            <summary>
            Gets or sets the Y-coordinate of the <see cref="P:XyratexOSC.XMath.LineSeg2D.Start"/> point.
            </summary>
            <value>
            The <see cref="P:XyratexOSC.XMath.LineSeg2D.Start"/> point Y-coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.X2">
            <summary>
            Gets or sets the X-coordinate of the <see cref="P:XyratexOSC.XMath.LineSeg2D.End"/> point.
            </summary>
            <value>
            The <see cref="P:XyratexOSC.XMath.LineSeg2D.End"/> point X-coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LineSeg2D.Y2">
            <summary>
            Gets or sets the Y-coordinate of the <see cref="P:XyratexOSC.XMath.LineSeg2D.End"/> point.
            </summary>
            <value>
            The <see cref="P:XyratexOSC.XMath.LineSeg2D.End"/> point Y-coordinate.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.LoessInterpolator">
            <summary>
            The Loess Interpolator implements the local regression algorithm (locally weighted scatterplot smoothing).
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.LoessInterpolator.bandwidth">
            <summary>
            When computing the loess fit at a particular point, this fraction of source points closest
            to the current point is taken into account for computing a least-squares regression. 
            A sensible value is usually 0.25 to 0.5.
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.LoessInterpolator.robustnessIters">
            <summary>
            The number of robustness iterations to perform. Typically 0 - 4.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.LoessInterpolator.Smooth(XyratexOSC.XMath.Point2D[])">
            <summary>
            Computes a loess fit on the specified points.
            </summary>
            <param name="points">The points.</param>
            <returns></returns>
            <exception cref="T:System.ApplicationException">
            Loess expects at least 1 point
            </exception>
        </member>
        <member name="T:XyratexOSC.XMath.MathExtensions">
            <summary>
            Provides extension methods for standard math equations.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.MathExtensions.StdDev(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Calculates the standard deviation of a set of double values.
            </summary>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.MathExtensions.EqualsRoughly(System.Double,System.Double,System.Int32)">
            <summary>
            Returns a value indicating whether this instance and the specified System.Double object
            are equivalent when rounded by the specified significantDigits
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <param name="precision">The number of significant digits considered.</param>
            <returns>
            True if equal; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.MathExtensions.Hypotenuse(System.Double,System.Double)">
            <summary>
            Square Root of (a^2 + b^2) without overflow.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.XMath.Matrix">
            <summary>
            A Matrix Class. Represents a rectangular array of doubles.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Matrix"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Matrix"/> class.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Identity(System.Int32)">
            <summary>
            Creates an identity matrix of the specified size [n,n].
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Clone">
            <summary>
            Clones this matrix instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Transpose">
            <summary>
            Transposes this matrix instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Add(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Adds the left matrix to the right matrix.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            Matrices must have the same number of columns for addition.
            or
            Matrices must have the same number of rows for addition.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Addition(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Adds the two matrices.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Add(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Adds a scalar value to the specified matrix.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="scalar">The scalar.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Add(System.Double,XyratexOSC.XMath.Matrix)">
            <summary>
            Adds a scalar value to the specified matrix.
            </summary>
            <param name="scalar">The scalar.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Addition(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Adds a scalar to a matrix.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="scalar">The scalar.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Addition(System.Double,XyratexOSC.XMath.Matrix)">
            <summary>
            Adds a scalar to a matrix.
            </summary>
            <param name="scalar">The scalar.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Subtract(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Subtracts the right matrix from the left matrix.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            Matrices must have the same number of columns for subtraction.
            or
            Matrices must have the same number of rows for subtraction.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Subtraction(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Subtracts the two matrices.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Subtract(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Subtracts a scalar from the specified left matrix.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="scalar">The scalar.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Subtract(System.Double,XyratexOSC.XMath.Matrix)">
            <summary>
            Subtracts the specified matrix from the specified scalar.
            </summary>
            <param name="scalar">The scalar.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Subtraction(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Subtracts a scalar from a matrix.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="scalar">The scalar.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Subtraction(System.Double,XyratexOSC.XMath.Matrix)">
            <summary>
            Subtracts a matrix from a scalar
            </summary>
            <param name="scalar">The scalar.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Multiply(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Multiplies the specified matrices. The column count of the left matrix must match the row count of the right matrix for multiplication.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
            <exception cref="T:System.Exception">The column count of the left matrix must match the row count of the right matrix for multiplication.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Multiply(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Multiplies the specified matrices. The column count of the left matrix must match the row count of the right matrix for multiplication.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Multiply(System.Double,XyratexOSC.XMath.Matrix)">
            <summary>
            Multiplies the matrix by a scalar value.
            </summary>
            <param name="left">The left value.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Multiply(System.Double,XyratexOSC.XMath.Matrix)">
            <summary>
            Multiplies the matrix by a scalar value.
            </summary>
            <param name="left">The left.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Multiply(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Multiplies the matrix by a scalar value.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Multiply(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Multiplies the matrix by a scalar value.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Divide(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Divides the specified left matrix by the scalar value.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="right">The right value.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Division(XyratexOSC.XMath.Matrix,System.Double)">
            <summary>
            Divides the specified left matrix by the scalar value.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Divide(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Divides the two matrices.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Division(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Divides the two matrices.
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Abs(XyratexOSC.XMath.Matrix)">
            <summary>
            Returns the absolute value of the specified matrix. All values in the matrix become absolute value.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.FromArray(System.Double[])">
            <summary>
            Creates a matrix from the specified array.
            </summary>
            <param name="left">The left array.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Implicit(System.Double[])~XyratexOSC.XMath.Matrix">
            <summary>
            Creates a matrix from the specified array.
            </summary>
            <param name="left">The left array.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.ToArray(XyratexOSC.XMath.Matrix)">
            <summary>
            Casts a matrix to an array
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Implicit(XyratexOSC.XMath.Matrix)~System.Double[]">
            <summary>
            Casts a matrix to an array
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.FromDoubleArray(System.Double[0:,0:])">
            <summary>
            Creates a matrix from a 2D array
            </summary>
            <param name="left">The left.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Implicit(System.Double[0:,0:])~XyratexOSC.XMath.Matrix">
            <summary>
            Creates a matrix from a 2D array
            </summary>
            <param name="left">The left.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.ToDoubleArray(XyratexOSC.XMath.Matrix)">
            <summary>
            Casts a matrix to a 2D array
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.op_Implicit(XyratexOSC.XMath.Matrix)~System.Double[0:,0:]">
            <summary>
            Casts a matrix to a 2D array
            </summary>
            <param name="leftMatrix">The left matrix.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Determinant">
            <summary>
            Calulates the determinant of this matrix instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Matrix must be square to find the determinant.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.SolveFor(XyratexOSC.XMath.Matrix)">
            <summary>
            Solves for the specified matrix.
            </summary>
            <param name="rightMatrix">The right matrix.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            The row count of the right matrix must be equal to the column count of this matrix to solve.
            or
            To solve for this matrix the row count must equal the column count.
            </exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.SolvePolyCoefs(System.Double[],System.Double[])">
            <summary>
            Solves for the polynominal coefficients of x and y.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.Invert">
            <summary>
            Inverts this matrix instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">To invert this matrix, the row count and column count must be equal.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.LUDecompose">
            <summary>
            Calculates the LU Decomposition of this matrix.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">To decompose the matrix must have the same number of columns as rows.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.Matrix.SingularValueDecomposition">
            <summary>
            Calculates the singular value decomposition of this matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> with the specified row and column.
            </summary>
            <value>
            The <see cref="T:System.Double"/>.
            </value>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.Matrix.RowCount">
            <summary>
            Gets the row count.
            </summary>
            <value>
            The row count.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Matrix.ColumnCount">
            <summary>
            Gets the column count.
            </summary>
            <value>
            The column count.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.LUDecomposition">
            <summary>
            Results for LU Decomposition
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.LUDecomposition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:LUDecompositionResults"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.LUDecomposition.#ctor(XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="!:LUDecompositionResults"/> class.
            </summary>
            <param name="matL">The mat L.</param>
            <param name="matU">The mat U.</param>
            <param name="nPivotArray">The n pivot array.</param>
        </member>
        <member name="P:XyratexOSC.XMath.LUDecomposition.L">
            <summary>
            Gets or sets the L Matrix.
            </summary>
            <value>
            The L Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LUDecomposition.U">
            <summary>
            Gets or sets the U Matrix.
            </summary>
            <value>
            The U Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.LUDecomposition.PivotArray">
            <summary>
            Gets or sets the pivot array.
            </summary>
            <value>
            The pivot array.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.SVDecomposition">
            <summary>
            Results for Singular Value Decomposition.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.SVDecomposition.#ctor(System.Double[],XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix,XyratexOSC.XMath.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.SVDecomposition"/> class.
            </summary>
            <param name="singularValues">The singular values.</param>
            <param name="s">The s matrix.</param>
            <param name="u">The u matrix.</param>
            <param name="v">The v matrix.</param>
        </member>
        <member name="P:XyratexOSC.XMath.SVDecomposition.SingularValues">
            <summary>
            Gets or sets the singular values.
            </summary>
            <value>
            The singular values.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.SVDecomposition.S">
            <summary>
            Gets or sets the S Matrix.
            </summary>
            <value>
            The S Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.SVDecomposition.U">
            <summary>
            Gets or sets the U Matrix.
            </summary>
            <value>
            The U Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.SVDecomposition.V">
            <summary>
            Gets or sets the V Matrix.
            </summary>
            <value>
            The V Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.QRDecomposition.FullRank">
            <summary>Is the matrix full rank?</summary>
            <returns>     true if R, and hence A, has full rank.
            </returns>
        </member>
        <member name="P:XyratexOSC.XMath.QRDecomposition.QR">
            <summary>
            Gets or sets the Q Matrix.
            </summary>
            <value>
            The Q Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.QRDecomposition.Q">
            <summary>
            Gets or sets the Q Matrix.
            </summary>
            <value>
            The Q Matrix.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.QRDecomposition.R">
            <summary>
            Gets or sets the R Matrix.
            </summary>
            <value>
            The R Matrix.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.SingularMatrixException">
            <summary>
            Exception for invalid operations on singular matrix.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.SingularMatrixException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.SingularMatrixException"/> class.
            </summary>
        </member>
        <member name="T:XyratexOSC.XMath.Point2D">
            <summary>
            A 2D point with double precision coordinates.
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.Point2D._precision">
            <summary>
            The precision for testing equality.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Point2D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Point2D"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.#ctor(XyratexOSC.XMath.Point2D)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Point2D"/> class.
            </summary>
            <param name="point">The point to copy.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.SetPrecision(System.Int32)">
            <summary>
            Sets the number of significant digits (3 by default) that define the tolerance for Point equality.
            </summary>
            <param name="precision">The number of significant digits.</param>
            <remarks>
            When two Point2D's are compared the higher precision value is used for determining equality.
            This value allows you to define importance of positions, and if they require low/high precision for equality.
            </remarks>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.IsNullOrEmpty(XyratexOSC.XMath.Point2D)">
            <summary>
            Determines whether the specified point is null or empty.
            </summary>
            <param name="point">The point.</param>
            <returns>
              <c>true</c> if the point is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.Offset(XyratexOSC.XMath.Point2D)">
            <summary>
            Returns a copy of this point offset by the X,Y coordinates of the specified point.
            </summary>
            <param name="offsets">The point offsets.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.Offset(System.Double,System.Double)">
            <summary>
            Returns a copy of this point offset by the specified X and Y coordinates.
            </summary>
            <param name="x">The x offset.</param>
            <param name="y">The y offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.OffsetX(System.Double)">
            <summary>
            Returns a copy of this point offset by the specified X coordinate.
            </summary>
            <param name="x">The x offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.OffsetY(System.Double)">
            <summary>
            Returns a copy of this point offset by the specified Y coordinate.
            </summary>
            <param name="y">The y offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.Equals(XyratexOSC.XMath.Point2D)">
            <summary>
            Determines if this point is equal to the specified point using this point's precision.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.Equals(XyratexOSC.XMath.Point2D,System.Int32)">
            <summary>
            Determines if this point is equal to the specified point using the specified precision.
            </summary>
            <param name="point">The point.</param>
            <param name="precision">The precision.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.DotProduct(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Computes the dot product AB . AC
            </summary>
            <param name="pointA"></param>
            <param name="pointB"></param>
            <param name="pointC"></param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.CrossProduct(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Computes the cross product AB x AC
            </summary>
            <param name="pointA"></param>
            <param name="pointB"></param>
            <param name="pointC"></param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.Delta(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Determines the distance between Point 1 and Point 2.
            </summary>
            <param name="point1">Point 1.</param>
            <param name="point2">Point 2.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.DistanceTo(XyratexOSC.XMath.Point2D)">
            <summary>
            Determines the distance between this point and the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.DistanceTo(XyratexOSC.XMath.LineSeg2D)">
            <summary>
            Determines the shortest distance from this point to the specified line segment.
            </summary>
            <param name="line">The line segment.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.DistanceTo(XyratexOSC.XMath.LineSeg2D,System.Int32@)">
            <summary>
            Determines the shortest distance from this point to the specified line segment.
            </summary>
            <param name="line">The line segment.</param>
            <param name="sign">-1 if the point resides above the line, or 1 if the point resides below the line.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.RotateAround(System.Double,XyratexOSC.XMath.Point2D)">
            <summary>
            Determines the point after a rotation around the specified center point, by the specified theta.
            </summary>
            <param name="theta">The theta angle.</param>
            <param name="center">The origin of the rotation.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.FindCentroid(XyratexOSC.XMath.Point2D[])">
            <summary>
            Finds the centroid of the specified points.
            </summary>
            <param name="vertices">The vertices of this 'polygon'.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_UnaryNegation(XyratexOSC.XMath.Point2D)">
            <summary>
            Negates the specified point.
            </summary>
            <param name="a">A</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Subtraction(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Subtracts Point B from Point A.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Addition(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Adds Point A and Point B.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Multiply(System.Double,XyratexOSC.XMath.Point2D)">
            <summary>
            Multiplies Point B by scalar A.
            </summary>
            <param name="a">Scalar A</param>
            <param name="b">Point B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Multiply(XyratexOSC.XMath.Point2D,System.Double)">
            <summary>
            Multiplies Point A by scalar B
            </summary>
            <param name="a">Point A</param>
            <param name="b">Scalar B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Division(XyratexOSC.XMath.Point2D,System.Double)">
            <summary>
            Divides Point A by scalar B.
            </summary>
            <param name="a">Point A</param>
            <param name="b">Scalar B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Equality(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Determines if Point A equals Point B (using Point A precision).
            </summary>
            <param name="a">Point A</param>
            <param name="b">Point B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Inequality(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Point2D)">
            <summary>
            Determines if Point A is not equal to Point B (using Point A precision).
            </summary>
            <param name="a">Point A</param>
            <param name="b">Point B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.ToPoint">
            <summary>
            Converts to a <see cref="T:System.Drawing.Point"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.ToPointF">
            <summary>
            Converts to a <see cref="T:System.Drawing.PointF"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Implicit(System.Drawing.PointF)~XyratexOSC.XMath.Point2D">
            <summary>
            Implicit conversion from <see cref="T:System.Drawing.PointF"/> to <see cref="T:XyratexOSC.XMath.Point2D"/>
            </summary>
            <param name="pointF">The floating-point.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Implicit(System.Drawing.Point)~XyratexOSC.XMath.Point2D">
            <summary>
            Implicit conversion from <see cref="T:System.Drawing.Point"/> to <see cref="T:XyratexOSC.XMath.Point2D"/>
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point2D.op_Implicit(XyratexOSC.XMath.Size2D)~XyratexOSC.XMath.Point2D">
            <summary>
            Implicit conversion from <see cref="T:XyratexOSC.XMath.Size2D"/> to <see cref="T:XyratexOSC.XMath.Point2D"/>
            </summary>
            <param name="size">The size 2D.</param>
            <returns></returns>
            <remarks>
            Width to X, Height to Y
            </remarks>
        </member>
        <member name="P:XyratexOSC.XMath.Point2D.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
            <value>
            The X coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Point2D.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>
            The Y coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Point2D.Empty">
            <summary>
            Represents an empty point (0,0).
            </summary>
            <value>
            The empty point.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.Point3D">
            <summary>
            A 3D point with double precision coordinates.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Point3D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Point3D"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.IsNullOrEmpty(XyratexOSC.XMath.Point3D)">
            <summary>
            Determines whether the specified point is null or empty.
            </summary>
            <param name="point">The point.</param>
            <returns>
              <c>true</c> if null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.Offset(XyratexOSC.XMath.Point3D)">
            <summary>
            Returns a copy of this point offset by the X,Y,Z coordinates of the specified point.
            </summary>
            <param name="offsets">The point offsets.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.Offset(System.Double,System.Double,System.Double)">
            <summary>
            Returns a copy of this point offset by the specified X,Y,Z offsets.
            </summary>
            <param name="x">The x offset.</param>
            <param name="y">The y offset.</param>
            <param name="z">The z offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.OffsetZ(System.Double)">
            <summary>
            Returns a copy of this point offset by the specified Z offset.
            </summary>
            <param name="z">The z offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.Equals(XyratexOSC.XMath.Point3D)">
            <summary>
            Determines if this point is equal to the specified point (using this Point's precision).
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.Equals(XyratexOSC.XMath.Point3D,System.Int32)">
            <summary>
            Determines if this point is equal to the specified point using the specified precision.
            </summary>
            <param name="point">The point.</param>
            <param name="precision">The precision.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.Delta(XyratexOSC.XMath.Point3D,XyratexOSC.XMath.Point3D)">
            <summary>
            Determines the distance between Point 1 and Point 2.
            </summary>
            <param name="point1">Point 1.</param>
            <param name="point2">Point 2.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.op_UnaryNegation(XyratexOSC.XMath.Point3D)">
            <summary>
            Negates the specified point.
            </summary>
            <param name="a">A</param>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.op_Subtraction(XyratexOSC.XMath.Point3D,XyratexOSC.XMath.Point3D)">
            <summary>
            Subtracts Point B from Point A.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.op_Addition(XyratexOSC.XMath.Point3D,XyratexOSC.XMath.Point3D)">
            <summary>
            Adds Point A and Point B.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.op_Equality(XyratexOSC.XMath.Point3D,XyratexOSC.XMath.Point3D)">
            <summary>
            Determines if Point A equals Point B (using Point A precision).
            </summary>
            <param name="a">Point A</param>
            <param name="b">Point B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.op_Inequality(XyratexOSC.XMath.Point3D,XyratexOSC.XMath.Point3D)">
            <summary>
            Determines if Point A is not equal to Point B (using Point A precision).
            </summary>
            <param name="a">Point A</param>
            <param name="b">Point B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Point3D.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:XyratexOSC.XMath.Point3D.Z">
            <summary>
            Gets or sets the Z coordinate.
            </summary>
            <value>
            The Z coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Point3D.Empty">
            <summary>
            Represents an empty point (0,0,0).
            </summary>
            <value>
            The empty point.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.Polygon">
            <summary>
            Polygon represented as a list of <see cref="T:XyratexOSC.XMath.IntPoint2D"/>. The use of 64bit integer coordinates improves the speed and accuracy of the polygon math (versus using floating point arithmetic).
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Polygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Polygon"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Polygon.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Polygon"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Polygon.#ctor(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.IntPoint2D})">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Polygon.ContainsPoint(XyratexOSC.XMath.IntPoint2D)">
            <summary>
            Determines whether the specified point is contained within this polygon.
            </summary>
            <param name="point">The point.</param>
            <returns>
              <c>true</c> if the specified point is contained within this polygon; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Polygon.GetCenter">
            <summary>
            Gets the center of the polygon bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Polygon.GetBounds">
            <summary>
            Gets the polygon bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.XMath.Polygons">
            <summary>
            A list of <see cref="T:XyratexOSC.XMath.Polygon"/> objects.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Polygons.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Polygons"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Polygons.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Polygons"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Polygons.#ctor(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.Polygon})">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Polygons"/> class.
            </summary>
            <param name="polygons">The polygons.</param>
        </member>
        <member name="T:XyratexOSC.XMath.ExPolygon">
            <summary>
            A polygon that contains holes. It is represented as an Outer polygon and a list of polygon holes.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.ExPolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.ExPolygon"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.ExPolygon.#ctor(XyratexOSC.XMath.Polygon,XyratexOSC.XMath.Polygons)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.ExPolygon"/> class.
            </summary>
            <param name="outer">The outer polygon.</param>
            <param name="holes">The list of polygon holes.</param>
        </member>
        <member name="P:XyratexOSC.XMath.ExPolygon.Outer">
            <summary>
            Gets or sets the outer polygon.
            </summary>
            <value>
            The outer polygon.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.ExPolygon.Holes">
            <summary>
            Gets or sets the list of polygon holes.
            </summary>
            <value>
            The polygon holes.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.ExPolygons">
            <summary>
            A list of <see cref="T:XyratexOSC.XMath.ExPolygon"/> objects.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.ExPolygons.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.ExPolygons"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.ExPolygons.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.ExPolygons"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:XyratexOSC.XMath.ExPolygons.#ctor(System.Collections.Generic.IEnumerable{XyratexOSC.XMath.ExPolygon})">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.ExPolygons"/> class.
            </summary>
            <param name="polygons">The polygons (containing holes).</param>
        </member>
        <member name="T:XyratexOSC.XMath.ClipType">
            <summary>
            Polygon clipping type.
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.ClipType.ctIntersection">
            <summary>
            Intersection
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.ClipType.ctUnion">
            <summary>
            Union
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.ClipType.ctDifference">
            <summary>
            Difference
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.ClipType.ctXor">
            <summary>
            Xor
            </summary>
        </member>
        <member name="T:XyratexOSC.XMath.PolyType">
            <summary>
            Polygon type.
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.PolyType.ptSubject">
            <summary>
            The polygon subject
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.PolyType.ptClip">
            <summary>
            The polygon clip
            </summary>
        </member>
        <member name="T:XyratexOSC.XMath.PolyFillType">
            <summary>
            Polygon filling type rules.
            </summary>
            <remarks>
            By far the most widely used winding rules for polygon filling are
            EvenOdd and NonZero (GDI, GDI+, XLib, OpenGL, Cairo, AGG, Quartz, SVG, Gr32)
            Others rules include Positive, Negative and ABS_GTR_EQ_TWO (only in OpenGL)
            see http://glprogramming.com/red/chapter11.html
            </remarks>
        </member>
        <member name="F:XyratexOSC.XMath.PolyFillType.pftEvenOdd">
            <summary>
            Even-odd
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.PolyFillType.pftNonZero">
            <summary>
            Non-zero
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.PolyFillType.pftPositive">
            <summary>
            Positive
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.PolyFillType.pftNegative">
            <summary>
            Negative
            </summary>
        </member>
        <member name="T:XyratexOSC.XMath.JoinType">
            <summary>
            Polygon join type.
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.JoinType.jtSquare">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.JoinType.jtRound">
            <summary>
            Round
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.JoinType.jtMiter">
            <summary>
            Miter
            </summary>
        </member>
        <member name="T:XyratexOSC.XMath.PolygonMath">
            <summary>
            Performs the mathematical calculations on <see cref="T:XyratexOSC.XMath.Polygon"/> objects.
            </summary>
        </member>
        <member name="T:XyratexOSC.XMath.PolygonMathBase">
            <summary>
            Base class for polygon arithmetic
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.PolygonMathBase.horizontal">
            <summary>
            Horizontal value
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.PointsEqual(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D)">
            <summary>
            De3termines if the points are equal
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.SlopesEqual(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D,System.Boolean)">
            <summary>
            Determines if the slopes are equal of point 1 to 2, and point 2 to 3
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="pt3">The PT3.</param>
            <param name="UseFullRange">if set to <c>true</c> [use full range].</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.SlopesEqual(XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D,XyratexOSC.XMath.IntPoint2D,System.Boolean)">
            <summary>
            Determines if the slopes are equal of point 1 to 2, and point 3 to 4
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="pt3">The PT3.</param>
            <param name="pt4">The PT4.</param>
            <param name="UseFullRange">if set to <c>true</c> [use full range].</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.AddPolygons(XyratexOSC.XMath.Polygons,XyratexOSC.XMath.PolyType)">
            <summary>
            Adds polygons to the operations.
            </summary>
            <param name="ppg">The PPG.</param>
            <param name="polyType">Type of the poly.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.AddPolygon(XyratexOSC.XMath.Polygon,XyratexOSC.XMath.PolyType)">
            <summary>
            Adds polygons to the operations.
            </summary>
            <param name="pg">The pg.</param>
            <param name="polyType">Type of the poly.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Coordinate exceeds range bounds</exception>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.PopLocalMinima">
            <summary>
            Pops the local minima.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMathBase.GetBounds">
            <summary>
            Gets the bounds of the polygons
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.PolygonMath"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Execute(XyratexOSC.XMath.ClipType,XyratexOSC.XMath.Polygons,XyratexOSC.XMath.PolyFillType,XyratexOSC.XMath.PolyFillType)">
            <summary>
            Executes the polygon math given the specified clip types and fill types.
            </summary>
            <param name="clipType">The clip type.</param>
            <param name="solution">The solution.</param>
            <param name="subjFillType">The subject fill type.</param>
            <param name="clipFillType">The clip fill type.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Execute(XyratexOSC.XMath.ClipType,XyratexOSC.XMath.ExPolygons,XyratexOSC.XMath.PolyFillType,XyratexOSC.XMath.PolyFillType)">
            <summary>
            Executes the polygon math on polygons including holes, given the specified clip types and fill types.
            </summary>
            <param name="clipType">Type of the clip.</param>
            <param name="solution">The solution.</param>
            <param name="subjFillType">Type of the subj fill.</param>
            <param name="clipFillType">Type of the clip fill.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Execute(XyratexOSC.XMath.ClipType,XyratexOSC.XMath.Polygons)">
            <summary>
            Executes the polygon math given the specified clip type, and even odd fill types.
            </summary>
            <param name="clipType">Type of the clip.</param>
            <param name="solution">The solution.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Execute(XyratexOSC.XMath.ClipType,XyratexOSC.XMath.ExPolygons)">
            <summary>
            Executes the polygon math on polygons including holes, given the specified clip type, and even odd fill types.
            </summary>
            <param name="clipType">Type of the clip.</param>
            <param name="solution">The solution.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.ReversePolygons(XyratexOSC.XMath.Polygons)">
            <summary>
            Reverses the polygons.
            </summary>
            <param name="polys">The polygons.</param>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Orientation(XyratexOSC.XMath.Polygon)">
            <summary>
            Determines the orientation of the specified polygon
            </summary>
            <param name="poly">The polygon.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Coordinate exceeds range bounds.</exception>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.Area(XyratexOSC.XMath.Polygon)">
            <summary>
            Calulates the area of the specified polygon
            </summary>
            <param name="poly">The polygon.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.OffsetPolygons(XyratexOSC.XMath.Polygons,System.Double,XyratexOSC.XMath.JoinType,System.Double)">
            <summary>
            Offsets the polygons.
            </summary>
            <param name="poly">The poly.</param>
            <param name="delta">The delta.</param>
            <param name="jointype">The jointype.</param>
            <param name="MiterLimit">The miter limit.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.OffsetPolygons(XyratexOSC.XMath.Polygons,System.Double,XyratexOSC.XMath.JoinType)">
            <summary>
            Offsets the polygons.
            </summary>
            <param name="poly">The poly.</param>
            <param name="delta">The delta.</param>
            <param name="jointype">The jointype.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.OffsetPolygons(XyratexOSC.XMath.Polygons,System.Double)">
            <summary>
            Offsets the polygons.
            </summary>
            <param name="poly">The poly.</param>
            <param name="delta">The delta.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.SimplifyPolygon(XyratexOSC.XMath.Polygon,XyratexOSC.XMath.PolyFillType)">
            <summary>
            Simplifies the polygon.
            </summary>
            <param name="poly">The poly.</param>
            <param name="fillType">Type of the fill.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.PolygonMath.SimplifyPolygons(XyratexOSC.XMath.Polygons,XyratexOSC.XMath.PolyFillType)">
            <summary>
            Simplifies the polygons.
            </summary>
            <param name="polys">The polys.</param>
            <param name="fillType">Type of the fill.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.PolygonMath.ReverseSolution">
            <summary>
            Gets or sets a value indicating whether to reverse the solution.
            </summary>
            <value>
              <c>true</c> if reversing the output; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.Region2D">
            <summary>
            A 2D region with double-precision location and double-precision size.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Region2D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Region2D"/> class.
            </summary>
            <param name="x">The left location.</param>
            <param name="y">The top location.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.#ctor(XyratexOSC.XMath.Point2D,XyratexOSC.XMath.Size2D)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Region2D"/> class.
            </summary>
            <param name="location">The top-left location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Intersects(XyratexOSC.XMath.Region2D)">
            <summary>
            Determines if this region intersects the specified region.
            </summary>
            <param name="region">The other region.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Contains(XyratexOSC.XMath.Point2D)">
            <summary>
            Determines whether the specified point is contained within the region.
            </summary>
            <param name="point">The point.</param>
            <returns>
              <c>true</c> if the specified point is within the region; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Equals(XyratexOSC.XMath.Region2D)">
            <summary>
            Determines if this region is equal to the specified region (using this region's <see cref="P:XyratexOSC.XMath.Region2D.Precision"/>.
            </summary>
            <param name="region">The region.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Equals(XyratexOSC.XMath.Region2D,System.Int32)">
            <summary>
            Determines if this region is equal to the specified region using the specified precision.
            </summary>
            <param name="region">The region.</param>
            <param name="precision">The precision.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Equality(XyratexOSC.XMath.Region2D,XyratexOSC.XMath.Region2D)">
            <summary>
            Determines if Region A is equal to Region B.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Inequality(XyratexOSC.XMath.Region2D,XyratexOSC.XMath.Region2D)">
            <summary>
            Determines if Region A is not equal to Region B.
            </summary>
            <param name="a">A</param>
            <param name="b">B</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Multiply(XyratexOSC.XMath.Region2D,System.Double)">
            <summary>
            Multiplies the specified region by the specified constant.
            </summary>
            <param name="region">The region.</param>
            <param name="constant">The constant.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Multiply(XyratexOSC.XMath.Region2D,System.Double)">
            <summary>
            Multiplies the specified region by the specified constant.
            </summary>
            <param name="region">The region.</param>
            <param name="constant">The constant.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Multiply(System.Double,XyratexOSC.XMath.Region2D)">
            <summary>
            Multiplies the specified region by the specified constant.
            </summary>
            <param name="constant">The constant.</param>
            <param name="region">The region.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.Divide(XyratexOSC.XMath.Region2D,System.Double)">
            <summary>
            Divides the specified region by the specified constant.
            </summary>
            <param name="region">The region.</param>
            <param name="constant">The constant.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Division(XyratexOSC.XMath.Region2D,System.Double)">
            <summary>
            Divides the specified region by the specified constant.
            </summary>
            <param name="region">The region.</param>
            <param name="constant">The constant.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.ToRectangle">
            <summary>
            Converts this to a <see cref="T:System.Drawing.Rectangle"/>.
            There will be a loss in precision.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.ToRectangleF">
            <summary>
            Converts this to a <see cref="T:System.Drawing.RectangleF"/>.
            There will be a loss in precision.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Implicit(System.Drawing.RectangleF)~XyratexOSC.XMath.Region2D">
            <summary>
            Implicit conversion of a <see cref="T:System.Drawing.RectangleF"/> to a <see cref="T:XyratexOSC.XMath.Region2D"/>.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Region2D.op_Implicit(System.Drawing.Rectangle)~XyratexOSC.XMath.Region2D">
            <summary>
            Implicit conversion of a <see cref="T:System.Drawing.Rectangle"/> to a <see cref="T:XyratexOSC.XMath.Region2D"/>.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Precision">
            <summary>
            The number of significant digits (3 by default) that define the tolerance for Point equality.
            </summary>
            <value>
            The number of significant digits.
            </value>
            <remarks>
            When two Point2D's are compared the higher precision value is used for determining equality.
            This value allows you to define importance of positions, and if they require low/high precision for equality.
            </remarks>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Location">
            <summary>
            Gets or sets the top-left location of the region.
            </summary>
            <value>
            The top-left location.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Size">
            <summary>
            Gets or sets the size of the region.
            </summary>
            <value>
            The region size.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.X">
            <summary>
            Gets or sets the left X coordinate of the region.
            </summary>
            <value>
            The left coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Y">
            <summary>
            Gets or sets the top Y coordinate of the region.
            </summary>
            <value>
            The top coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Top">
            <summary>
            Gets or sets the top Y coordinate of the region.
            </summary>
            <value>
            The top coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Bottom">
            <summary>
            Gets or sets the bottom Y coordinate of the region.
            </summary>
            <value>
            The bottom coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Left">
            <summary>
            Gets or sets the left X coordinate of the region.
            </summary>
            <value>
            The left coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Right">
            <summary>
            Gets or sets the right X coordinate of the region.
            </summary>
            <value>
            The right coordinate.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Middle">
            <summary>
            Gets the point in the center of the region.
            </summary>
            <value>
            The center point.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Width">
            <summary>
            Gets or sets the width of the region.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Height">
            <summary>
            Gets or sets the height of the region.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Region2D.Empty">
            <summary>
            Represents an Empty region (0,0) [0,0].
            </summary>
            <value>
            The empty.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.Size2D">
            <summary>
            A 2D size using double-precision dimensions.
            </summary>
        </member>
        <member name="F:XyratexOSC.XMath.Size2D._precision">
            <summary>
            The precision for determining equality
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Size2D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Size2D"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.SetPrecision(System.Int32)">
            <summary>
            Sets the number of significant digits (3 by default) that define the tolerance for Size equality.
            </summary>
            <param name="precision">The number of significant digits.</param>
            <remarks>
            When two Size2D's are compared the higher precision value is used for determining equality.
            This value allows you to define importance of positions, and if they require low/high precision for equality.
            </remarks>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.IsNullOrEmpty(XyratexOSC.XMath.Size2D)">
            <summary>
            Determines whether the specified size is null or empty.
            </summary>
            <param name="size">The size.</param>
            <returns>
              <c>true</c> if is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.Offset(System.Double,System.Double)">
            <summary>
            Returns a copy of this size offset by the specified width and height.
            </summary>
            <param name="width">The width offset.</param>
            <param name="height">The height offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.OffsetWidth(System.Double)">
            <summary>
            Returns a copy of this size offset by the specified width.
            </summary>
            <param name="width">The width offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.OffsetHeight(System.Double)">
            <summary>
            Returns a copy of this size offset by the specified height.
            </summary>
            <param name="height">The height offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.Equals(XyratexOSC.XMath.Size2D)">
            <summary>
            Determines if this size is equal to the specified size (using this size's precision).
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.Equals(XyratexOSC.XMath.Size2D,System.Int32)">
            <summary>
            Determines if this size is equal to the specified size using the specified precision.
            </summary>
            <param name="size">The size.</param>
            <param name="precision">The precision.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Subtraction(XyratexOSC.XMath.Size2D,XyratexOSC.XMath.Size2D)">
            <summary>
            Subtracts Size B from Size A.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Addition(XyratexOSC.XMath.Size2D,XyratexOSC.XMath.Size2D)">
            <summary>
            Adds Size A to Size B.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Multiply(System.Double,XyratexOSC.XMath.Size2D)">
            <summary>
            Multiplies Size B by scalar A.
            </summary>
            <param name="a">Scalar A.</param>
            <param name="b">Size B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Multiply(XyratexOSC.XMath.Size2D,System.Double)">
            <summary>
            Multiplies Size A by scalar B.
            </summary>
            <param name="a">Size A.</param>
            <param name="b">Scalar B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Division(XyratexOSC.XMath.Size2D,System.Double)">
            <summary>
            Divides Size A by scalar B.
            </summary>
            <param name="a">Size A.</param>
            <param name="b">Scalar B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Equality(XyratexOSC.XMath.Size2D,XyratexOSC.XMath.Size2D)">
            <summary>
            Determines if Size A is equal to Size B.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Inequality(XyratexOSC.XMath.Size2D,XyratexOSC.XMath.Size2D)">
            <summary>
            Determines if Size A is not equal to Size B.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.ToSize">
            <summary>
            Converts this size to a <see cref="T:System.Drawing.Size"/>.
            There will be a loss in precision.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.ToSizeF">
            <summary>
            Converts this size to a <see cref="T:System.Drawing.SizeF"/>.
            There will be a loss in precision.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Implicit(System.Drawing.SizeF)~XyratexOSC.XMath.Size2D">
            <summary>
            Implicit conversion of <see cref="T:System.Drawing.SizeF"/> to a <see cref="T:XyratexOSC.XMath.Size2D"/>.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size2D.op_Implicit(System.Drawing.Size)~XyratexOSC.XMath.Size2D">
            <summary>
            Implicit conversion of <see cref="T:System.Drawing.Size"/> to a <see cref="T:XyratexOSC.XMath.Size2D"/>.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.XMath.Size2D.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Size2D.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Size2D.Empty">
            <summary>
            Returns an empty size [0,0].
            </summary>
            <value>
            The empty.
            </value>
        </member>
        <member name="T:XyratexOSC.XMath.Size3D">
            <summary>
            A 3D size of double precision
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Size3D"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Size3D"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.IsNullOrEmpty(XyratexOSC.XMath.Size3D)">
            <summary>
            Determines whether the specified 3D size is null or empty.
            </summary>
            <param name="size">The size.</param>
            <returns>
              <c>true</c> if is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.Offset(System.Double,System.Double,System.Double)">
            <summary>
            Creates a copy of this size with the specified offsets
            </summary>
            <param name="width">The width offset.</param>
            <param name="height">The height offset.</param>
            <param name="depth">The depth offset.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.OffsetDepth(System.Double)">
            <summary>
            Creates a copy of this size with the specified depth offset
            </summary>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.Equals(XyratexOSC.XMath.Size3D)">
            <summary>
            Determines if this size is equal to the specified size (using default precision).
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.Equals(XyratexOSC.XMath.Size3D,System.Int32)">
            <summary>
            Determines if this size is equal to the specified size using the specified precision.
            </summary>
            <param name="size">The size.</param>
            <param name="precision">The precision.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.op_Subtraction(XyratexOSC.XMath.Size3D,XyratexOSC.XMath.Size3D)">
            <summary>
            Subtracts two 3D sizes.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.op_Addition(XyratexOSC.XMath.Size3D,XyratexOSC.XMath.Size3D)">
            <summary>
            Adds two 3D sizes.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.op_Equality(XyratexOSC.XMath.Size3D,XyratexOSC.XMath.Size3D)">
            <summary>
            Determines equality between two 3D sizes.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.op_Inequality(XyratexOSC.XMath.Size3D,XyratexOSC.XMath.Size3D)">
            <summary>
            Determines inequality between two 3D sizes.
            </summary>
            <param name="a">A.</param>
            <param name="b">B.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.XMath.Size3D.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:XyratexOSC.XMath.Size3D.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Size3D.Empty">
            <summary>
            Gets an empty 3D size.
            </summary>
            <value>
            The empty 3D size.
            </value>
        </member>
        <member name="T:XyratexOSC.GlobalHook.BaseHookListener">
            <summary>
            Base class used to implement mouse or keybord hook listeners.
            It provides base methods to subscribe and unsubscribe to hooks.
            Common processing, error handling and cleanup logic.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.#ctor(XyratexOSC.GlobalHook.WinApi.Hooker)">
            <summary>
            Base constructor of <see cref="T:XyratexOSC.GlobalHook.BaseHookListener"/>
            </summary>
            <param name="hooker">Depending on this parameter the listener hooks either application or global keyboard events.</param>
            <remarks>
            Hooks are not active after instantiation. You need to use either <see cref="P:XyratexOSC.GlobalHook.BaseHookListener.Enabled"/> property or call <see cref="M:XyratexOSC.GlobalHook.BaseHookListener.Start"/> method.
            </remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.ProcessCallback(System.Int32,System.IntPtr)">
            <summary>
            Override this method to modify logic of firing events.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.HookCallback(System.Int32,System.Int32,System.IntPtr)">
            <summary>
            A callback function which will be called every time a keyboard or mouse activity detected.
            <see cref="T:XyratexOSC.GlobalHook.WinApi.HookCallback"/>
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.Start">
            <summary>
            Subscribes to the hook and starts firing events.
            </summary>
            <exception cref="T:System.ComponentModel.Win32Exception"></exception>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.Stop">
            <summary>
            Unsubscribes from the hook and stops firing events.
            </summary>
            <exception cref="T:System.ComponentModel.Win32Exception"></exception>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.Replace(XyratexOSC.GlobalHook.WinApi.Hooker)">
            <summary>
            Enables you to switch from application hooks to global hooks and vice versa on the fly
            without unsubscribing from events. Component remains enabled or disabled state after this call as it was before.
            </summary>
            <param name="hooker">An AppHooker or GlobalHooker object.</param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.GetHookId">
            <summary>
            Override to deliver correct id to be used for <see cref="M:HookNativeMethods.SetWindowsHookEx(System.Int32,XyratexOSC.GlobalHook.WinApi.HookCallback,System.IntPtr,System.Int32)"/> call.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.Dispose">
            <summary>
            Release delegates, unsubscribes from hooks.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.Dispose(System.Boolean)">
            <summary>
            Method to be used from Dispose and finalizer.
            Override this method to release subclass sepcific references.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.BaseHookListener.Finalize">
            <summary>
            Unsubscribes from global hooks skiping error handling.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.BaseHookListener.HookHandle">
            <summary>
            Stores the handle to the Keyboard or Mouse hook procedure.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.BaseHookListener.HookCallbackReferenceKeeper">
            <summary>
            Keeps the reference to prevent garbage collection of delegate. See: CallbackOnCollectedDelegate http://msdn.microsoft.com/en-us/library/43yky316(v=VS.100).aspx
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.BaseHookListener.Enabled">
            <summary>
            Gets or Sets the enabled status of the Hook.
            </summary>
            <value>
            True - The Hook is presently installed, activated, and will fire events.
            <para>
            False - The Hook is not part of the hook chain, and will not fire events.
            </para>
            </value>
        </member>
        <member name="T:XyratexOSC.GlobalHook.Controls.HookType">
            <summary>
            Indicates which hooks to listen to application or global.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.Controls.HookType.Application">
            <summary>
            Only events inside the application are monitored and fired.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.Controls.HookType.Global">
            <summary>
            All events system wide are monitored and fired.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider">
            <summary>
            This component monitors Application or Global input, depending on 
            <see cref="P:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.Enabled"/> and provides appropriate
            events.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider"/>
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.RaiseEventOnUIThread(System.Delegate,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="inputEvent"></param>
            <param name="e"></param>
            <remarks>
            Modified from http://stackoverflow.com/questions/1698889/raise-events-in-net-on-the-main-ui-thread
            </remarks>
        </member>
        <member name="P:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.Enabled">
            <summary>
            Gets or Sets the enabled status of the component.
            </summary>
            <value>
            True - The component is presently activated and will fire events.
            <para>
            False - The component is not active and will not fire events.
            </para>
            </value>
        </member>
        <member name="P:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.HookType">
            <summary>
             Indicates which hooks to listen to application or global.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.CanRaiseEvents">
            <summary>
            This component raises events. The value is always true.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseMove">
            <summary>
            Activated when the user moves the mouse. 
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseClick">
            <summary>
            Activated upon a single click of the mouse.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseDown">
            <summary>
            Activated when the user presses a mouse button.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseUp">
            <summary>
            Activated when the user releases a mouse button.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseDoubleClick">
            <summary>
            Activated when the user double-clicks with the mouse.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseMoveExt">
            <summary>
            Activated when the user moves the mouse. 
            </summary>
            <remarks>
            This event provides extended arguments of type <see cref="T:System.Windows.Forms.MouseEventArgs"/> enabling you to 
            supress further processing of mouse movement in other applications.
            </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseClickExt">
            <summary>
            Activated upon a single click of the mouse.
            </summary>
            <remarks>
            This event provides extended arguments of type <see cref="T:System.Windows.Forms.MouseEventArgs"/> enabling you to 
            supress further processing of mouse click in other applications.
            </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseDownExt">
            <summary>
            Activated when the user presses a mouse button.
            </summary>
            <remarks>
            This event provides extended arguments of type <see cref="T:System.Windows.Forms.MouseEventArgs"/> enabling you to 
            supress further processing of mouse down in other applications.
            </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.MouseWheel">
            <summary>
            Activated upon mouse scrolling.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.KeyPress">
             <summary>
             Activated when the user presses a key.
             </summary>
             <remarks>
             Key events occur in the following order: 
             <list type="number">
             <item>KeyDown</item>
             <item>KeyPress</item>
             <item>KeyUp</item>
             </list>
            The KeyPress event is not raised by noncharacter keys; however, the noncharacter keys do raise the KeyDown and KeyUp events. 
            Use the KeyChar property to sample keystrokes at run time and to consume or modify a subset of common keystrokes. 
            To handle keyboard events only in your application and not enable other applications to receive keyboard events, 
             set the KeyPressEventArgs.Handled property in your form's KeyPress event-handling method to <b>true</b>. 
             </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.KeyUp">
            <summary>
            Activated upon the release of a key.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.Controls.MouseKeyEventProvider.KeyDown">
            <summary>
            Activated when a key is pushed.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.HotKeys.HotKeyArgs">
            <summary>
             The event arguments passed when a HotKeySet's OnHotKeysDownHold event is triggered.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeyArgs.#ctor(System.DateTime)">
            <summary>
             Creates an instance of the HotKeyArgs.
             <param name="triggeredAt">Time when the event was triggered</param>
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeyArgs.Time">
            <summary>
             Time when the event was triggered
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.HotKeys.HotKeySet">
            <summary>
            An immutable set of Hot Keys that provides an event for when the set is activated.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.InvokeHotKeyHandler(XyratexOSC.GlobalHook.HotKeys.HotKeySet.HotKeyHandler)">
            <summary>
            General invocation handler
            </summary>
            <param name="hotKeyDelegate"></param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Forms.Keys})">
            <summary>
             Creates an instance of the HotKeySet class.  Once created, the keys cannot be changed.
            </summary>
            <param name="hotkeys">Set of Hot Keys</param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.InitializeKeys">
            <summary>
            Adds the keys into the dictionary tracking the keys and gets the real-time status of the Keys
            from the OS
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.UnregisterExclusiveOrKey(System.Windows.Forms.Keys)">
            <summary>
             Unregisters a previously set exclusive or based on the primary key.
            </summary>
            <param name="anyKeyInTheExclusiveOrSet">Any key used in the Registration method used to create an exclusive or set</param>
            <returns>True if successful.  False doesn't indicate a failure to unregister, it indicates that the Key is not registered as an Excluside Or key or it's not the Primary Key.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.RegisterExclusiveOrKey(System.Collections.Generic.IEnumerable{System.Windows.Forms.Keys})">
            <summary>
             Registers a group of Keys that are already part of the HotKeySet in order to provide better flexibility among keys.
             <example>
             <code>
             HotKeySet hks = new HotKeySet( new [] { Keys.T, Keys.LShiftKey, Keys.RShiftKey } );
             RegisterExclusiveOrKey( new [] { Keys.LShiftKey, Keys.RShiftKey } );
             </code>
             allows either Keys.LShiftKey or Keys.RShiftKey to be combined with Keys.T.
             </example>
            </summary>
            <param name="orKeySet"></param>
            <returns>Primary key used for mapping or Keys.None on error</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.GetExclusiveOrPrimaryKey(System.Windows.Forms.Keys)">
            <summary>
             Gets the primary key
            </summary>
            <param name="k"></param>
            <returns>The primary key if it exists, otherwise Keys.None</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.GetPrimaryKey(System.Windows.Forms.Keys)">
            <summary>
            Resolves obtaining the key used for state checking.  
            </summary>
            <param name="k"></param>
            <returns>The primary key if it exists, otherwise the key entered</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySet.OnKey(XyratexOSC.GlobalHook.KeyEventArgsExt)">
            <summary>
            
            </summary>
            <param name="kex"></param>
        </member>
        <member name="E:XyratexOSC.GlobalHook.HotKeys.HotKeySet.OnHotKeysDownHold">
            <summary>
            Called as the user holds down the keys in the set.  It is NOT triggered the first time the keys are set. <see cref="E:XyratexOSC.GlobalHook.HotKeys.HotKeySet.OnHotKeysDownOnce"/>
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.HotKeys.HotKeySet.OnHotKeysUp">
            <summary>
            Called whenever the hot key set is no longer active.  This is essentially a KeyPress event, indicating that a full 
            key cycle has occurred, only for HotKeys because a single key removed from the set constitutes an incomplete set.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.HotKeys.HotKeySet.OnHotKeysDownOnce">
            <summary>
            Called the first time the down keys are set.  It does not get called throughout the duration the user holds it but only the 
            first time it's activated.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeySet.Name">
            <summary>
            Enables the ability to name the set
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeySet.Description">
            <summary>
            Enables the ability to describe what the set is used for or supposed to do
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeySet.HotKeys">
            <summary>
             Gets the set of hotkeys that this class handles.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeySet.HotKeysActivated">
            <summary>
             Returns whether the set of Keys is activated
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeySet.Enabled">
            <summary>
             Gets or sets the enabled state of the HotKey set.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.HotKeys.HotKeySet.HotKeyHandler">
            <summary>
            A delegate representing the signature for the OnHotKeysDownHold event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:XyratexOSC.GlobalHook.HotKeys.HotKeySetCollection">
            <summary>
            A collection of HotKeySets
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySetCollection.Add(XyratexOSC.GlobalHook.HotKeys.HotKeySet)">
            <summary>
             Adds a HotKeySet to the collection.
            </summary>
            <param name="hks"></param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySetCollection.Remove(XyratexOSC.GlobalHook.HotKeys.HotKeySet)">
            <summary>
             Removes the HotKeySet from the collection.
            </summary>
            <param name="hks"></param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySetCollection.OnKey(XyratexOSC.GlobalHook.KeyEventArgsExt)">
            <summary>
            Uses a multicase delegate to invoke individual HotKeySets if the Key is in use by any HotKeySets.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:XyratexOSC.GlobalHook.HotKeys.HotKeySetsListener">
            <summary>
             A very thin wrapper around the KeyboardHookListener that provides everything the KeyboardHookListener does but adds the ability to 
             add and hotswap HotKeySets in order to build a HotKey system around a Hooker.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.KeyboardHookListener">
            <summary>
            This class monitors all keyboard activities and provides appropriate events.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardHookListener.#ctor(XyratexOSC.GlobalHook.WinApi.Hooker)">
            <summary>
            Initializes a new instance of <see cref="T:XyratexOSC.GlobalHook.KeyboardHookListener"/>.
            </summary>
            <param name="hooker">Depending on this parameter the listener hooks either application or global keyboard events.</param>
            <remarks>Hooks are not active after instantiation. You need to use either <see cref="P:XyratexOSC.GlobalHook.BaseHookListener.Enabled"/> property or call <see cref="M:XyratexOSC.GlobalHook.BaseHookListener.Start"/> method.</remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardHookListener.ProcessCallback(System.Int32,System.IntPtr)">
            <summary>
            This method processes the data from the hook and initiates event firing.
            </summary>
            <param name="wParam">The first Windows Messages parameter.</param>
            <param name="lParam">The second Windows Messages parameter.</param>
            <returns>
            True - The hook will be passed along to other applications.
            <para>
            False - The hook will not be given to other applications, effectively blocking input.
            </para>
            </returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardHookListener.GetHookId">
            <summary>
            Returns the correct hook id to be used for <see cref="M:HookNativeMethods.SetWindowsHookEx(System.Int32,XyratexOSC.GlobalHook.WinApi.HookCallback,System.IntPtr,System.Int32)"/> call.
            </summary>
            <returns>WH_KEYBOARD (0x02) or WH_KEYBOARD_LL (0x13) constant.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardHookListener.Dispose(System.Boolean)">
            <summary>
            Method to be used from <see cref="M:XyratexOSC.GlobalHook.KeyboardHookListener.Dispose(System.Boolean)"/> and finalizer.
            Override this method to release subclass sepcific references.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyboardHookListener.NonCharPressEnabled">
            <summary>
            Enables (or disables) key press events for non character keys. This is off by default.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.KeyboardHookListener.KeyDown">
            <summary>
            Occurs when a key is preseed. 
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.KeyboardHookListener.KeyPress">
             <summary>
             Occurs when a key is pressed.
             </summary>
             <remarks>
             Key events occur in the following order: 
             <list type="number">
             <item>KeyDown</item>
             <item>KeyPress</item>
             <item>KeyUp</item>
             </list>
            The KeyPress event is not raised by noncharacter keys; however, the noncharacter keys do raise the KeyDown and KeyUp events. 
            Use the KeyChar property to sample keystrokes at run time and to consume or modify a subset of common keystrokes. 
            To handle keyboard events only in your application and not enable other applications to receive keyboard events, 
            set the <see cref="P:System.Windows.Forms.KeyPressEventArgs.Handled"/> property in your form's KeyPress event-handling method to <b>true</b>. 
             </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.KeyboardHookListener.KeyUp">
            <summary>
            Occurs when a key is released. 
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySetsListener.#ctor(XyratexOSC.GlobalHook.HotKeys.HotKeySetCollection,XyratexOSC.GlobalHook.WinApi.Hooker)">
            <summary>
             Creates an instance of the HotKeySetsListener, which attaches a Hot Key system to the Hooker selected.
            </summary>
            <param name="hksCollection">A collection of HotKeySets</param>
            <param name="hooker">Depending on this parameter the listener hooks either application or global keyboard events.</param>
            <remarks>Hooks are not active after instantiation. You need to use either <see cref="P:XyratexOSC.GlobalHook.BaseHookListener.Enabled"/> property or call <see cref="M:XyratexOSC.GlobalHook.BaseHookListener.Start"/> method.</remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.HotKeys.HotKeySetsListener.ProcessCallback(System.Int32,System.IntPtr)">
            <summary>
            This method processes the data from the hook and initiates event firing.
            </summary>
            <param name="wParam">The first Windows Messages parameter.</param>
            <param name="lParam">The second Windows Messages parameter.</param>
            <returns>
            True - The hook will be passed along to other applications.
            <para>
            False - The hook will not be given to other applications, effectively blocking input.
            </para>
            </returns>
        </member>
        <member name="P:XyratexOSC.GlobalHook.HotKeys.HotKeySetsListener.HotKeyCollection">
            <summary>
             Gets the HotKeySetCollection attached to the listener
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.KeyboardState">
            <summary>
            Contains a snapshor of a keyboard state at certain moment and provides methods
             of querying waether specific keys are pressed or locked.
            </summary>
            <remarks>
            This class is basically a managed wrapper of GetKeyboardState API function
            http://msdn.microsoft.com/en-us/library/ms646299
            </remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardState.GetCurrent">
            <summary>
            Makes a snapshot of a keyboard state to the moment of call and returns an 
            instance of <see cref="T:XyratexOSC.GlobalHook.KeyboardState"/> class.
            </summary>
            <returns>An instance of <see cref="T:XyratexOSC.GlobalHook.KeyboardState"/> class representing a snapshot of keyboard state at certain moment.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardState.IsDown(System.Windows.Forms.Keys)">
            <summary>
            Indicates wether specified key was down at the moment when snapshot was created or not.
            </summary>
            <param name="key">Key (corresponds to the virtual code of the key)</param>
            <returns><b>true</b> if key was down, <b>false</b> - if key was up.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardState.IsToggled(System.Windows.Forms.Keys)">
            <summary>
            Indiceate weather specified key was toggled at the moment when snapshot was created or not.
            </summary>
            <param name="key">Key (corresponds to the virtual code of the key)</param>
            <returns>
            <b>true</b> if toggle key like (CapsLock, NumLocke, etc.) was on. <b>false</b> if it was off.
            Ordinal (non toggle) keys return always false.
            </returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyboardState.AreAllDown(System.Collections.Generic.IEnumerable{System.Windows.Forms.Keys})">
            <summary>
            Idicates weather every of specified keys were down at the moment when snapshot was created.
            The method returns flase if even one of them was up.  
            </summary>
            <param name="keys">Keys to verify wether they were down or not.</param>
            <returns><b>true</b> - all were down. <b>false</b> - at least one was up.</returns>
        </member>
        <member name="T:XyratexOSC.GlobalHook.KeyEventArgsExt">
            <summary>
            Provides extended argument data for the <see cref="E:XyratexOSC.GlobalHook.KeyboardHookListener.KeyDown"/> or <see cref="E:XyratexOSC.GlobalHook.KeyboardHookListener.KeyUp"/> event.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyEventArgsExt.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.GlobalHook.KeyEventArgsExt"/> class.
            </summary>
            <param name="keyData"></param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyEventArgsExt.FromRawData(System.Int32,System.IntPtr,System.Boolean)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.KeyEventArgsExt"/> from Windows Message parameters.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <param name="isGlobal">Specifies if the hook is local or global.</param>
            <returns>A new KeyEventArgsExt object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyEventArgsExt.FromRawDataApp(System.Int32,System.IntPtr)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.KeyEventArgsExt"/> from Windows Message parameters, based upon
            a local application hook.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <returns>A new KeyEventArgsExt object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyEventArgsExt.FromRawDataGlobal(System.Int32,System.IntPtr)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.KeyEventArgsExt"/> from Windows Message parameters, based upon
            a system-wide hook.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <returns>A new KeyEventArgsExt object.</returns>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyEventArgsExt.Timestamp">
            <summary>
            The system tick count of when the event occured.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyEventArgsExt.IsKeyDown">
            <summary>
            True if event singnals key down..
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyEventArgsExt.IsKeyUp">
            <summary>
            True if event singnals key up.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyEventArgsExt.UnicodeChar">
            <summary>
             Returns the character representation
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.KeyPressEventArgsExt">
            <summary>
             Provides extended data for the <see cref="E:XyratexOSC.GlobalHook.KeyboardHookListener.KeyPress"/> event.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyPressEventArgsExt.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.GlobalHook.KeyPressEventArgsExt"/> class.
            </summary>
            <param name="keyChar">Character corresponding to the key pressed. 0 char if represens a system or functional non char key.</param>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyPressEventArgsExt.FromRawData(System.Int32,System.IntPtr,System.Boolean)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.KeyPressEventArgsExt"/> from Windows Message parameters.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <param name="isGlobal">Specifies if the hook is local or global.</param>
            <returns>A new KeyPressEventArgsExt object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyPressEventArgsExt.FromRawDataApp(System.Int32,System.IntPtr)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.KeyPressEventArgsExt"/> from Windows Message parameters,
            based upon a local application hook.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <returns>A new KeyPressEventArgsExt object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.KeyPressEventArgsExt.FromRawDataGlobal(System.Int32,System.IntPtr)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.KeyPressEventArgsExt"/> from Windows Message parameters,
            based upon a system-wide hook.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <returns>A new KeyPressEventArgsExt object.</returns>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyPressEventArgsExt.IsNonChar">
            <summary>
            True if represents a system or functional non char key.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyPressEventArgsExt.Timestamp">
            <summary>
            The system tick count of when the event occured.
            </summary> 
        </member>
        <member name="P:XyratexOSC.GlobalHook.KeyPressEventArgsExt.KeyArgs">
            <summary>
            The KeyEventArgs for this key press event (same as key up and key down).
            </summary> 
        </member>
        <member name="T:XyratexOSC.GlobalHook.MouseEventExtArgs">
            <summary>
            Provides extended data for the MouseClickExt and MouseMoveExt events. 
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseEventExtArgs.FromRawData(System.Int32,System.IntPtr,System.Boolean)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.MouseEventExtArgs"/> from Windows Message parameters.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <param name="isGlobal">Specifies if the hook is local or global.</param>
            <returns>A new MouseEventExtArgs object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseEventExtArgs.FromRawDataApp(System.Int32,System.IntPtr)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.MouseEventExtArgs"/> from Windows Message parameters, 
            based upon a local application hook.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <returns>A new MouseEventExtArgs object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseEventExtArgs.FromRawDataGlobal(System.Int32,System.IntPtr)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.MouseEventExtArgs"/> from Windows Message parameters, 
            based upon a system-wide global hook.
            </summary>
            <param name="wParam">The first Windows Message parameter.</param>
            <param name="lParam">The second Windows Message parameter.</param>
            <returns>A new MouseEventExtArgs object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseEventExtArgs.FromRawDataUniversal(System.Int32,XyratexOSC.GlobalHook.WinApi.MouseStruct)">
            <summary>
            Creates <see cref="T:XyratexOSC.GlobalHook.MouseEventExtArgs"/> from relevant mouse data. 
            </summary>
            <param name="wParam">First Windows Message parameter.</param>
            <param name="mouseInfo">A MouseStruct containing information from which to contruct MouseEventExtArgs.</param>
            <returns>A new MouseEventExtArgs object.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseEventExtArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,XyratexOSC.GlobalHook.WinApi.Point,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.GlobalHook.MouseEventExtArgs"/> class. 
            </summary>
            <param name="buttons">One of the MouseButtons values indicating which mouse button was pressed.</param>
            <param name="clicks">The number of times a mouse button was pressed.</param>
            <param name="point">The x and y -coordinate of a mouse click, in pixels.</param>
            <param name="delta">A signed count of the number of detents the wheel has rotated.</param>
            <param name="timestamp">The system tick count when the event occured.</param>
            <param name="isMouseKeyDown">True if event singnals mouse button down.</param>
            <param name="isMouseKeyUp">True if event singnals mouse button up.</param>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.Handled">
            <summary>
            Set this property to <b>true</b> inside your event handler to prevent further processing of the event in other applications.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.WheelScrolled">
            <summary>
            True if event contains information about wheel scroll.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.Clicked">
            <summary>
            True if event signals a click. False if it was only a move or wheel scroll.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.IsMouseKeyDown">
            <summary>
            True if event singnals mouse button down.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.IsMouseKeyUp">
            <summary>
            True if event singnals mouse button up.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.Timestamp">
            <summary>
            The system tick count of when the event occured.
            </summary>
        </member>
        <member name="P:XyratexOSC.GlobalHook.MouseEventExtArgs.Point">
            <summary>
            
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.MouseHookListener">
            <summary>
            This class monitors all mouse activities and provides appropriate events.
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseHookListener.#ctor(XyratexOSC.GlobalHook.WinApi.Hooker)">
            <summary>
            Initializes a new instance of <see cref="T:XyratexOSC.GlobalHook.MouseHookListener"/>.
            </summary>
            <param name="hooker">Depending on this parameter the listener hooks either application or global mouse events.</param>
            <remarks>
            Hooks are not active after installation. You need to use either <see cref="P:XyratexOSC.GlobalHook.BaseHookListener.Enabled"/> property or call <see cref="M:XyratexOSC.GlobalHook.BaseHookListener.Start"/> method.
            </remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseHookListener.ProcessCallback(System.Int32,System.IntPtr)">
            <summary>
            This method processes the data from the hook and initiates event firing.
            </summary>
            <param name="wParam">The first Windows Messages parameter.</param>
            <param name="lParam">The second Windows Messages parameter.</param>
            <returns>
            True - The hook will be passed along to other applications.
            <para>
            False - The hook will not be given to other applications, effectively blocking input.
            </para>
            </returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseHookListener.GetHookId">
            <summary>
            Returns the correct hook id to be used for <see cref="M:HookNativeMethods.SetWindowsHookEx(System.Int32,XyratexOSC.GlobalHook.WinApi.HookCallback,System.IntPtr,System.Int32)"/> call.
            </summary>
            <returns>WH_MOUSE (0x07) or WH_MOUSE_LL (0x14) constant.</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.MouseHookListener.Dispose(System.Boolean)">
            <summary>
            Method to be used from <see cref="M:XyratexOSC.GlobalHook.MouseHookListener.Dispose(System.Boolean)"/> and finalizer.
            Override this method to release subclass sepcific references.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseMoveExt">
            <summary>
            Occurs when the mouse pointer is moved.
            </summary>
            <remarks>
            This event provides extended arguments of type <see cref="T:System.Windows.Forms.MouseEventArgs"/> enabling you to 
            supress further processing of mouse movement in other applications.
            </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseClick">
            <summary>
            Occurs when a click was performed by the mouse.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseClickExt">
            <summary>
            Occurs when a click was performed by the mouse.
            </summary>
            <remarks>
            This event provides extended arguments of type <see cref="T:System.Windows.Forms.MouseEventArgs"/> enabling you to 
            supress further processing of mouse click in other applications.
            </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseDown">
            <summary>
            Occurs when the mouse a mouse button is pressed.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseDownExt">
            <summary>
            Occurs when the mouse a mouse button is pressed.
            </summary>
            <remarks>
            This event provides extended arguments of type <see cref="T:System.Windows.Forms.MouseEventArgs"/> enabling you to 
            supress further processing of mouse click in other applications.
            </remarks>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseUp">
            <summary>
            Occurs when a mouse button is released.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseWheel">
            <summary>
            Occurs when the mouse wheel moves.
            </summary>
        </member>
        <member name="E:XyratexOSC.GlobalHook.MouseHookListener.MouseDoubleClick">
            <summary>
            Occurs when a mouse button is double-clicked.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.AppHooker">
            <summary>
            Provides methods for subscription and unsubscription to application mouse and keyboard hooks.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.Hooker">
            <summary>
            Provides base implementation of methods for subscription and unsubscription to application and/or global mouse and keyboard hooks.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.AppHooker.WH_MOUSE">
            <summary>
            Installs a hook procedure that monitors mouse messages. For more information, see the MouseProc hook procedure. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.AppHooker.WH_KEYBOARD">
            <summary>
            Installs a hook procedure that monitors keystroke messages. For more information, see the KeyboardProc hook procedure. 
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.GlobalHooker">
            <summary>
            Provides methods for subscription and unsubscription to global mouse and keyboard hooks.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.GlobalHooker.WH_MOUSE_LL">
            <summary>
            Windows NT/2000/XP/Vista/7: Installs a hook procedure that monitors low-level mouse input events.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.GlobalHooker.WH_KEYBOARD_LL">
            <summary>
            Windows NT/2000/XP/Vista/7: Installs a hook procedure that monitors low-level keyboard  input events.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.HookCallback">
            <summary>
            The CallWndProc hook procedure is an application-defined or library-defined callback 
            function used with the SetWindowsHookEx function. The HOOKPROC type defines a pointer 
            to this callback function. CallWndProc is a placeholder for the application-defined 
            or library-defined function name.
            </summary>
            <param name="nCode">
            [in] Specifies whether the hook procedure must process the message. 
            If nCode is HC_ACTION, the hook procedure must process the message. 
            If nCode is less than zero, the hook procedure must pass the message to the 
            CallNextHookEx function without further processing and must return the 
            value returned by CallNextHookEx.
            </param>
            <param name="wParam">
            [in] Specifies whether the message was sent by the current thread. 
            If the message was sent by the current thread, it is nonzero; otherwise, it is zero. 
            </param>
            <param name="lParam">
            [in] Pointer to a CWPSTRUCT structure that contains details about the message. 
            </param>
            <returns>
            If nCode is less than zero, the hook procedure must return the value returned by CallNextHookEx. 
            If nCode is greater than or equal to zero, it is highly recommended that you call CallNextHookEx 
            and return the value it returns; otherwise, other applications that have installed WH_CALLWNDPROC 
            hooks will not receive hook notifications and may behave incorrectly as a result. If the hook 
            procedure does not call CallNextHookEx, the return value should be zero. 
            </returns>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/callwndproc.asp
            </remarks>
        </member>
        <member name="M:HookNativeMethods.CallNextHookEx(System.Int32,System.Int32,System.Int32,System.IntPtr)">
            <summary>
            The CallNextHookEx function passes the hook information to the next hook procedure in the current hook chain. 
            A hook procedure can call this function either before or after processing the hook information. 
            </summary>
            <param name="idHook">Ignored.</param>
            <param name="nCode">[in] Specifies the hook code passed to the current hook procedure.</param>
            <param name="wParam">[in] Specifies the wParam value passed to the current hook procedure.</param>
            <param name="lParam">[in] Specifies the lParam value passed to the current hook procedure.</param>
            <returns>This value is returned by the next hook procedure in the chain.</returns>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
            </remarks>
        </member>
        <member name="M:HookNativeMethods.SetWindowsHookEx(System.Int32,XyratexOSC.GlobalHook.WinApi.HookCallback,System.IntPtr,System.Int32)">
            <summary>
            The SetWindowsHookEx function installs an application-defined hook procedure into a hook chain. 
            You would install a hook procedure to monitor the system for certain types of events. These events 
            are associated either with a specific thread or with all threads in the same desktop as the calling thread. 
            </summary>
            <param name="idHook">
            [in] Specifies the type of hook procedure to be installed. This parameter can be one of the following values.
            </param>
            <param name="lpfn">
            [in] Pointer to the hook procedure. If the dwThreadId parameter is zero or specifies the identifier of a 
            thread created by a different process, the lpfn parameter must point to a hook procedure in a dynamic-link 
            library (DLL). Otherwise, lpfn can point to a hook procedure in the code associated with the current process.
            </param>
            <param name="hMod">
            [in] Handle to the DLL containing the hook procedure pointed to by the lpfn parameter. 
            The hMod parameter must be set to NULL if the dwThreadId parameter specifies a thread created by 
            the current process and if the hook procedure is within the code associated with the current process. 
            </param>
            <param name="dwThreadId">
            [in] Specifies the identifier of the thread with which the hook procedure is to be associated. 
            If this parameter is zero, the hook procedure is associated with all existing threads running in the 
            same desktop as the calling thread. 
            </param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
            </remarks>
        </member>
        <member name="M:HookNativeMethods.UnhookWindowsHookEx(System.Int32)">
            <summary>
            The UnhookWindowsHookEx function removes a hook procedure installed in a hook chain by the SetWindowsHookEx function. 
            </summary>
            <param name="idHook">
            [in] Handle to the hook to be removed. This parameter is a hook handle obtained by a previous call to SetWindowsHookEx. 
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookfunctions/setwindowshookex.asp
            </remarks>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.KeyboardHookStruct">
            <summary>
            The KeyboardHookStruct structure contains information about a low-level keyboard input event. 
            </summary>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/hooks/hookreference/hookstructures/cwpstruct.asp
            </remarks>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardHookStruct.VirtualKeyCode">
            <summary>
            Specifies a virtual-key code. The code must be a value in the range 1 to 254. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardHookStruct.ScanCode">
            <summary>
            Specifies a hardware scan code for the key. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardHookStruct.Flags">
            <summary>
            Specifies the extended-key flag, event-injected flag, context code, and transition-state flag.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardHookStruct.Time">
            <summary>
            Specifies the Time stamp for this message.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardHookStruct.ExtraInfo">
            <summary>
            Specifies extra information associated with the message. 
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.TryGetCharFromKeyboardState(System.Int32,System.Int32,System.Char@)">
            <summary>
            Translates a virtual key to its character equivalent using the current keyboard layout without knowing the 
            scancode in advance.
            </summary>
            <param name="virtualKeyCode"></param>
            <param name="fuState"></param>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.TryGetCharFromKeyboardState(System.Int32,System.Int32,System.Int32,System.Char@)">
            <summary>
            Translates a virtual key to its character equivalent using the current keyboard layout
            </summary>
            <param name="virtualKeyCode"></param>
            <param name="scanCode"></param>
            <param name="fuState"></param>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.TryGetCharFromKeyboardState(System.Int32,System.Int32,System.Int32,System.UInt32,System.Char@)">
            <summary>
            Translates a virtual key to its character equivalent using a specified keyboard layout
            </summary>
            <param name="virtualKeyCode"></param>
            <param name="scanCode"></param>
            <param name="fuState"></param>
            <param name="dwhkl"></param>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.GetActiveKeyboard">
            <summary>
            Gets the input locale identifier for the active application's thread.  Using this combined with the ToUnicodeEx and 
            MapVirtualKeyEx enables Windows to properly translate keys based on the keyboard layout designated for the application.
            </summary>
            <returns>HKL</returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.ToAscii(System.Int32,System.Int32,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            The ToAscii function translates the specified virtual-key code and keyboard
            state to the corresponding character or characters. The function translates the code
            using the input language and physical keyboard layout identified by the keyboard layout handle.
            </summary>
            <param name="uVirtKey">
            [in] Specifies the virtual-key code to be translated.
            </param>
            <param name="uScanCode">
            [in] Specifies the hardware scan code of the key to be translated.
            The high-order bit of this value is set if the key is up (not pressed).
            </param>
            <param name="lpbKeyState">
            [in] Pointer to a 256-byte array that contains the current keyboard state.
            Each element (byte) in the array contains the state of one key.
            If the high-order bit of a byte is set, the key is down (pressed).
            The low bit, if set, indicates that the key is toggled on. In this function,
            only the toggle bit of the CAPS LOCK key is relevant. The toggle state
            of the NUM LOCK and SCROLL LOCK keys is ignored.
            </param>
            <param name="lpwTransKey">
            [out] Pointer to the buffer that receives the translated character or characters.
            </param>
            <param name="fuState">
            [in] Specifies whether a menu is active. This parameter must be 1 if a menu is active, or 0 otherwise.
            </param>
            <returns>
            If the specified key is a dead key, the return value is negative. Otherwise, it is one of the following values.
            Value Meaning
            0 The specified virtual key has no translation for the current state of the keyboard.
            1 One character was copied to the buffer.
            2 Two characters were copied to the buffer. This usually happens when a dead-key character
            (accent or diacritic) stored in the keyboard layout cannot be composed with the specified
            virtual key to form a single character.
            </returns>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/toascii.asp
            </remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.ToUnicodeEx(System.Int32,System.Int32,System.Byte[],System.Text.StringBuilder,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Translates the specified virtual-key code and keyboard state to the corresponding Unicode character or characters.
            </summary>
            <param name="wVirtKey">[in] The virtual-key code to be translated.</param>
            <param name="wScanCode">[in] The hardware scan code of the key to be translated. The high-order bit of this value is set if the key is up.</param>
            <param name="lpKeyState">[in, optional] A pointer to a 256-byte array that contains the current keyboard state. Each element (byte) in the array contains the state of one key. If the high-order bit of a byte is set, the key is down.</param>
            <param name="pwszBuff">[out] The buffer that receives the translated Unicode character or characters. However, this buffer may be returned without being null-terminated even though the variable name suggests that it is null-terminated.</param>
            <param name="cchBuff">[in] The size, in characters, of the buffer pointed to by the pwszBuff parameter.</param>
            <param name="wFlags">[in] The behavior of the function. If bit 0 is set, a menu is active. Bits 1 through 31 are reserved.</param>
            <param name="dwhkl">The input locale identifier used to translate the specified code.</param>
            <returns>
                -1 &lt;= return &lt;= n
            <list type="bullet">
                <item>-1    = The specified virtual key is a dead-key character (accent or diacritic). This value is returned regardless of the keyboard layout, even if several characters have been typed and are stored in the keyboard state. If possible, even with Unicode keyboard layouts, the function has written a spacing version of the dead-key character to the buffer specified by pwszBuff. For example, the function writes the character SPACING ACUTE (0x00B4), rather than the character NON_SPACING ACUTE (0x0301).</item>
                <item> 0    = The specified virtual key has no translation for the current state of the keyboard. Nothing was written to the buffer specified by pwszBuff.</item>
                <item> 1    = One character was written to the buffer specified by pwszBuff.</item>
                <item> n    = Two or more characters were written to the buffer specified by pwszBuff. The most common cause for this is that a dead-key character (accent or diacritic) stored in the keyboard layout could not be combined with the specified virtual key to form a single character. However, the buffer may contain more characters than the return value specifies. When this happens, any extra characters are invalid and should be ignored.</item>
            </list>
            </returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.GetKeyboardState(System.Byte[])">
            <summary>
            The GetKeyboardState function copies the status of the 256 virtual keys to the
            specified buffer.
            </summary>
            <param name="pbKeyState">
            [in] Pointer to a 256-byte array that contains keyboard key states.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/toascii.asp
            </remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.GetKeyState(System.Int32)">
             <summary>
             The GetKeyState function retrieves the status of the specified virtual key. The status specifies whether the key is up, down, or toggled
             (on, off—alternating each time the key is pressed).
             </summary>
             <param name="vKey">
             [in] Specifies a virtual key. If the desired virtual key is a letter or digit (A through Z, a through z, or 0 through 9), nVirtKey must be set to the ASCII value of that character. For other keys, it must be a virtual-key code.
             </param>
             <returns>
             The return value specifies the status of the specified virtual key, as follows:
            If the high-order bit is 1, the key is down; otherwise, it is up.
            If the low-order bit is 1, the key is toggled. A key, such as the CAPS LOCK key, is toggled if it is turned on. The key is off and untoggled if the low-order bit is 0. A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off when the key is untoggled.
             </returns>
             <remarks>http://msdn.microsoft.com/en-us/library/ms646301.aspx</remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.MapVirtualKeyEx(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Translates (maps) a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.
            </summary>
            <param name="uCode">[in] The virtual key code or scan code for a key. How this value is interpreted depends on the value of the uMapType parameter. </param>
            <param name="uMapType">[in] The translation to be performed. The value of this parameter depends on the value of the uCode parameter. </param>
            <param name="dwhkl">[in] The input locale identifier used to translate the specified code.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.GetKeyboardLayout(System.Int32)">
            <summary>
            Retrieves the active input locale identifier (formerly called the keyboard layout) for the specified thread. 
            If the idThread parameter is zero, the input locale identifier for the active thread is returned.
            </summary>
            <param name="dwLayout">[in] The identifier of the thread to query, or 0 for the current thread. </param>
            <returns>The return value is the input locale identifier for the thread. The low word contains a Language Identifier for the input 
                     language and the high word contains a device handle to the physical layout of the keyboard.</returns>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.MapType">
            <summary>
            MapVirtualKeys uMapType
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.MapType.MAPVK_VK_TO_VSC">
            <summary>
            uCode is a virtual-key code and is translated into an unshifted character value in the low-order word of the return value. Dead keys (diacritics) are indicated by setting the top bit of the return value. If there is no translation, the function returns 0.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.MapType.MAPVK_VSC_TO_VK">
            <summary>
            uCode is a virtual-key code and is translated into a scan code. If it is a virtual-key code that does not distinguish between left- and right-hand keys, the left-hand scan code is returned. If there is no translation, the function returns 0.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.MapType.MAPVK_VK_TO_CHAR">
            <summary>
            uCode is a scan code and is translated into a virtual-key code that does not distinguish between left- and right-hand keys. If there is no translation, the function returns 0.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.KeyboardNativeMethods.MapType.MAPVK_VSC_TO_VK_EX">
            <summary>
            uCode is a scan code and is translated into a virtual-key code that distinguishes between left- and right-hand keys. If there is no translation, the function returns 0.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_MBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is posted when the user presses the mouse wheel. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X mouse
            button. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X  mouse
            button.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second
            X mouse button.
            </summary>
            <remarks>Only windows that have the CS_DBLCLKS style can receive WM_XBUTTONDBLCLK messages.</remarks>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem 
            key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem 
            key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, 
            or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user 
            presses the F10 key (which activates the menu bar) or holds down the ALT key and then 
            presses another key. It also occurs when no window currently has the keyboard focus; 
            in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that 
            receives the message can distinguish between these two contexts by checking the context 
            code in the lParam parameter. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Messages.WM_SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user 
            releases a key that was pressed while the ALT key was held down. It also occurs when no 
            window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent 
            to the active window. The window that receives the message can distinguish between 
            these two contexts by checking the context code in the lParam parameter. 
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.MouseNativeMethods.GetDoubleClickTime">
            <summary>
            The GetDoubleClickTime function retrieves the current double-click time for the mouse. A double-click is a series of two clicks of the 
            mouse button, the second occurring within a specified time after the first. The double-click time is the maximum number of 
            milliseconds that may occur between the first and second click of a double-click. 
            </summary>
            <returns>
            The return value specifies the current double-click time, in milliseconds. 
            </returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/ms646258(VS.85).aspx
            </remarks>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.MouseStruct">
            <summary>
            The <see cref="T:XyratexOSC.GlobalHook.WinApi.MouseStruct"/> structure contains information about a mouse input event.
            </summary>
            <remarks>
            See full documentation at http://globalmousekeyhook.codeplex.com/wikipage?title=MouseStruct
            </remarks>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.MouseStruct.Point">
            <summary>
            Specifies a Point structure that contains the X- and Y-coordinates of the cursor, in screen coordinates. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.MouseStruct.MouseData">
            <summary>
            Specifies information associated with the message.
            </summary>
            <remarks>
            The possible values are:
            <list type="bullet">
            <item>
            <description>0 - No Information</description>
            </item>
            <item>
            <description>1 - X-Button1 Click</description>
            </item>
            <item>
            <description>2 - X-Button2 Click</description>
            </item>
            <item>
            <description>120 - Mouse Scroll Away from User</description>
            </item>
            <item>
            <description>-120 - Mouse Scroll Toward User</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.MouseStruct.Timestamp">
            <summary>
            Returns a Timestamp associated with the input, in System Ticks.
            </summary>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.AppMouseStruct">
            <summary>
            The AppMouseStruct structure contains information about a application-level mouse input event.
            </summary>
            <remarks>
            See full documentation at http://globalmousekeyhook.codeplex.com/wikipage?title=MouseStruct
            </remarks>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.AppMouseStruct.Point">
            <summary>
            Specifies a Point structure that contains the X- and Y-coordinates of the cursor, in screen coordinates. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.AppMouseStruct.MouseData">
            <summary>
            Specifies information associated with the message.
            </summary>
            <remarks>
            The possible values are:
            <list type="bullet">
            <item>
            <description>0 - No Information</description>
            </item>
            <item>
            <description>1 - X-Button1 Click</description>
            </item>
            <item>
            <description>2 - X-Button2 Click</description>
            </item>
            <item>
            <description>120 - Mouse Scroll Away from User</description>
            </item>
            <item>
            <description>-120 - Mouse Scroll Toward User</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.AppMouseStruct.ToMouseStruct">
            <summary>
            Converts the current <see cref="T:XyratexOSC.GlobalHook.WinApi.AppMouseStruct"/> into a <see cref="T:XyratexOSC.GlobalHook.WinApi.MouseStruct"/>.
            </summary>
            <returns></returns>
            <remarks>
            The AppMouseStruct does not have a timestamp, thus one is generated at the time of this call.
            </remarks>
        </member>
        <member name="T:XyratexOSC.GlobalHook.WinApi.Point">
            <summary>
            The Point structure defines the X- and Y- coordinates of a point. 
            </summary>
            <remarks>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/rectangl_0tiq.asp
            </remarks>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Point.X">
            <summary>
            Specifies the X-coordinate of the point. 
            </summary>
        </member>
        <member name="F:XyratexOSC.GlobalHook.WinApi.Point.Y">
            <summary>
            Specifies the Y-coordinate of the point. 
            </summary>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.ThreadNativeMethods.GetCurrentThreadId">
            <summary>
            Retrieves the unmanaged thread identifier of the calling thread.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.ThreadNativeMethods.GetForegroundWindow">
            <summary>
            Retrieves a handle to the foreground window (the window with which the user is currently working). 
            The system assigns a slightly higher priority to the thread that creates the foreground window than it does to other threads. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.GlobalHook.WinApi.ThreadNativeMethods.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            Retrieves the identifier of the thread that created the specified window and, optionally, the identifier of the process that 
            created the window. 
            </summary>
            <param name="handle">A handle to the window. </param>
            <param name="processId">A pointer to a variable that receives the process identifier. If this parameter is not NULL, 
                                    GetWindowThreadProcessId copies the identifier of the process to the variable; otherwise, it does not. </param>
            <returns>The return value is the identifier of the thread that created the window. </returns>
        </member>
        <member name="T:XyratexOSC.Licensing.LicenseStatus">
            <summary>
            Specifies the authentication status that was found during a <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/>.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseStatus.Failed">
            <summary>Failed to authenticate.</summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseStatus.UserId">
            <summary>Authenticated with the Window's User Id.</summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseStatus.Key">
            <summary>Authenticated with a security dongle.</summary>
        </member>
        <member name="T:XyratexOSC.Licensing.LicenseFeatures">
            <summary>
            Specifies the set of application features that are enabled through the current license.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.None">
            <summary>
            No specific features enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.ABS">
            <summary>
            ABS inspection is enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.POLE">
            <summary>
            Pole inspection is enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.BACKPAD">
            <summary>
            Backpad inspection is enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.CE">
            <summary>
            CE inspection is enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.OCR">
            <summary>
            OCR edge inspection is enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.LONGSIDES">
            <summary>
            Both long-side inspections are enabled
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseFeatures.DEPO">
            <summary>
            Depo side inspection is enabled
            </summary>
        </member>
        <member name="T:XyratexOSC.Licensing.LicenseKeyCode">
            <summary>
            Specifies the Ultrapro Key Failure Code that was returned during the attempt to get the license.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.SUCCESS">
            <summary>
            The function completed successfully.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_FUNCTION_CODE">
            <summary>
            You specified an invalid function code.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_PACKET">
            <summary>
            A checksum error was detected in the command packet, indicating an internal inconsistency. Typically a threading issue.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.UNIT_NOT_FOUND">
            <summary>
            Unable to find the desired hardware key.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.ACCESS_DENIED">
            <summary>
            You attempted to perform an illegal action on a cell.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_MEMORY_ADDRESS">
            <summary>
            You specified an invalid memory address.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_ACCESS_CODE">
            <summary>
            You specified an invalid access code.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.PORT_IS_BUSY">
            <summary>
            The requested operation could not be completed because the port is busy.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.WRITE_NOT_READY">
            <summary>
            The write or decrement operation could not be performed due to lack of sufficient power.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.NO_PORT_FOUND">
            <summary>
            No parallel ports could be found, or there was a problem with the protocol being used on the network.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.ALREADY_ZERO">
            <summary>
            You tried to decrement a counter that contains the value zero. 
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.DRIVER_OPEN_ERROR">
            <summary>
            The SafeNet Sentinel Driver was not installed or detected.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.DRIVER_NOT_INSTALLED">
            <summary>
            The DRIVE r_ NO t_ INSTALLED
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.IO_COMMUNICATIONS_ERROR">
            <summary>
            The system device driver is having problems communicating.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.PACKET_TOO_SMALL">
            <summary>
            The memory allocated for the API packet is less than the required size.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_PARAMETER">
            <summary>
            Arguments and values passed to the API function are invalid.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.MEM_ACCESS_ERROR">
            <summary>
            Memory access error.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.VERSION_NOT_SUPPORTED">
            <summary>
            The current system device driver is outdated. Update the driver. 
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.OS_NOT_SUPPORTED">
            <summary>
            The operating system or environment is not supported by the client library. 
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.QUERY_TOO_LONG">
            <summary>
            You sent a query string longer than 56 characters. Send a shorter string.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_COMMAND">
            <summary>
            An invalid command was specified in the API call.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.MEM_ALIGNMENT_ERROR">
            <summary>
            Memory alignment error.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.DRIVER_IS_BUSY">
            <summary>
            The Sentinel Driver is busy. Try the function again.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.PORT_ALLOCATION_FAILURE">
            <summary>
            Failure to allocate a parallel port through the operating system’s parallel port contention handler.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.PORT_RELEASE_FAILURE">
            <summary>
            Failure to release a previously allocated parallel port through the operating system’s parallel port contention handler.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.ACQUIRE_PORT_TIMEOUT">
            <summary>
            Failure to access the parallel port within the defined time.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.SIGNAL_NOT_SUPPORTED">
            <summary>
            The particular system does not support a signal line.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.UNKNOWN_MACHINE">
            <summary>
            Unknown machine.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.SYS_API_ERROR">
            <summary>
            System API error.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.UNIT_IS_BUSY">
            <summary>
            The key is busy.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_PORT_TYPE">
            <summary>
            Invalid port type.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_MACH_TYPE">
            <summary>
            Invalid machine type.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_IRQ_MASK">
            <summary>
            Invalid IRQ mask.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_CONT_METHOD">
            <summary>
            Invalid cont method.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_PORT_FLAGS">
            <summary>
            Invalid port flags.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_LOG_PORT_CFG">
            <summary>
            Invalid log port config.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_OS_TYPE">
            <summary>
            Invalid OS type.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_LOG_PORT_NUM">
            <summary>
            Invalid log port number.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INVALID_ROUTER_FLGS">
            <summary>
            Invalid router flags.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.INIT_NOT_CALLED">
            <summary>
            Initialization was not called.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.DRVR_TYPE_NOT_SUPPORTED">
            <summary>
            The type of driver access, either direct I/O or system driver, is not supported for the defined operating system and client library.
            </summary>
        </member>
        <member name="F:XyratexOSC.Licensing.LicenseKeyCode.FAIL_ON_DRIVER_COMM">
            <summary>
            The client library failed to communicate with the Sentinel Driver.
            </summary>
        </member>
        <member name="T:XyratexOSC.Licensing.Authentication">
            <summary>
            An authentication package describing the status and features found during a <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.Licensing.Authentication.IsValid">
            <summary>
            Determines whether this authentication packet has a valid license.
            </summary>
            <returns>
              <c>true</c> if the license is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:XyratexOSC.Licensing.Authentication.Status">
            <summary>
            Gets the license status of a <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/>.
            </summary>
            <value>
            The license status.
            </value>
        </member>
        <member name="P:XyratexOSC.Licensing.Authentication.Features">
            <summary>
            Gets the bitwise value specifying which features are enabled by this license.
            </summary>
            <value>
            The enabled features.
            </value>
        </member>
        <member name="P:XyratexOSC.Licensing.Authentication.KeyCode">
            <summary>
            Gets the associated Ultrapro key failure-code.
            </summary>
            <value>
            The Ultrapro key code.
            </value>
        </member>
        <member name="P:XyratexOSC.Licensing.Authentication.Details">
            <summary>
            The details of this authentication in a friendly string.
            </summary>
            <value>
            The authentication details.
            </value>
        </member>
        <member name="T:XyratexOSC.Licensing.LicensingException">
            <summary>
            Represents a licensing error that occurred during a license verification.
            </summary>
        </member>
        <member name="M:XyratexOSC.Licensing.LicensingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Licensing.LicensingException"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Licensing.LicensingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Licensing.LicensingException"/> class with a 
            specified error message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:XyratexOSC.Licensing.LicensingException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Licensing.LicensingException"/> class with a 
            specified error message and Sentinel <see cref="P:XyratexOSC.Licensing.LicensingException.ErrorCode"/>.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="errCode">The Sentinel UltraPro err code.</param>
        </member>
        <member name="P:XyratexOSC.Licensing.LicensingException.ErrorCode">
            <summary>
            Gets the Sentinel SafeNet error code. 
            </summary>
            <value>The error code.</value>
        </member>
        <member name="T:XyratexOSC.Licensing.LicenseLock">
            <summary>
            A Wrapper Class to the Sentinel UltraPro security dongle for license verification.
            </summary>
            <remarks>
            The <see cref="T:XyratexOSC.Licensing.LicenseLock"/> class verifies a valid license dongle is plugged into the computer on instatiation
            and through a call to verification (see <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/> that can be made at any time throughout the application.
            If a valid license is found the class does nothing, but if there is any problem with the licensing dongle a
            <see cref="T:XyratexOSC.Licensing.LicensingException"/> will be thrown.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Licensing.LicenseLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Licensing.LicenseLock"/> class.
            This also includes a license verification call (see <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/>).
            Check all available design IDs until one is found
            </summary>
        </member>
        <member name="M:XyratexOSC.Licensing.LicenseLock.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Licensing.LicenseLock"/> class with the specified dongle DesignID.
            This also includes a license verification call (see <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/>).
            </summary>
            <param name="designId">The dongle designID.</param>
            <exception cref="T:XyratexOSC.Licensing.LicensingException">The Sentinel UltraPro failed to initialize.</exception>
        </member>
        <member name="M:XyratexOSC.Licensing.LicenseLock.Finalize">
            <summary>
            Releases the Ultrapro dongle license.
            </summary>
        </member>
        <member name="M:XyratexOSC.Licensing.LicenseLock.Verify">
            <summary>
            Verifies the security dongle license (except for Xyratex developers).
            This releases and re-acquires the UltraPro license using our developerID and designID.
            </summary>
            <returns>The <see cref="P:XyratexOSC.Licensing.LicenseLock.Authentication"/> result from the verification.</returns>
        </member>
        <member name="M:XyratexOSC.Licensing.LicenseLock.Verify(System.UInt16)">
            <summary>
            Verifies the security dongle license (except for Xyratex developers).
            This releases and re-acquires the UltraPro license using our developerID and the specified designID.
            </summary>
            <param name="designId">The design id.</param>
            <returns>The <see cref="P:XyratexOSC.Licensing.LicenseLock.Authentication"/> result from the verification.</returns>
        </member>
        <member name="M:XyratexOSC.Licensing.LicenseLock.SetFeatures(XyratexOSC.Licensing.LicenseFeatures,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            [Used internally for key setup]
            </summary>
            <param name="features">[internal use only]</param>
            <param name="writePass">[internal use only]</param>
            <param name="owp1">[internal use only]</param>
            <param name="owp2">[internal use only]</param>
            <returns></returns>
        </member>
        <member name="P:XyratexOSC.Licensing.LicenseLock.Authentication">
            <summary>
            Gets the <see cref="P:XyratexOSC.Licensing.LicenseLock.Authentication"/> value from the last license <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/>.
            </summary>
            <value>The type of authentication from the last license verify.</value>
            <seealso cref="P:XyratexOSC.Licensing.LicenseLock.Authentication"/>
        </member>
        <member name="P:XyratexOSC.Licensing.LicenseLock.XyratexKeyNeeded">
            <summary>
            Gets or sets a value indicating whether Xyratex users require a key.
            </summary>
            <value>
              <c>true</c> if a key is needed for Xyratex users; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:XyratexOSC.Licensing.NamespaceDoc">
             <summary>
             <para>The <see cref="N:XyratexOSC.Licensing"/> namespace is used for checking the XyratexOSC licensing dongle.
             It contains the <see cref="T:XyratexOSC.Licensing.LicenseLock"/> wrapper class that connects to and verifies a valid Sentinel UltraPro
             security dongle is attached to the system.</para>
             </summary>
             <remarks>
             The <see cref="T:XyratexOSC.Licensing.LicenseLock"/> class verifies a valid license dongle is plugged into the computer on instatiation
             and through a call to verification (see <see cref="M:XyratexOSC.Licensing.LicenseLock.Verify"/> that can be made at any time throughout the application.
             If a valid license is found the class does nothing, but if there is any problem with the licensing dongle a
             <see cref="T:XyratexOSC.Licensing.LicensingException"/> will be thrown.
             </remarks>
             <example>
             This example shows how to add license verification to an application
             <code>
             // Instantiation includes the verification routine. This secures the application at a minimum.
             LicenseLock license = new LicenseLock();
            
             // Verification can occur anywhere else in your application with the following call
             license.Verify();
             </code>
             </example>
             <seealso cref="T:XyratexOSC.Licensing.LicenseLock"/>
             <seealso cref="T:XyratexOSC.Licensing.LicensingException"/>
        </member>
        <member name="T:Ultrapro">
            <summary>
            <para>Ultrapro Class provided by SafeNet</para>
            <para>(C) Copyright 2007 SafeNet, Inc. All rights reserved.</para>
            <para>This module provide defination and wrappers for UltraPro Dual Client Library APIs</para>
            <para>(Documentation: http://xy01sps01.xy01.xyratex.com/sites/xyosc/software/Documents/Licensing/UltraPro_NET_Interface.pdf) </para>
            </summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SUCCESS">
            <summary>UltraPro ERR 0: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_FUNCTION_CODE">
            <summary>UltraPro ERR 1: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_PACKET">
            <summary>UltraPro ERR 2: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_UNIT_NOT_FOUND">
            <summary>UltraPro ERR 3: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_ACCESS_DENIED">
            <summary>UltraPro ERR 4: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_MEMORY_ADDRESS">
            <summary>UltraPro ERR 5: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_ACCESS_CODE">
            <summary>UltraPro ERR 6: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_PORT_IS_BUSY">
            <summary>UltraPro ERR 7: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_WRITE_NOT_READY">
            <summary>UltraPro ERR 8: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_PORT_FOUND">
            <summary>UltraPro ERR 9: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_ALREADY_ZERO">
            <summary>UltraPro ERR 10: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_DRIVER_OPEN_ERROR">
            <summary>UltraPro ERR 11: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_DRIVER_NOT_INSTALLED">
            <summary>UltraPro ERR 12: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_IO_COMMUNICATIONS_ERROR">
            <summary>UltraPro ERR 13: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_PACKET_TOO_SMALL">
            <summary>UltraPro ERR 15: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_PARAMETER">
            <summary>UltraPro ERR 16: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_MEM_ACCESS_ERROR">
            <summary>UltraPro ERR 17: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_VERSION_NOT_SUPPORTED">
            <summary>UltraPro ERR 18: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_OS_NOT_SUPPORTED">
            <summary>UltraPro ERR 19: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_QUERY_TOO_LONG">
            <summary>UltraPro ERR 20: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_COMMAND">
            <summary>UltraPro ERR 21: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_MEM_ALIGNMENT_ERROR">
            <summary>UltraPro ERR 29: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_DRIVER_IS_BUSY">
            <summary>UltraPro ERR 30: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_PORT_ALLOCATION_FAILURE">
            <summary>UltraPro ERR 31: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_PORT_RELEASE_FAILURE">
            <summary>UltraPro ERR 32: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_ACQUIRE_PORT_TIMEOUT">
            <summary>UltraPro ERR 39: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SIGNAL_NOT_SUPPORTED">
            <summary>UltraPro ERR 42: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_UNKNOWN_MACHINE">
            <summary>UltraPro ERR 44: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SYS_API_ERROR">
            <summary>UltraPro ERR 45: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_UNIT_IS_BUSY">
            <summary>UltraPro ERR 46: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_PORT_TYPE">
            <summary>UltraPro ERR 47: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_MACH_TYPE">
            <summary>UltraPro ERR 48: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_IRQ_MASK">
            <summary>UltraPro ERR 49: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_CONT_METHOD">
            <summary>UltraPro ERR 50: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_PORT_FLAGS">
            <summary>UltraPro ERR 51: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_LOG_PORT_CFG">
            <summary>UltraPro ERR 52: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_OS_TYPE">
            <summary>UltraPro ERR 53: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_LOG_PORT_NUM">
            <summary>UltraPro ERR 54: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_ROUTER_FLGS">
            <summary>UltraPro ERR 56: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INIT_NOT_CALLED">
            <summary>UltraPro ERR 57: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_DRVR_TYPE_NOT_SUPPORTED">
            <summary>UltraPro ERR 58: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_FAIL_ON_DRIVER_COMM">
            <summary>UltraPro ERR 59: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SERVER_PROBABLY_NOT_UP">
            <summary>UltraPro Networking ERR 60: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_UNKNOWN_HOST">
            <summary>UltraPro Networking ERR 61: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SENDTO_FAILED">
            <summary>UltraPro Networking ERR 62: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SOCKET_CREATION_FAILED">
            <summary>UltraPro Networking ERR 63: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NORESOURCES">
            <summary>UltraPro Networking ERR 64: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_BROADCAST_NOT_SUPPORTED">
            <summary>UltraPro Networking ERR 65: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_BAD_SERVER_MESSAGE">
            <summary>UltraPro Networking ERR 66: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_SERVER_RUNNING">
            <summary>UltraPro Networking ERR 67: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_NETWORK">
            <summary>UltraPro Networking ERR 68: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_SERVER_RESPONSE">
            <summary>UltraPro Networking ERR 69: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_LICENSE_AVAILABLE">
            <summary>UltraPro Networking ERR 70: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_LICENSE">
            <summary>UltraPro Networking ERR 71: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INVALID_OPERATION">
            <summary>UltraPro Networking ERR 72: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_BUFFER_TOO_SMALL">
            <summary>UltraPro Networking ERR 73: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_INTERNAL_ERROR">
            <summary>UltraPro Networking ERR 74: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_PACKET_ALREADY_INITIALIZED">
            <summary>UltraPro Networking ERR 75: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_PROTOCOL_NOT_INSTALLED">
            <summary>UltraPro Networking ERR 76: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_LEASE_FEATURE">
            <summary>UltraPro Networking ERR 101: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_LEASE_EXPIRED">
            <summary>UltraPro Networking ERR 102: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_COUNTER_LIMIT_REACHED">
            <summary>UltraPro Networking ERR 103: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_NO_DIGITAL_SIGNATURE">
            <summary>UltraPro Networking ERR 104: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_SYS_FILE_CORRUPTED">
            <summary>UltraPro Networking ERR 105: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SP_ERR_STRING_BUFFER_TOO_LONG">
            <summary>UltraPro Networking ERR 106: See UltraPro Documentation.</summary>
        </member>
        <member name="F:Ultrapro.SH_BAD_ALGO">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_LONG_MSG">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_READ_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_NOT_ENOUGH_MEMORY">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_CANNOT_OPEN">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_WRITE_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_CANNOT_OVERWRITE">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_INVALID_HEADER">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_TMP_CREATE_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_PATH_NOT_THERE">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_BAD_FILE_INFO">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_NOT_WIN32FILE">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_INVALID_MACHINE">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_INVALID_SECTION">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_INVALID_RELOC">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_CRYPT_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_SMARTHEAP_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_IMPORT_OVERWRITE_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_NO_PESHELL">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_REQUIRED">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_CANNOT_HANDLE_FILE">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_IMPORT_DLL_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_IMPORT_FUNCTION_ERROR">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_X64_SHELL_ENGINE">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_STRONG_NAME">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_10">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_SDK_10">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_11">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_SDK_11">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_20_OR_30">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FRAMEWORK_SDK_20">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_APP_NOT_SUPPORTED">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_FILE_COPY">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SH_HEADER_SIZE_EXCEED">
            <summary>UltraPro Shell ERR</summary>
        </member>
        <member name="F:Ultrapro.SP_TCP_PROTOCOL">
            <summary>UltraPro TCP Protocol Flag</summary>
        </member>
        <member name="F:Ultrapro.SP_IPX_PROTOCOL">
            <summary>UltraPro IPX Protocol Flag</summary>
        </member>
        <member name="F:Ultrapro.SP_NETBEUI_PROTOCOL">
            <summary>UltraPro NETBEUI Protocol Flag</summary>
        </member>
        <member name="F:Ultrapro.SP_DOSRM_LOCAL_DRVR">
            <summary>DOS Real Mode local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_WIN3x_LOCAL_DRVR">
            <summary>Windows 3.x local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_WIN32s_LOCAL_DRVR">
            <summary>Win32s local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_WIN3x_SYS_DRVR">
            <summary>Windows 3.x system driver</summary>
        </member>
        <member name="F:Ultrapro.SP_WINNT_SYS_DRVR">
            <summary>Windows NT system driver</summary>
        </member>
        <member name="F:Ultrapro.SP_WIN95_SYS_DRVR">
            <summary>Windows 95 system driver</summary>
        </member>
        <member name="F:Ultrapro.SP_NW_LOCAL_DRVR">
            <summary>Netware local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_QNX_LOCAL_DRVR">
            <summary>QNX local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_UNIX_SYS_DRVR">
            <summary>UNIX local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_SOLARIS_SYS_DRVR">
            <summary>SOLARIS local driver</summary>
        </member>
        <member name="F:Ultrapro.SP_LINUX_SYS_DRVR">
            <summary>Linux system driver</summary>
        </member>
        <member name="F:Ultrapro.SP_LINUX_LOCAL_DRVR">
            <summary>Linux local driver	</summary>
        </member>
        <member name="F:Ultrapro.SP_AIX_SYS_DRVR">
            <summary>AIX system driver</summary>
        </member>
        <member name="F:Ultrapro.SP_UNIXWARE_SYS_DRVR">
            <summary>UNIX system  driver</summary>
        </member>
        <member name="F:Ultrapro.SP_MAX_NUM_DEV">
            <summary>Maximum number of devices</summary>
        </member>
        <member name="F:Ultrapro.SP_MAX_NAME_LEN">
            <summary>Maximum host name length</summary>
        </member>
        <member name="F:Ultrapro.SP_MAX_ADDR_LEN">
            <summary>Maximum host address length</summary>
        </member>
        <member name="F:Ultrapro.SP_MAX_QUERY_SIZE">
            <summary>Maximum number of query bytes</summary>
        </member>
        <member name="F:Ultrapro.SP_LIC_UPDATE_INT">
            <summary>Update Time: Default heartbeat - 2*60 = 2 min.</summary>
        </member>
        <member name="F:Ultrapro.SP_MAX_HEARTBEAT">
            <summary>Update Time: Max heartbeat - 30*24*60*60 seconds</summary>
        </member>
        <member name="F:Ultrapro.SP_MIN_HEARTBEAT">
            <summary>Update Time: Min heartbeat - 60 seconds</summary>
        </member>
        <member name="F:Ultrapro.SP_INFINITE_HEARTBEAT">
            <summary>Update Time: Infinite heartbeat</summary>
        </member>
        <member name="F:Ultrapro.SP_STANDALONE_MODE">
            <summary>Communication Mode</summary>
        </member>
        <member name="F:Ultrapro.SP_DRIVER_MODE">
            <summary>Communication Mode</summary>
        </member>
        <member name="F:Ultrapro.SP_LOCAL_MODE">
            <summary>Communication Mode</summary>
        </member>
        <member name="F:Ultrapro.SP_BROADCAST_MODE">
            <summary>Communication Mode</summary>
        </member>
        <member name="F:Ultrapro.SP_ALL_MODE">
            <summary>Communication Mode</summary>
        </member>
        <member name="F:Ultrapro.SP_SERVER_MODE">
            <summary>Communication Mode</summary>
        </member>
        <member name="F:Ultrapro.SP_INT8_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_INT32_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_STRING_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_BOOL_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_DATE_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_LEASE_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_ALGO_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_COUNTER_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_DATA_WORD_TYPE">
            <summary>Toolkit Cell Address Type</summary>
        </member>
        <member name="F:Ultrapro.SP_RESERVED_TYPE">
            <summary>Toolkit Cell Address Type</summary>    
        </member>
        <member name="F:Ultrapro.SP_SHARE_USERNAME">
            <summary>Sharing Flag</summary>
        </member>
        <member name="F:Ultrapro.SP_SHARE_MAC_ADDRESS">
            <summary>Sharing Flag</summary>
        </member>
        <member name="F:Ultrapro.SP_SHARE_DEFAULT">
            <summary>Sharing Flag</summary>
        </member>
        <member name="F:Ultrapro.SP_KEY_FORM_FACTOR_PARALLEL">
            <summary>Key Type Constant</summary>
        </member>
        <member name="F:Ultrapro.SP_KEY_FORM_FACTOR_USB">
            <summary>Key Type Constant</summary>
        </member>
        <member name="F:Ultrapro.SP_SUPERPRO_FAMILY_KEY">
            <summary>Key Type Constant</summary>
        </member>
        <member name="F:Ultrapro.SP_ULTRAPRO_FAMILY_KEY">
            <summary>Key Type Constant</summary>
        </member>
        <member name="F:Ultrapro.SP_UNKNOWN_FAMILY_KEY">
            <summary>Key Type Constant</summary>
        </member>
        <member name="F:Ultrapro.SP_SERIAL_NUMBER_INTEGER">
            <summary>For SFNTsntlReadValue</summary>
        </member>
        <member name="F:Ultrapro.SP_DEVELOPER_ID_WORD">
            <summary>For SFNTsntlReadValue</summary>
        </member>
        <member name="F:Ultrapro.SP_DESIGN_ID_WORD">
            <summary>For SFNTsntlReadValue</summary>
        </member>
        <member name="F:Ultrapro.SP_PART_NUMBER_STRING">
            <summary>For SFNTsntlReadString</summary>   
        </member>
        <member name="F:Ultrapro.SP_MODEL_NUMBER_STRING">
            <summary>Handles 'Part Number' to 'Model Number' renaming</summary>   
        </member>
        <member name="F:Ultrapro.SP_TERM_SERV_CHECK_ON">
            <summary>For SFNTsntlCheckTerminalService</summary> 
        </member>
        <member name="F:Ultrapro.SP_TERM_SERV_CHECK_OFF">
            <summary>For SFNTsntlCheckTerminalService</summary> 
        </member>
        <member name="M:Ultrapro.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ultrapro"/> class.
            </summary>
        </member>
        <member name="M:Ultrapro.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Ultrapro"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Ultrapro.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ultrapro.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ultrapro.SFNTsntlInitialize">
            <summary>
            This function validates and initializes the API packet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlCleanup">
            <summary>
            This function releases the memory resources acquired by the UltraPro client library.
            </summary>
        </member>
        <member name="M:Ultrapro.SFNTsntlGetKeyType(System.UInt16@,System.UInt16@,System.UInt16@)">
            <summary>
            This function returns the following information about the key attached to a system.
            </summary>
            <param name="keyFamily">The key family.</param>
            <param name="keyFormFactor">The key form factor.</param>
            <param name="keyMemorySize">Size of the key memory.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlGetVersion(System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            This function returns the Sentinel Driver's version and type.
            </summary>
            <param name="majorVersion">The major version.</param>
            <param name="minorVersion">The minor version.</param>
            <param name="revision">The revision.</param>
            <param name="osDrvrType">Type of the OS Driver.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlGetHardLimit(System.UInt16@)">
            <summary>
            This function retrieves the hard limit of the key from which the license was obtained.
            </summary>
            <param name="hardLimit">The hard limit.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlGetLicense(System.UInt16,System.UInt16,System.Int32)">
            <summary>
            This function obtains a license from the key programmed with your developer ID and design ID.
            </summary>
            <param name="developerID">The developer ID.</param>
            <param name="designID">The design ID.</param>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlActivateLicense(System.Int32,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            This function activates an inactive algorithm at the specified cell address.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <param name="activatePassword1">The activate password1.</param>
            <param name="activatePassword2">The activate password2.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlDecrementCounter(System.Int32,System.UInt16,System.UInt16)">
            <summary>
            This function decrements a counter value by a specified amount.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <param name="decrementValue">The decrement value.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlReadValue(System.Int32,System.UInt32@)">
            <summary>
            This API reads the following values associated with the elements or specific cells on the key: See Documentation.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlReadLease(System.Int32,Ultrapro.LeaseDate,System.UInt16@)">
            <summary>
            This function reads the date up to which the application is allowed to run.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="leaseDate">The lease date.</param>
            <param name="daysLeft">The days left.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlReadString(System.Int32,System.Byte[],System.UInt16)">
            <summary>
            This function reads the following values programmed into the key: A String element, The Model Number
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="stringBuffer">The string buffer.</param>
            <param name="stringLength">Length of the string.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlLockData(System.Int32,System.UInt16)">
            <summary>
            This function changes the unlocked data word to locked data word at the specified Toolkit Cell Address.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlQueryLicense(System.Int32,System.UInt16,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>
            This function performs all the operations that are otherwise individually performed by the
            SFNTsntlQueryLicenseDecrement and SFNTsntlQueryLicenseLease API functions.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <param name="queryData">The query data.</param>
            <param name="response">The response.</param>
            <param name="response32">The response32.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlQueryLicenseDecrement(System.Int32,System.UInt16,System.UInt16,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>
            This function decrements an execution count (associated with a Full License element) by the
            amount specified, in addition to the normal query described in SFNTsntlQueryLicenseSimple.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <param name="decrementAmount">The decrement amount.</param>
            <param name="queryData">The query data.</param>
            <param name="response">The response.</param>
            <param name="response32">The response32.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlQueryLicenseLease(System.Int32,System.UInt16,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>
            This function performs the following lease checks (in the order described below) in addition to
            the normal query described in SFNTsntlQueryLicenseSimple: See Documentation
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <param name="queryData">The query data.</param>
            <param name="response">The response.</param>
            <param name="response32">The response32.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlQueryLicenseSimple(System.Int32,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>
            This function is used to query an algorithm pointed by the Toolkit Cell Address value.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="queryData">The query data.</param>
            <param name="response">The response.</param>
            <param name="response32">The response32.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlReleaseLicense(System.Int32,System.UInt16@)">
            <summary>
            This function releases the license issued to an application.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="numUserLic">The num user lic.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlSetContactServer(System.String)">
            <summary>
            This function sets the access mode for finding the key.
            </summary>
            <param name="serverName">Name of the server.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlSetHeartBeat(System.Int32)">
            <summary>
            This function sets the heartbeat interval for maintaining the communication between a client
            and the Sentinel Protection Server.
            </summary>
            <param name="heartBeat">The heart beat.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlSetProtocol(System.Int32)">
            <summary>
            This function sets the network protocol for allowing communication between the client and
            Sentinel Protection Server.
            </summary>
            <param name="protocolFlag">The protocol flag.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlSetSharedLicense(System.UInt16,System.Byte[])">
            <summary>
            This function allows you to share a license on the basis of a user name or MAC address, if you
            have specified a user limit in your design.
            </summary>
            <param name="shareMode">The share mode.</param>
            <param name="reserved">The reserved.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlUnlockData(System.Int32,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            This function unlocks the locked elements.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="writePassword">The write password.</param>
            <param name="overWritePassword1">The over write password1.</param>
            <param name="overWritePassword2">The over write password2.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlWriteString(System.Int32,System.String,System.Byte,System.UInt16)">
            <summary>
            This function writes a String element in the key.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="data">The data.</param>
            <param name="flag">The flag.</param>
            <param name="writePassword">The write password.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlWriteValue(System.Int32,System.UInt32,System.Byte,System.UInt16)">
            <summary>
            This function writes the following values on the key: See Documentation. This function requires the Write Password.
            </summary>
            <param name="toolkitCellAddress">The toolkit cell address.</param>
            <param name="data">The data.</param>
            <param name="flag">The flag.</param>
            <param name="writePassword">The write password.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlGetContactServer(System.Byte[],System.UInt32)">
            <summary>
            This function returns the access mode set to obtain license.
            </summary>
            <param name="serverName">Name of the server.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlGetFullStatus">
            <summary>
            This function obtains the return code of the last-called API function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ultrapro.SFNTsntlCheckTerminalService(System.UInt16)">
            <summary>
            The function allows you to enable/disable the checking on terminal clients while SFNTsntlGetLicense
            API is executed.
            </summary>
            <param name="termserv">The termserv.</param>
            <returns></returns>
        </member>
        <member name="T:Ultrapro.LeaseDate">
            <summary>
            Data Structure Used by SFNTsntlReadLease
            </summary>
        </member>
        <member name="F:Ultrapro.LeaseDate.bDateBuffer">
            <summary>Byte Array Date Buffer</summary>
        </member>
        <member name="M:Ultrapro.LeaseDate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ultrapro.LeaseDate"/> class.
            </summary>
        </member>
        <member name="M:Ultrapro.LeaseDate.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Ultrapro.LeaseDate"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Ultrapro.LeaseDate.Year">
            <summary>
            Gets the year.
            </summary>
            <value>The year.</value>
        </member>
        <member name="P:Ultrapro.LeaseDate.Month">
            <summary>
            Gets the month.
            </summary>
            <value>The month.</value>
        </member>
        <member name="P:Ultrapro.LeaseDate.Day">
            <summary>
            Gets the day.
            </summary>
            <value>The day.</value>
        </member>
        <member name="T:UltraProNativeAPI">
            <summary>
            Imports the UltraPro Native Library (ux32w.dll)
            </summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlActivateLicense(System.Byte[],System.Int32,System.UInt16,System.UInt16,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlCleanup">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlDecrementCounter(System.Byte[],System.Int32,System.UInt16,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlGetContactServer(System.Byte[],System.Byte[],System.UInt32)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlGetFullStatus(System.Byte[])">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlGetHardLimit(System.Byte[],System.UInt16@)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlGetKeyType(System.Byte[],System.UInt16@,System.UInt16@,System.UInt16@)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlGetLicense(System.Byte[],System.UInt16,System.UInt16,System.Int32)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlGetVersion(System.Byte[],System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlInitialize(System.Byte[])">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlLockData(System.Byte[],System.Int32,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlQueryLicense(System.Byte[],System.Int32,System.UInt16,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlQueryLicenseDecrement(System.Byte[],System.Int32,System.UInt16,System.UInt16,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlQueryLicenseLease(System.Byte[],System.Int32,System.UInt16,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlQueryLicenseSimple(System.Byte[],System.Int32,System.Byte[],System.Byte[],System.UInt32@,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlReadLease(System.Byte[],System.Int32,System.Byte[],System.UInt16@)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlReadString(System.Byte[],System.Int32,System.Byte[],System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlReadValue(System.Byte[],System.Int32,System.UInt32@)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlReleaseLicense(System.Byte[],System.Int32,System.UInt16@)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlSetContactServer(System.Byte[],System.String)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlSetHeartBeat(System.Byte[],System.Int32)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlSetProtocol(System.Byte[],System.Int32)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlSetSharedLicense(System.Byte[],System.UInt16,System.Byte[])">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlWriteString(System.Byte[],System.Int32,System.String,System.Byte,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlWriteValue(System.Byte[],System.Int32,System.UInt32,System.Byte,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlUnlockData(System.Byte[],System.Int32,System.UInt16,System.UInt16,System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="M:UltraProNativeAPI.SFNTsntlCheckTerminalService(System.Byte[],System.UInt16)">
            <summary>See UltraPro Documentation.</summary>
        </member>
        <member name="T:XyratexOSC.Logging.DailyTextWriterListener">
            <summary>
            Provides a trace listener that outputs logging to a day-stamped file that rolls over at midnight.
            </summary>
        </member>
        <member name="M:XyratexOSC.Logging.DailyTextWriterListener.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Logging.DailyTextWriterListener"/> class.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:XyratexOSC.Logging.DailyTextWriterListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Writes trace information, a message and event information to the output file or stream.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name of the trace source that invoked this method.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A message to write.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="M:XyratexOSC.Logging.DailyTextWriterListener.Write(System.String)">
            <summary>
            Writes a verbatim message to disk, without any additional context information.
            </summary>
            <param name="message">String. The custom message to write.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="T:XyratexOSC.Logging.Log">
            <summary>
            Application logging using <see cref="T:System.Diagnostics.TraceSource"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.Logging.Log.GetTraceSource(System.String)">
            <summary>
            Add or retrieve a <see cref="T:System.Diagnostics.TraceSource"/> to the global list so we have control over it
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.FlushAllTraces">
            <summary>
            Call this before exiting application or when application is Idle to make sure that all traces are flushed to the hard drive
            </summary>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Info(System.Object,System.String,System.Object[])">
            <summary>
            Log information message
            </summary>
            <param name="source">Subsystem to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Warn(System.Object,System.String,System.Object[])">
            <summary>
            Log warning message
            </summary>
            <param name="source">Subsystem to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.Object,System.String,System.Object[])">
            <summary>
            Log error message
            </summary>
            <param name="source">Subsystem to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Info(System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Log information message
            </summary>
            <param name="source">Subsystem to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Warn(System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Log warning message
            </summary>
            <param name="source">Subsystem to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Log error message
            </summary>
            <param name="source">Subsystem to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Info(System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Log information message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Warn(System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Log warning message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Log error message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.String,System.Int32,System.Exception)">
            <summary>
            Log error message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="ex">The exception to log</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Info(System.String,System.String,System.Object[])">
            <summary>
            Log information message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Warn(System.String,System.String,System.Object[])">
            <summary>
            Log warning message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.String,System.String,System.Object[])">
            <summary>
            Log error message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.String,System.Exception)">
            <summary>
            Log error message
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="ex">The exception to log</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.FormatMessage(System.String,System.String,System.Object[])">
            <summary>
            Formats the log parameters to a message string.
            </summary>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Trace(System.String)">
            <summary>
            Retrieves the <see cref="T:System.Diagnostics.TraceSource"/> the specified name from an Application trace list.
            </summary>
            <param name="traceName">Name of the trace.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Trace">
            <summary>
            Retrieves the default application <see cref="T:System.Diagnostics.TraceSource"/> from an Application trace list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Debug(System.Diagnostics.TraceSource,System.String,System.String,System.Object[])">
            <summary>
            Writes a debug (verbose) message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Info(System.Diagnostics.TraceSource,System.String,System.String,System.Object[])">
            <summary>
            Writes an info message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Warn(System.Diagnostics.TraceSource,System.String,System.String,System.Object[])">
            <summary>
            Writes a warning message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.Diagnostics.TraceSource,System.String,System.String,System.Object[])">
            <summary>
            Writes an error message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.Diagnostics.TraceSource,System.String,System.Exception)">
            <summary>
            Writes an error message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="ex">The exception to log</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Debug(System.Diagnostics.TraceSource,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Writes a debug (verbose) message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Info(System.Diagnostics.TraceSource,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Writes an info message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Warn(System.Diagnostics.TraceSource,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Writes a warning message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.Diagnostics.TraceSource,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Writes an error message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="messageFormat">Format of the string field</param>
            <param name="args">String format arguments</param>
        </member>
        <member name="M:XyratexOSC.Logging.Log.Error(System.Diagnostics.TraceSource,System.String,System.Int32,System.Exception)">
            <summary>
            Writes an error message to the specified trace.
            </summary>
            <param name="trace">The trace.</param>
            <param name="source">Subsystem name to help with log categorizing, filtering</param>
            <param name="id">The event identifier.</param>
            <param name="ex">The exception to log</param>
        </member>
        <member name="P:XyratexOSC.Logging.Log.DefaultTraceName">
            <summary>
            Gets the default name of the application trace.
            </summary>
            <value>
            The default name of the application trace.
            </value>
        </member>
        <member name="T:XyratexOSC.Logging.RollingListBoxListener">
            <summary>
            Trace listener that outputs log messages to a specified <see cref="T:System.Windows.Forms.ListBox"/>.
            </summary>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Logging.RollingListBoxListener"/> class.
            </summary>
            <param name="outputList">The list box to output the trace events</param>
            <param name="latestLineBox">The latest line box.</param>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.#ctor(System.String,System.Windows.Forms.ListBox,System.Windows.Forms.TextBox)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Logging.RollingListBoxListener"/> class.
            </summary>
            <param name="name">Name of the listener</param>
            <param name="outputList">The list box to output the trace events</param>
            <param name="latestLineBox">The latest line box.</param>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.Close">
            <summary>
            When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.
            </summary>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Writes trace information, a message, and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A message to write.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.Write(System.String)">
            <summary>
            When overridden in a derived class, writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.WriteLine(System.String)">
            <summary>
            When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:XyratexOSC.Logging.RollingListBoxListener.ScrollToBottom">
            <summary>
            Scrolls to the bottom of the list box.
            </summary>
        </member>
        <member name="P:XyratexOSC.Logging.RollingListBoxListener.AutoScrollToBottom">
            <summary>
            Gets or sets a value indicating whether to auto scroll to the bottom of the list box when a new message arrives.
            </summary>
            <value>
              <c>true</c> if auto scrolling to bottom; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Logging.RollingListBoxListener.IsThreadSafe">
            <summary>
            Gets a value indicating whether the trace listener is thread safe.
            </summary>
            <value></value>
            <returns>true if the trace listener is thread safe; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:XyratexOSC.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.AddIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LED_Blue_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LED_Green_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LED_Off">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LED_Orange_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LED_Red_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LED_Yellow_On">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Blue_dn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Blue_ov">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Blue_ro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Blue_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Green_dn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Green_ov">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Green_ro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Green_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Grey_dn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Grey_ov">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Grey_ro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Grey_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Orange_dn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Orange_ov">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Orange_ro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Orange_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Red_dn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Red_ov">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Red_ro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Red_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Yellow_dn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Yellow_ov">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Yellow_ro">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.LEDBTN_Yellow_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.Move">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.MXIO_NET_32">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.MXIO_NET_64">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.RemoveIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.SettingsIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.ux32w_32">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.ux32w_64">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:XyratexOSC.Properties.Resources.XyratexAppLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.ISettings">
            <summary>
            Defines methods that will be used by the Settings Converter to convert an object-to-settingsnode, and settingsnode-to-object
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.ISettings.UpdateFromSettingsNode(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Updates an object from a settings node.
            </summary>
            <param name="node">The settings node.</param>
        </member>
        <member name="M:XyratexOSC.Settings.ISettings.ConvertToSettingsNode">
            <summary>
            Converts an object to settings node.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsAttribute">
            <summary>
            Attribute for defining the access level of a settings property
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsAttribute.DefaultAccessLevel">
            <summary>
            The default access level
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsAttribute"/> class.
            </summary>
            <param name="requiredAccessLevel">The required access level.</param>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsAttribute.AccessLevel">
            <summary>
            Gets the access level.
            </summary>
            <value>
            The access level.
            </value>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsConverter">
            <summary>
            Provides methods for converting between objects and <see cref="T:XyratexOSC.Settings.SettingsNode"/>s.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.ConvertObjectToDocument(System.Object,System.String)">
            <summary>
            Converts the specified object to a <see cref="T:XyratexOSC.Settings.SettingsDocument"/>.
            </summary>
            <param name="obj">The object.</param>
            <param name="fileName">The file name.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.ConvertObjectToNode(System.Object,System.String)">
            <summary>
            Converts the specified object to a <see cref="T:XyratexOSC.Settings.SettingsNode"/>.
            </summary>
            <param name="obj">The object.</param>
            <param name="nodeName">The node name.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.CreateObjectFromNode``1(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Creates an object of the generic type from the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/>.
            </summary>
            <typeparam name="T">The type of object to create.</typeparam>
            <param name="node">The settings node.</param>
            <returns>The new object.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.CreateObjectFromNode``1(XyratexOSC.Settings.SettingsNode,System.Object[])">
            <summary>
            Creates an object of the generic type from the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/>.
            </summary>
            <typeparam name="T">The type of object to create.</typeparam>
            <param name="node">The settings node.</param>
            <param name="args">The optional constructor arguments for this node object.</param>
            <returns>
            The new object.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.CreateObjectFromNode(XyratexOSC.Settings.SettingsNode,System.Type,System.Object[])">
            <summary>
            Creates an object of the generic type from the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/>.
            </summary>
            <param name="node">The settings node.</param>
            <param name="type">The type of object to create.</param>
            <param name="args">The optional constructor arguments for this node object.</param>
            <returns>
            The new object.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.UpdateObjectFromNode(System.Object,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Updates an object from the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/>.
            </summary>
            <param name="settingsObject">The settings object.</param>
            <param name="node">The settings node.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.GetNodes(System.Object,System.Type,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Used internally to deeply convert the specified object and attach to the specified node.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.SetValues(System.Object,System.Reflection.PropertyInfo[],XyratexOSC.Settings.SettingsNodeList)">
            <summary>
            Used internally to deeply load from the SettingsDocument.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.ConvertValue(System.Object,System.Type)">
            <summary>
            Converts a given object to the specified type. If conversion is invalid an InvalidCastException is thrown.
            Used primarily to convert strings to primitives and enums.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.CopyConfiguration(System.Object,System.Object@)">
            <summary>
            Copies the properties of the specified object to the output object.
            </summary>
            <param name="copyFrom">The copy from.</param>
            <param name="copyTo">The copy to.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.DeepClone(System.Object)">
            <summary>
            Creates a deep clone of the specified object based on ICloneable, serialization, or public properties.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsConverter.IsListType(System.Type)">
            <summary>
            Determines whether the specified type is a list type. This includes generic lists and generic arrays.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> ifthe specified type is a list type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsDocument">
            <summary>
            Represents a settings-file document. 
            </summary>
            <remarks>
            <para>
            This class provides an in-memory (cache) tree representation of tab-delimited settings files.
            A SettingsDocument tree can be created in-code, or loaded from a file.
            </para>
            <para>
            A SettingsDocument contains a keyed and indexed collection of nodes (<see cref="T:XyratexOSC.Settings.SettingsNode"/>)
            that each have <see cref="T:XyratexOSC.Settings.SettingsNodeList"/> collections of child nodes. A SettingsDocument is
            actually a special top-level <see cref="T:XyratexOSC.Settings.SettingsNode"/> itself. 
            </para>
            </remarks>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsNode">
            <summary>
            Represents a single node of a Settings Document (tab-structured).
            </summary>
            <remarks>
            <para>
            The SettingsNode class represents Settings data by the node's name, child nodes, and (optionally) comment 
            information, a defined value type, a read-only setting, and print formatting. The <see cref="T:XyratexOSC.Settings.SettingsDocument"/> 
            class extends SettingsNode and represents a Settings document. You can use SettingsDocument to load and save 
            Settings data.
            </para>
            <para><h3>Value Nodes</h3></para>
            <para>
            While SettingsNodes maintain a tree structure by collections of other SettingsNodes, the ultimate purpose of 
            a SettingsNode is to provide a configuration/setting value for a particular attribute.
            </para>
            <para>
            A SettingsNode is considered a 'value' when
            it has no sibling nodes and no child nodes (see <see cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/>). A node 'has' a value when it contains
            only a single child 'value' node (see <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>). The node path leading up to a value node provides
            a unique identifier for an attribute (ie. Motion|Axis 1|MaxVelocity) and the value node provides it's value.
            </para>
            <para><h3>Value Types</h3></para>
            <para>
            Values can be strongly typed in-code (see the <see cref="P:XyratexOSC.Settings.SettingsNode.Type"/> property) or through an in-line comment in
            a settings file for a node that has a value '[Type:System.Double]'. Defining a type performs a conversion of the
            value node to the specified type at load/setting time instead of at read time. It will also cause a node to
            throw an InvalidCastException if it cannot set a new value to the specified type.
            </para>
            </remarks>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode.EmptyNodeName">
            <summary>
            The empty node name
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._nodes">
            <summary>The collection of child nodes.</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._parent">
            <summary>The parent of this node.</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._precedingComments">
            <summary>Line-by-line list of comments that preceded this node when read from file</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._name">
            <summary>The node name.</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._info">
            <summary>The node description</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._type">
            <summary>The explicitly defined type of value for this node.</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode._readOnly">
            <summary>Identifies the read-only property of this node.</summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNode.Empty">
            <summary>
            An empty settings node for representing null values.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNode"/> class 
            with the specified node name.
            </summary>
            <param name="name">The node name.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNode"/> class 
            with the specified node name and description.
            </summary>
            <param name="name">The node name.</param>
            <param name="info">The node description.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.#ctor(System.String,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNode"/> class 
            with the specified node name, description, and value type.
            </summary>
            <param name="name">The node name.</param>
            <param name="info">The node description.</param>
            <param name="type">The value type.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.#ctor(System.String,System.String,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNode"/> class 
            with the specified node name, description, value type, value, and read-only setting.
            </summary>
            <param name="name">The node name.</param>
            <param name="info">The node description.</param>
            <param name="type">The value type.</param>
            <param name="readOnly">if set to <c>true</c> value is read-only.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.ExistsAndHasAValue(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Checks if a specified node exists and has a value, that we can inquire before attempting to get a <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/>.
            </summary>
            <param name="node">The node being validated.</param>
            <returns><c>true</c> if the node is not null and <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>; otherwise, <c>false</c></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.ExistsAndHasAValue``1(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Checks if a specified node exists and has a value of the specified Generic type, that we can inquire before attempting to get a <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/>.
            </summary>
            <typeparam name="T">The specified type to check a value for.</typeparam>
            <param name="node">The node being validated.</param>
            <returns>
            	<c>true</c> if the node is not null and <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/> of type T; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.AddPrecedingComment(System.String)">
            <summary>
            Adds a preceding comment/whitespace line used when saving this node back to a file.
            </summary>
            <param name="precedingComment">The preceding comment line.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetPrecedingComments">
            <summary>
            Gets all the preceding comments to write to file before writing this node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetLevel">
            <summary>
            Gets this node's tree level.
            </summary>
            <returns>Number representing node level.</returns>
            <remarks>
            A level of zero would be a node directly under a <see cref="T:XyratexOSC.Settings.SettingsDocument"/> node.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetValueAs``1">
            <summary>
            Gets the node value as a specified type. Follows the <see cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/> and <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/> rules.
            </summary>
            <typeparam name="T">The specified type.</typeparam>
            <returns>The node value converted to the specified type.</returns>
            <exception cref="T:System.InvalidCastException">
            This conversion is not supported. (or) The value is null and conversionType is a value type.
            (or) The value does not implement the IConvertible interface.
            </exception>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.Value"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.IsValueValid(System.Object)">
            <summary>
            Determines whether the specified value can be converted to the Node's <see cref="P:XyratexOSC.Settings.SettingsNode.Type"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.Exists(System.String)">
            <summary>
            Checks if a specified node-path exists within this SettingsDocument.
            </summary>
            <param name="nodePath">The node path.</param>
            <returns><c>true</c> if the node is not null; otherwise, <c>false</c></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.ExistsAndHasAValue(System.String)">
            <summary>
            Checks if a specified node-path exists within this SettingsDocument and if the node has a value, 
            that we can inquire before attempting to get a <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/>.
            </summary>
            <param name="nodePath">The node path.</param>
            <returns><c>true</c> if the node is not null and <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>; otherwise, <c>false</c></returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.ExistsAndHasAValue``1(System.String)">
            <summary>
            Checks if a specified node-path exists and if the node has a value of the specified Generic type, that we can inquire before attempting to get a <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/>.
            </summary>
            <typeparam name="T">The specified type to check a value for.</typeparam>
            <param name="nodePath">The node path.</param>
            <returns>
            	<c>true</c> if the node is not null and <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/> of type T; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.SetReadOnly(System.Boolean)">
            <summary>
            Sets the read only field depending on if the node <see cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/> or <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>.
            </summary>
            <param name="readOnly">if set to <c>true</c> the value is read-only.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.Clone">
            <summary>
            Creates a deep copy of this node.
            </summary>
            <returns>The node copy.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.CloneNode(System.Boolean)">
            <summary>
            Creates a copy of this node shallowly or deeply depending on the specified paramter.
            </summary>
            <param name="shallowCopy">if set to <c>true</c> create a shallow copy of the node (does not copy child nodes).</param>
            <returns>The node copy.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance formatted according to the formatting string.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetPathSeparator">
            <summary>
            Gets the path separator that this node's <see cref="T:XyratexOSC.Settings.SettingsDocument"/> uses for
            delimiting each node when getting a setting using a single string (ie. "Settings|Generic|Attribute").
            </summary>
            <returns>The node delimiter character.</returns>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.String[])"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.SelectNode(System.String)">
            <summary>
            Gets the child node with the specified name.
            </summary>
            <param name="name">The child node name.</param>
            <returns>The child node with the specified name</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.SelectNodesStartingWith(System.String)">
            <summary>
            Gets a collection (<see cref="T:XyratexOSC.Settings.SettingsNodeList"/>) of all child nodes
            with names that start with the specified string.
            </summary>
            <param name="nameBeginning">The child nodes name beginning.</param>
            <returns>The child nodes whose names start with the specified string.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.SelectNodesContaining(System.String)">
            <summary>
            Gets a collection (<see cref="T:XyratexOSC.Settings.SettingsNodeList"/>) of all child nodes
            with names that contain the specified string.
            </summary>
            <param name="namePartial">The child nodes partial name.</param>
            <returns>The child nodes whose names contain the specified string.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.AddChild(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Adds the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/> as a child to this node.
            </summary>
            <param name="node">The child node.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.AddChild(System.String)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified name and adds it as a child to this node.
            </summary>
            <param name="name">The child node name.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.AddChild(System.String,System.String,System.Type)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified name, description, type, and value;
            and adds it as a child to this node.
            </summary>
            <param name="name">The child node name.</param>
            <param name="info">The child node info.</param>
            <param name="type">The child node value type.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.AddChild(System.String,System.String,System.Type,System.Object)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified name, description, type, and value;
            and adds it as a child to this node.
            </summary>
            <param name="name">The child node name.</param>
            <param name="info">The child node info.</param>
            <param name="type">The child node value type.</param>
            <param name="value">The child node value.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.Contains(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Determines whether the specified node is a child node of this node.
            </summary>
            <param name="node">The specified node.</param>
            <returns>
            	<c>true</c> if the specified node is a child; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.ContainsName(System.String)">
            <summary>
            Determines whether the node specified by name is a child node of this node.
            </summary>
            <param name="name">The specified node name.</param>
            <returns>
            	<c>true</c> if the node specified by name is a child; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String)">
            <summary>
            Gets the child node following the specified delimited path.
            </summary>
            <param name="path">The node path.</param>
            <returns>The specified node.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.TryGetNode(System.String)">
            <summary>
            Gets the child node following the specified delimited path.
            </summary>
            <param name="path">The node path.</param>
            <returns>The specified node or null if the path is invalid.</returns>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.String[])">
            <summary>
            Gets the child node following the specified delimited path and the following array of node names
            </summary>
            <param name="path">The path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The specified node.</returns>
            <example>
            <code>
            topNode.GetNode("child1|childOfchild","thirdLevelChild","targetNode");
            </code>
            -or-
            <code>
            topNode.GetNode("child1","childOfchild","thirdLevelChild","targetNode");
            </code>
            </example>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.TryGetNode(System.String,System.String[])">
            <summary>
            Gets the child node following the specified delimited path and the following array of node names
            </summary>
            <param name="path">The path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The specified node or null if the path is invalid.</returns>
            <example>
            <code>
            topNode.GetNode("child1|childOfchild","thirdLevelChild","targetNode");
            </code>
            -or-
            <code>
            topNode.GetNode("child1","childOfchild","thirdLevelChild","targetNode");
            </code>
            </example>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.Char)">
            <summary>
            Gets the child node following the specified delimited path using a special delimiter.
            </summary>
            <param name="path">The node path.</param>
            <returns>The specified node.</returns>
            <param name="delimiter">The node delimiter.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.TryGetNode(System.String,System.Char)">
            <summary>
            Gets the child node following the specified delimited path using a special delimiter.
            </summary>
            <param name="path">The node path.</param>
            <returns>The specified node or null if the path is invalid.</returns>
            <param name="delimiter">The path delimiter.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNodeValue(System.String)">
            <summary>
            Gets the value of the child node following the specified delimited path.
            </summary>
            <param name="path">The node path.</param>
            <returns>The value of the specified node.</returns>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String)"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNodeValue(System.String,System.String[])">
            <summary>
            Gets the value of the node found by <see cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.String[])"/>.
            </summary>
            <param name="path">The node path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The value of the specified node.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.String[])"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNodeValue(System.String,System.Char)">
            <summary>
            Gets the value of the child node following the specified delimited path using a special delimiter.
            </summary>
            <param name="path">The node path.</param>
            <param name="delimiter">The node delimiter.</param>
            <returns>The value of the specified node.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.Char)"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNodeType(System.String)">
            <summary>
            Gets the value-type of the child node following the specified delimited path.
            </summary>
            <param name="path">The node path.</param>
            <returns>The value of the specified node.</returns>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String)"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNodeType(System.String,System.String[])">
            <summary>
            Gets the value-type of the node found by <see cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.String[])"/>.
            </summary>
            <param name="path">The node path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The value of the specified node.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.String[])"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.GetNodeType(System.String,System.Char)">
            <summary>
            Gets the value-type of the child node following the specified delimited path using a special delimiter.
            </summary>
            <param name="path">The node path.</param>
            <param name="delimiter">The node delimiter.</param>
            <returns>The value of the specified node.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <seealso cref="M:XyratexOSC.Settings.SettingsNode.GetNode(System.String,System.Char)"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.Find(System.String,System.Boolean)">
            <summary>
            Finds all children of this node with the specified name, optionally including the entire tree of nodes that belong to this node.
            </summary>
            <param name="name">The node name.</param>
            <param name="searchAllChildren">if set to <c>true</c> search for children deeply.</param>
            <returns>A list of children nodes that have the specified name</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.IndexOf(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Returns the index of the specified child node within this node.        
            </summary>
            <param name="node">The specified node.</param>
            <returns>The specified node index relative to this node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChild(System.Int32,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Inserts the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/> as a child to this node at the specified index.
            </summary>
            <param name="index">The child index.</param>
            <param name="node">The child node.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChild(System.Int32,System.String)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified name 
            and inserts it as a child to this node at the specified index.
            </summary>
            <param name="index">The child index.</param>
            <param name="name">The child node name.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChild(System.Int32,System.String,System.String,System.Type)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified name, info, type, and value 
            and inserts it as a child to this node at the specified index.
            </summary>
            <param name="index">The child index.</param>
            <param name="name">The child node name.</param>
            <param name="info">The child node info.</param>
            <param name="type">The child node value type.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChildBefore(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Inserts the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/> as a child to this node before another specified child node.
            </summary>
            <param name="refNode">The child reference .</param>
            <param name="newNode">The child node.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChildBefore(System.String,System.String)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified new name 
            and inserts it as a child to this node before the referenced node.
            </summary>
            <param name="refName">The reference child node name.</param>
            <param name="newName">The new child node name.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChildBefore(System.String,System.String,System.String,System.Type)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified new name, info, type, and value 
            and inserts it as a child to this node before the referenced node.
            </summary>
            <param name="refName">The reference child node name.</param>
            <param name="newName">The new child node name.</param>
            <param name="newInfo">The new child node info.</param>
            <param name="newType">The new child node value type.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChildAfter(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Inserts the specified <see cref="T:XyratexOSC.Settings.SettingsNode"/> as a child to this node after another specified child node.
            </summary>
            <param name="refNode">The child index.</param>
            <param name="newNode">The child node.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChildAfter(System.String,System.String)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified new name 
            and inserts it as a child to this node after the referenced node.
            </summary>
            <param name="refName">The reference child node name.</param>
            <param name="newName">The new child node name.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.InsertChildAfter(System.String,System.String,System.String,System.Type)">
            <summary>
            Instantiates a <see cref="T:XyratexOSC.Settings.SettingsNode"/> by the specified new name, info, type, and value 
            and inserts it as a child to this node after the referenced node.
            </summary>
            <param name="refName">The reference child node name.</param>
            <param name="newName">The new child node name.</param>
            <param name="newInfo">The new child node info.</param>
            <param name="newType">The new child node value type.</param>
            <returns>A reference to the newly added child node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RemoveChild(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Removes the specified child node.
            </summary>
            <param name="node">The specified node.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RemoveChild(System.String)">
            <summary>
            Removes the child node by the specified name.
            </summary>
            <param name="name">The specified name.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RemoveChildAt(System.Int32)">
            <summary>
            Removes the child node at the specified index.
            </summary>
            <param name="index">The specified index.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RemoveAllChildren">
            <summary>
            Removes all child nodes.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RaiseChanging(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node is changing.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RaiseChanged(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node has changed.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RaiseInserting(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node is inserting into this node's children.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RaiseInserted(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node has inserted into this node's children.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RaiseRemoving(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node is removing from this node's children.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNode.RaiseRemoved(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node has removed from this node's children.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Item(System.String)">
            <summary>
            Gets or sets the child <see cref="T:XyratexOSC.Settings.SettingsNode"/> with the specified name.
            </summary>
            <remarks>
            This indexer also handles node paths that are separated with the node <see cref="P:XyratexOSC.Settings.SettingsNode.PathSeparator"/>.
            So this["childNodeName|grandchildNodeName|etc"] will return the specified node if the entire path exists.
            </remarks>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Item(System.Int32)">
            <summary>
            Gets or sets the child <see cref="T:XyratexOSC.Settings.SettingsNode"/> at the specified index.
            </summary>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.FullPath">
            <summary>
            Gets the full path from the top-level <see cref="T:XyratexOSC.Settings.SettingsDocument"/> node to this node. 
            Each node is delimited by the SettingsDocument <see cref="P:XyratexOSC.Settings.SettingsNode.PathSeparator"/>.
            </summary>
            <value>The full path.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Formatting">
            <summary>
            Gets or sets the format string for translating this node to string when writing to file.
            </summary>
            <value>
            The formatting string.
            </value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.PathSeparator">
            <summary>
            Gets the top-level document node PathSeparator or '|' if node does not belong to a document.
            </summary>
            <value>The path separator.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Level">
            <summary>
            Gets the 0-based tree level of this node.
            </summary>
            <value>The node's level.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Count">
            <summary>
            Gets a count of immediate child nodes.
            </summary>
            <value>The number of nodes that belong to this node.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.CountAll">
            <summary>
            Gets the count all child nodes below this node.
            </summary>
            <value>The deep-count of all nodes belonging to this node.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Nodes">
            <summary>
            Gets or sets the collection of child nodes.
            </summary>
            <value>The child nodes.</value>
            <seealso cref="T:XyratexOSC.Settings.SettingsNodeList"/>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.FirstChild">
            <summary>
            Gets the first child belonging to this node.
            </summary>
            <value>The first child.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.LastChild">
            <summary>
            Gets the last child belonging to this node.
            </summary>
            <value>The last child.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.NextSibling">
            <summary>
            Gets the next sibling of this node.
            </summary>
            <value>The next sibling.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Parent">
            <summary>
            Gets or sets the parent of this node.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.IsAValue">
            <summary>
            <para>Determines whether this node 'is a value'.</para>
            <para>A node is considered a value node when it has no siblings and no children.</para>
            </summary>
            <value>
            	<c>true</c> if this instance is a value; otherwise, <c>false</c>.
            </value>
            <remarks>
            A node that 'is a value' can get/set a value, get/set a type, and be accessed from 
            it's parent node (which would 'have' a value) as a value. 
            See <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/> for more specifics.
            </remarks>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.HasAValue">
            <summary>
            <para>Determines whether this node 'has a value'.</para>
            <para>A node is considered to have a value node when it has a single child 'value' node.</para>
            </summary>
            <value>
            	<c>true</c> if this instance has a value; otherwise, <c>false</c>.
            </value>
            <remarks>
            A node that 'has a value' can get/set it's value, get/set it's type, and can be validated for
            reading as a setting by <see cref="M:XyratexOSC.Settings.SettingsNode.ExistsAndHasAValue(System.String)"/>.
            See <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/> for more specifics.
            </remarks>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.IsEmpty">
            <summary>
            Gets a value indicating whether this represents an empty (null) node.
            </summary>
            <value>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Name">
            <summary>
            Gets or sets the node name. If this node is a value node then setting the name will cause the
            value to change to the type-converted value of the passed string (based on the node type).
            </summary>
            <value>The name.</value>
            <exception cref="T:System.InvalidCastException">
            This node is a value node, and this conversion is not supported. (or) The value is null and 
            conversionType is a value type. (or) The value does not implement the IConvertible interface.
            </exception>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Info">
            <summary>
            Gets or sets the nodes comments/description. This information is retained in when written 
            to file as a semicolon comment.
            </summary>
            <value>The node comment.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Type">
            <summary>
            Gets or sets the type for this node. Used only when this node 'is' or 'has' a value. 
            See <see cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/> and <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>.
            </summary>
            <value>The node value type.</value>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.IsList">
            <summary>
            Gets or sets a value indicating whether this node represents a list.
            </summary>
            <value>
              <c>true</c> if this instance is list; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.ListLength">
            <summary>
            Gets the list length.
            </summary>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.Value">
            <summary>
            Gets or sets the value for this node if 'is' or 'has' a value. Otherwise, returns null.
            </summary>
            <value>The node value.</value>
            <remarks>
            <para><h3>Getting</h3></para>
            <para>
            If the node <see cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/>, return the previously set value or, if none exists, return the node name 
            converted to the node value <see cref="P:XyratexOSC.Settings.SettingsNode.Type"/>.
            If the node <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>, return the value from it's child 'value' node.
            </para>
            <para><h3>Setting</h3></para>
            <para>
            If the node <see cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>, set it's child node's value, type (based on the value), and name (value.ToString).
            If the node <see cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/>, setting a new value will convert this to 'having' a value node and create a new child.
            </para>
            </remarks>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNode.ReadOnly">
            <summary>
            Gets or sets a value indicating whether this node's value is Read-Only.
            </summary>
            <value><c>false</c> if node 'is' or 'has' a value and is not read only; 
            otherwise, <c>true</c>.</value>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.IsAValue"/>
            <seealso cref="P:XyratexOSC.Settings.SettingsNode.HasAValue"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.#ctor">
            <summary>
            Initializes a new, empty instance of the <see cref="T:XyratexOSC.Settings.SettingsDocument"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsDocument"/> class and loads the specified file.
            </summary>
            <param name="filename">The filename to load.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsDocument"/> class and loads the specified file.
            If persistToFile is true, then every insertion/removal/change of a <see cref="T:XyratexOSC.Settings.SettingsNode"/> will 
            be written back to the loaded settings file.
            </summary>
            <param name="filename">The filename to load.</param>
            <param name="persistToFile">if set to <c>true</c> save this SettingsDocument to file on every manipulation.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.#ctor(System.String,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsDocument"/> class and loads the specified file.
            The provided <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/> will be the node delimiter used when traversing the document by paths.
            </summary>
            <param name="filename">The filename to load.</param>
            <param name="pathSeparator">The path separator character.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.#ctor(System.String,System.Char,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsDocument"/> class and loads the specified file.
            </summary>
            <param name="filename">The filename to load.</param>
            <param name="pathSeparator">The path separator charater.</param>
            <param name="persistToFile">if set to <c>true</c> save this SettingsDocument to file on every manipulation.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.GetLevel">
            <summary>
            The document's child nodes should be at level 0. Overriden from <see cref="M:XyratexOSC.Settings.SettingsNode.GetLevel"/> to always return -1.
            </summary>
            <returns>-1, so that the child nodes of a document are level 0.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.LoadFromStream(System.IO.StreamReader)">
            <summary>
            Loads the specified settings file into this settings document by creating the settings node tree based on the file's
            tab structure. Any line that contains only whitespace or only a comment will not become a <see cref="T:XyratexOSC.Settings.SettingsNode"/>
            but will be retained when the file is saved.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in <c>filename</c> was not found.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.Load(System.String,XyratexOSC.Settings.SettingsFileOption)">
            <summary>
            Loads the specified settings file into this settings document by creating the settings node tree based on the file's
            tab structure. Any line that contains only whitespace or only a comment will not become a <see cref="T:XyratexOSC.Settings.SettingsNode"/>
            but will be retained when the file is saved.
            </summary>
            <param name="filename">The filename.</param>
            <param name="fileOption">The file option that was used when the file was saved.</param>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in <c>filename</c> was not found.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.CreateNode(System.String)">
            <summary>
            Creates a settings node from a line of the settings file.
            </summary>
            <param name="fileLine">The file line.</param>
            <returns>The newly created <see cref="T:XyratexOSC.Settings.SettingsNode"/>.</returns>
            <exception cref="T:System.ArgumentException">The specified <c>fileLine</c> is a zero-length string, or contains only white space.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.Save">
            <summary>
            Saves this document to the last loaded file.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.Save(System.String)">
            <summary>
            Saves this document to the specified file.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.Save(System.String,XyratexOSC.Settings.SettingsFileOption)">
            <summary>
            Saves this document to the specified file with the specified file options.
            </summary>
            <param name="filename">The filename.</param>
            <param name="fileOption">The file options.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.WriteToFile(System.IO.TextWriter)">
            <summary>
            Writes this document to the specified TextWriter.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.GetFileLines">
            <summary>
            Returns a list of all of the lines in this file.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.RaiseChanging(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Used internally to invoke a node changing event.
            </summary>
            <param name="src">The node that raised this event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.RaiseChanged(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Used internally to invoke a node changed event.
            </summary>
            <param name="src">The node that raised this event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.RaiseInserting(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Used internally to invoke a node inserting event.
            </summary>
            <param name="src">The node that raised this event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.RaiseInserted(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Used internally to invoke a node inserted event.
            </summary>
            <param name="src">The node that raised this event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.RaiseRemoving(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Used internally to invoke a node removing event.
            </summary>
            <param name="src">The node that raised this event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsDocument.RaiseRemoved(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Used internally to invoke a node removed event.
            </summary>
            <param name="src">The node that raised this event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsDocument.LoadedFile">
            <summary>
            Gets the filename of the most recently loaded settings file. Returns an empty string if no file loaded.
            </summary>
            <value>The loaded file name.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsDocument.FileOption">
            <summary>
            Gets or sets the file options.
            </summary>
            <value>
            The file options.
            </value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsDocument.PathSeparator">
            <summary>
            Gets or sets the path separator charater used for path-specified grabbing of nodes. The default is '|'.
            </summary>
            <value>The path separator.</value>
        </member>
        <member name="E:XyratexOSC.Settings.SettingsDocument.NodeChanging">
            <summary>
            Occurs when the <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/> of a node belonging to this document is about to be changed.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.SettingsDocument.NodeChanged">
            <summary>
            Occurs when the <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/> of a node belonging to this document has been changed.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.SettingsDocument.NodeInserting">
            <summary>
            Occurs when a node belonging to this document is about to be inserted.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.SettingsDocument.NodeInserted">
            <summary>
            Occurs when a node belonging to this document has been inserted.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.SettingsDocument.NodeRemoving">
            <summary>
            Occurs when a node belonging to this document is about to be removed.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.SettingsDocument.NodeRemoved">
            <summary>
            Occurs when a node belonging to this document has been removed.
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.NamespaceDoc">
            <summary>
            <para>The <see cref="N:XyratexOSC.Settings"/> namespace is used for processing tab-structured settings files. It contains document, 
            node, and collection classes that can parse, manipulate, and save tab-delimitted settings files.</para>
            <para>This namespace is used in sub-system configuration and for loading user/application settings.</para>
            </summary>
            <remarks>
            <para>The <see cref="T:XyratexOSC.Settings.SettingsDocument"/> class represents a settings file in memory with reading/writing to file capabilities.
            The settings documents are built from <see cref="T:XyratexOSC.Settings.SettingsNode"/>s that contain a <see cref="T:XyratexOSC.Settings.SettingsNodeList"/> collection of
            child nodes.</para>
            </remarks>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsFileOption">
            <summary>
            The opetions used for saving and loading a <see cref="T:XyratexOSC.Settings.SettingsDocument"/>.
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsFileOption.Default">
            <summary>
            Uses the default file options [tab delimited]
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsFileOption.TabDelimited">
            <summary>
            A simple tab delimited file
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsFileOption.Encrypted">
            <summary>
            An encrypted file
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsFileOption.Compressed">
            <summary>
            A compressed tab-delimited file
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsNodeChangeEventHandler">
            <summary>
            Represents the method that handles <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeChanging"/>, 
            <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeChanged"/>, <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeInserting"/>, 
            <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeInserted"/>, <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeRemoving"/>, 
            and <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeRemoved"/> events.
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeChanging"/>, 
            <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeChanged"/>, <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeInserting"/>, 
            <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeInserted"/>, <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeRemoving"/>, 
            and <see cref="E:XyratexOSC.Settings.SettingsDocument.NodeRemoved"/> events.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeChangeEventArgs.#ctor(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode,System.Object,System.Object,XyratexOSC.Settings.SettingsNodeChangeAction)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> class.
            </summary>
            <param name="node">The <see cref="T:XyratexOSC.Settings.SettingsNode"/> that is being changed, added, or removed.</param>
            <param name="oldParent">The old <see cref="P:XyratexOSC.Settings.SettingsNode.Parent"/> of the node.</param>
            <param name="newParent">The new <see cref="P:XyratexOSC.Settings.SettingsNode.Parent"/> of the node.</param>
            <param name="oldValue">The old value of the node.</param>
            <param name="newValue">The new value of the node.</param>
            <param name="action">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeAction"/>.</param>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeChangeEventArgs.Action">
            <summary>
            Gets a value indicating what type of node change event is occuring.
            </summary>
            <value>A <see cref="T:XyratexOSC.Settings.SettingsNodeChangeAction"/> value describing the node change event.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeChangeEventArgs.Node">
            <summary>
            Gets the <see cref="T:XyratexOSC.Settings.SettingsNode"/> that is being changed, added, or removed.
            </summary>
            <value>The node that is being changed.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeChangeEventArgs.OldParent">
            <summary>
            Gets the old <see cref="P:XyratexOSC.Settings.SettingsNode.Parent"/> node before the change began.
            </summary>
            <value>The old parent node.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeChangeEventArgs.NewParent">
            <summary>
            Gets the new <see cref="P:XyratexOSC.Settings.SettingsNode.Parent"/> node after the change completes.
            </summary>
            <value>The new parent node.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeChangeEventArgs.OldValue">
            <summary>
            Gets the original <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/> of the node.
            </summary>
            <value>The old node value.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeChangeEventArgs.NewValue">
            <summary>
            Gets the new <see cref="P:XyratexOSC.Settings.SettingsNode.Value"/> of the node.
            </summary>
            <value>The new node value.</value>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsNodeChangeAction">
            <summary>
            Specifies the type of node change.
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNodeChangeAction.Insert">
            <summary>
            A node is being inserted in the tree.
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNodeChangeAction.Remove">
            <summary>
            A node is being removed from the tree.
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.SettingsNodeChangeAction.Change">
            <summary>
            A node value or value-type is being changed.
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.SettingsNodeList">
            <summary>
            Represents an ordered collection of SettingsNodes
            </summary>
            <remarks>
            A SettingsNodeList consists of a name-keyed Dictionary and List of SettingsNodes. 
            While inserting and deleting nodes takes more time, the SettingsNodes can be searched
            and read quickly by index or name.
            </remarks>
            <seealso cref="T:XyratexOSC.Settings.SettingsNode"/>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNodeList"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.#ctor(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.SettingsNodeList"/> class.
            </summary>
            <param name="parent">The parent node of this collection.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Contains(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Determines whether the specified node exists in this collection.
            </summary>
            <param name="node">The node.</param>
            <returns>
            	<c>true</c> if the specified node exists in this collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.ContainsName(System.String)">
            <summary>
            Determines whether a node with the specified name exists in this collection.
            </summary>
            <param name="name">The node name.</param>
            <returns>
            	<c>true</c> if the collection contains a node by the specified name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.GetNode(System.String,System.String[])">
            <summary>
            Gets the node following the specified delimited path and, optionally, the following array of node names
            </summary>
            <param name="path">The path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The specified node.</returns>
            <example>
            <code>
            topNode.GetNode("child1|childOfchild","thirdLevelChild","targetNode");
            </code>
            -or-
            <code>
            topNode.GetNode("child1","childOfchild","thirdLevelChild","targetNode");
            </code>
            </example>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The node path is invalid.
            </exception>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.TryGetNode(System.String,System.String[])">
            <summary>
            Gets the node following the specified delimited path and, optionally, the following array of node names
            </summary>
            <param name="path">The path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The specified node or null if it does not exist.</returns>
            <example>
            <code>
            topNode.GetNode("child1|childOfchild","thirdLevelChild","targetNode");
            </code>
            -or-
            <code>
            topNode.GetNode("child1","childOfchild","thirdLevelChild","targetNode");
            </code>
            </example>
            <remarks>
            Nodes in the path should be separated by the parent <see cref="P:XyratexOSC.Settings.SettingsDocument.PathSeparator"/>.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.GetNodeValue(System.String,System.String[])">
            <summary>
            Gets the value of the node found under the path and, optionally, the following array of node names.
            </summary>
            <param name="path">The path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The value of the found node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.GetNodeType(System.String,System.String[])">
            <summary>
            Gets the type of the node found under the path and, optionally, the following array of node names.
            </summary>
            <param name="path">The path.</param>
            <param name="nodes">The remainder of the node path.</param>
            <returns>The type of the found node.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.SelectNodesStartingWith(System.String)">
            <summary>
            Returns a list of all nodes in the collection that have names starting with the specified string.
            </summary>
            <param name="nameBeginning">The name beginning.</param>
            <returns>A SettingsNodeList of found nodes.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.SelectNodesContaining(System.String)">
            <summary>
            Returns a list of all nodes in the collection that have names which contain the specified string.
            </summary>
            <param name="namePartial">The partial node name.</param>
            <returns>A SettingsNodeList of found nodes.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.SelectNode(System.String)">
            <summary>
            Returns the node specified by name.
            </summary>
            <param name="name">The node name.</param>
            <returns>The node with the specified name.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Find(System.String,System.Boolean)">
            <summary>
            Finds all nodes specified by name either shallowly or deeply (the sub-tree created by all nodes in this collection).
            </summary>
            <param name="name">The node name.</param>
            <param name="searchAllChildren">if set to <c>true</c> search within the tree created by all nodes in this collection.</param>
            <returns>A <see cref="T:XyratexOSC.Settings.SettingsNodeList"/> of all found nodes.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.FindInternal(System.String,System.Boolean,XyratexOSC.Settings.SettingsNodeList,XyratexOSC.Settings.SettingsNodeList)">
            <summary>
            Recursive search that returns a list of all nodes with the specified name
            </summary>
            <param name="name">The node name.</param>
            <param name="searchAllChildren">if set to <c>true</c> search deeply.</param>
            <param name="collection">The collection under inspection.</param>
            <param name="foundNodes">The previously found nodes.</param>
            <returns>A collection of the previously found nodes with any newly found nodes from the collection under inspection.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.GetEnumerator">
            <summary>
            Gets the enumerator of this collection. This iterates by node index.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.IndexOf(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Gets the index of the specified node.
            </summary>
            <param name="node">The node.</param>
            <returns>The node index.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.IndexOf(System.String)">
            <summary>
            Gets the index of the node specified by name.
            </summary>
            <param name="name">The node name.</param>
            <returns>The node index.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Add(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Adds the specified node to this collection.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Insert(System.Int32,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Inserts the specified node at the specified index.
            </summary>
            <param name="index">The node index.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.InsertBefore(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Inserts the specified node before the reference node.
            </summary>
            <param name="refNode">The reference node.</param>
            <param name="newNode">The new node.</param>
            <exception cref="T:System.ArgumentException">The reference node does not exist in this list.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.InsertAfter(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Inserts the specified node after the reference node.
            </summary>
            <param name="refNode">The reference node.</param>
            <param name="newNode">The new node.</param>
            <exception cref="T:System.ArgumentException">The reference node does not exist in this list.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Replace(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNode)">
            <summary>
            Removes the old node from the collection and inserts the new node at the old node's index.
            </summary>
            <param name="oldNode">The old node.</param>
            <param name="newNode">The new node.</param>
            <exception cref="T:System.ArgumentException">The node-to-be-replaced does not exist in this list.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Remove(XyratexOSC.Settings.SettingsNode)">
            <summary>
            Removes the specified node.
            </summary>
            <param name="node">The node.</param>
            <exception cref="T:System.ArgumentNullException"><c>node</c> is null.</exception>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Remove(System.String)">
            <summary>
            Removes the node specified by name.
            </summary>
            <param name="name">The node name.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.RemoveAt(System.Int32)">
            <summary>
            Removes the node at the specified index.
            </summary>
            <param name="index">The node index.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.RemoveAll">
            <summary>
            Removes all nodes from this collection individually. 
            </summary>
            <remarks>
            This method of removing all nodes from the collection 
            will allow all nodes to raise their removing/removed events.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.Clear">
            <summary>
            Clears all nodes from the collection. 
            Note: this will not raise the node removing events.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.ToArray">
            <summary>
            Converts this collection to an array of SettingsNodes.
            </summary>
            <returns>An array representation of this collection.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.ToList">
            <summary>
            Converts this collection to a List of SettingsNodes.
            </summary>
            <returns>A List representation of this collection.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.ToDict">
            <summary>
            Converts this collection to a Dictionary of SettingsNodes.
            </summary>
            <returns>A Dictionary representation of this collection.</returns>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.RaiseInserting(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node is inserting.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.RaiseInserted(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node has been inserted.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.RaiseRemoving(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node is removing.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XyratexOSC.Settings.SettingsNodeList.RaiseRemoved(XyratexOSC.Settings.SettingsNode,XyratexOSC.Settings.SettingsNodeChangeEventArgs)">
            <summary>
            Notifies the parent node that a child node has been removed.
            </summary>
            <param name="src">The node source of the event.</param>
            <param name="e">The <see cref="T:XyratexOSC.Settings.SettingsNodeChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeList.Item(System.String)">
            <summary>
            Gets the <see cref="T:XyratexOSC.Settings.SettingsNode"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:XyratexOSC.Settings.SettingsNode"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeList.Parent">
            <summary>
            Sets the parent node of this collection (and updates all nodes in the collection).
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:XyratexOSC.Settings.SettingsNodeList.Count">
            <summary>
            Gets the count of nodes in this collection.
            </summary>
            <value>The node count.</value>
        </member>
        <member name="T:XyratexOSC.Settings.UI.PropertyGridEditor">
            <summary>
            Views and allows to edit all device settings in the system
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.UI.SettingsEditor">
            <summary>
            Base control that provides the UI for editing settings objects
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.UI.SettingsEditor._settingsObject">
            <summary>
            The settings object
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.UI.SettingsEditor.btnCancel">
            <summary>
            The cancel button
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.UI.SettingsEditor.btnSave">
            <summary>
            The save button
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.UI.SettingsEditor.btnLoad">
            <summary>
            The load button
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.UI.SettingsEditor"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.SetSettingsObject(System.Object)">
            <summary>
            Sets the settings object.
            </summary>
            <param name="settingsObject">The settings object.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.GetSettingsObject">
            <summary>
            Gets the settings object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.RefreshSettings">
            <summary>
            Refreshes the settings view.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.OnRefreshSettings">
            <summary>
            Called when refreshing settings.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.SaveSettings">
            <summary>
            Called when 'Save' button is clicked.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.OnSave">
            <summary>
            Saves settings using settings document.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.LoadSettings(System.String)">
            <summary>
            Loads the settings from the specified filepath.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.LoadSettings">
            <summary>
            Called when 'Load' button is clicked.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.OnLoad">
            <summary>
            Loads settings from settings document.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.Accept">
            <summary>
            Called when 'Accept' button is clicked.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.OnAccept">
            <summary>
            Called when accept is clicked.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.Cancel">
            <summary>
            Called when 'Cancel' button is clicked.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditor.OnCancel">
            <summary>
            Restores settings prior to firing the <see cref="E:XyratexOSC.Settings.UI.SettingsEditor.Cancelled"/> event.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.UI.SettingsEditor.Cancelled">
            <summary>
            Occurs when cancel is clicked.
            </summary>
        </member>
        <member name="P:XyratexOSC.Settings.UI.SettingsEditor.FilePath">
            <summary>
            Gets or sets the file path to be used when saving settings to file. 
            If <see cref="P:XyratexOSC.Settings.UI.SettingsEditor.UseSaveFileDialog"/> is true, then this is used as the default file in the dialog.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:XyratexOSC.Settings.UI.SettingsEditor.UseSaveFileDialog">
            <summary>
            Gets or sets a value indicating whether to use the save file dialog; otherwise saves to a single file.
            </summary>
            <value>
              <c>true</c> if using the save file dialog; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.Settings.UI.SettingsEditor.SettingsDocument">
            <summary>
            In a TreeViewEditor, gets the current settings document. In a PropertyGridEditor, gets the last saved/loaded document.
            </summary>
        </member>
        <member name="P:XyratexOSC.Settings.UI.SettingsEditor.IsDirty">
            <summary>
            Gets or sets a value indicating whether there are any edits to the original settings.
            </summary>
            <value>
              <c>true</c> if this instance is dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.UI.PropertyGridEditor"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.#ctor(System.Object,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.UI.PropertyGridEditor"/> class.
            </summary>
            <param name="settingsObject">The settings object.</param>
            <param name="constructionArgs">The construction args.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.SetSettingsObject(System.Object)">
            <summary>
            Creates a clone of the settings object and assigns it to the property grid.
            </summary>
            <param name="settingsObject">The settings object.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.SetSettingsObject(System.Object,System.Object[])">
            <summary>
            Creates a clone of the settings object and assigns it to the property grid.
            </summary>
            <param name="settingsObject">The settings object.</param>
            <param name="constructionArgs">The construction arguments.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.OnRefreshSettings">
            <summary>
            Called when settings are refreshed.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.OnSave">
            <summary>
            Saves settings using settings document.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.OnLoad">
            <summary>
            Loads settings from settings document.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.OnAccept">
            <summary>
            Called when accepting the settings changes to the original settings object.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.OnCancel">
            <summary>
            Restores settings prior to firing the cancelled event.
            </summary>
        </member>
        <member name="F:XyratexOSC.Settings.UI.PropertyGridEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.PropertyGridEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:XyratexOSC.Settings.UI.PropertyGridEditor.PropertyGridValueChanged">
            <summary>
            Occurs when a value changed in the property grid.
            </summary>
        </member>
        <member name="T:XyratexOSC.Settings.UI.SettingsEditForm">
            <summary>
            A form for displaying an editor that shows/changes application settings
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.UI.SettingsEditForm"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditForm.#ctor(XyratexOSC.Settings.UI.SettingsEditor)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.UI.SettingsEditForm"/> class.
            </summary>
            <param name="editor">The editor.</param>
        </member>
        <member name="F:XyratexOSC.Settings.UI.SettingsEditForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.Settings.UI.SettingsEditForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.Settings.UI.SettingsEditForm.Editor">
            <summary>
            Gets or sets the <see cref="T:XyratexOSC.Settings.UI.SettingsEditor"/> to be used in this form.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="T:XyratexOSC.Settings.UI.TreeViewEditor">
            <summary>
            Settings editor that is based on the treeview control.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Settings.UI.TreeViewEditor"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.OnRefreshSettings">
            <summary>
            Called when refreshing settings.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.OnSave">
            <summary>
            Saves settings using settings document.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.OnLoad">
            <summary>
            Loads settings from settings document.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.OnAccept">
            <summary>
            Called when accept is clicked.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.OnCancel">
            <summary>
            Restores settings prior to firing the cancelled event.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.UpdateTreeView">
            <summary>
            Updates the TreeView with the current SettingsDocument.
            </summary>
        </member>
        <member name="M:XyratexOSC.Settings.UI.TreeViewEditor.CopySettingsToTree(XyratexOSC.Settings.SettingsNodeList,System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Used internally to deeply copy the SettingsDocument.
            </summary>
            <param name="settingsCollection">The current settings collection.</param>
            <param name="treeCollection">The current tree node collection.</param>
        </member>
        <member name="T:XyratexOSC.UI.DoubleBufferedPanel">
            <summary>
            A panel that will be double buffered by Windows.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.DoubleBufferedPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.DoubleBufferedPanel"/> class.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.ErrorBanner">
            <summary>
            A red background notification banner.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.NotifyBanner">
            <summary>
            A notification banner that will be displayed at the top of the notification panel.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.NotifyBanner"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.AddAction(System.String,System.Action)">
            <summary>
            Adds an action.
            </summary>
            <param name="actionText">The action text.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.RemoveAction(System.String)">
            <summary>
            Removes an action with the specified text.
            </summary>
            <param name="actionText">The action text.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.ClearActions">
            <summary>
            Clears all actions.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.DoAction(System.String)">
            <summary>
            Performs the action associated with the specified text.
            </summary>
            <param name="actionText">The action text.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.Close">
            <summary>
            Closes this banner.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyBanner.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyBanner.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyBanner.flowLayout">
            <summary>
            The flow layout panel for controls
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.NotifyBanner.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyBanner.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>
            The icon.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyBanner.CloseText">
            <summary>
            Gets or sets the close text.
            </summary>
            <value>
            The close text.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyBanner.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <returns>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              </PermissionSet>
        </member>
        <member name="E:XyratexOSC.UI.NotifyBanner.Closing">
            <summary>
            Occurs when the banner is closing.
            </summary>
        </member>
        <member name="E:XyratexOSC.UI.NotifyBanner.Closed">
            <summary>
            Occurs when the banner has closed.
            </summary>
        </member>
        <member name="E:XyratexOSC.UI.NotifyBanner.ActionStarting">
            <summary>
            Occurs when a banner action is starting.
            </summary>
        </member>
        <member name="E:XyratexOSC.UI.NotifyBanner.ActionCompleted">
            <summary>
            Occurs when a banner action has completed.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ErrorBanner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.ErrorBanner"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="details">The details.</param>
        </member>
        <member name="P:XyratexOSC.UI.ErrorBanner.Details">
            <summary>
            Gets or sets the error details.
            </summary>
            <value>
            The error details.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.ListPanel">
            <summary>
            A control for editing a list of items including control over each item's properties.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.ListPanel"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanel.OnClientSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="F:XyratexOSC.UI.ListPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.ListPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.ListPanel.ItemIcon">
            <summary>
            Gets or sets the icon to be used for each item.
            </summary>
            <value>
            The item icon.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ListPanel.List">
            <summary>
            Gets or sets the list of objects to display.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="E:XyratexOSC.UI.ListPanel.ListChanged">
            <summary>
            Occurs when the list changed.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.ListPanelItem">
            <summary>
            An item displayed in a list panel control.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanelItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.ListPanelItem"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanelItem.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.ListPanelItem"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:XyratexOSC.UI.ListPanelItem.Shrink">
            <summary>
            Shrinks this item's property grid.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanelItem.Expand">
            <summary>
            Expands this item's property grid.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.ListPanelItem.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ListPanelItem.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.ListPanelItem.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.ListPanelItem.Item">
            <summary>
            Gets or sets the item to display.
            </summary>
            <value>
            The item.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ListPanelItem.Icon">
            <summary>
            Gets or sets the icon representing this item.
            </summary>
            <value>
            The icon.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ListPanelItem.Moving">
            <summary>
            Gets a value indicating whether this <see cref="T:XyratexOSC.UI.ListPanelItem"/> is moving.
            </summary>
            <value>
              <c>true</c> if moving; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:XyratexOSC.UI.ListPanelItem.PropertyChanged">
            <summary>
            Occurs when a property of this <see cref="P:XyratexOSC.UI.ListPanelItem.Item"/> has changed.
            </summary>
        </member>
        <member name="E:XyratexOSC.UI.ListPanelItem.StartMove">
            <summary>
            Occurs when this item begins a move via mouse drag.
            </summary>
        </member>
        <member name="E:XyratexOSC.UI.ListPanelItem.EndMove">
            <summary>
            Occurs when this item has been released.
            </summary>
        </member>
        <member name="E:XyratexOSC.UI.ListPanelItem.LocationChanging">
            <summary>
            Occurs when this item's location is changing in the parent list.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.NoFocusCueButton">
            <summary>
            A <see cref="T:System.Windows.Forms.Button"/> that does not show Focus Cues.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.NoFocusCueButton.ShowFocusCues">
            <summary>
            Gets a value indicating whether the control should display focus rectangles.
            </summary>
            <returns>true if the control should display focus rectangles; otherwise, false.</returns>
        </member>
        <member name="T:XyratexOSC.UI.LocationChangingEventArgs">
            <summary>
            Event data for a location changing event.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.LocationChangingEventArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.LocationChangingEventArgs"/> class.
            </summary>
            <param name="newLocation">The new location.</param>
        </member>
        <member name="P:XyratexOSC.UI.LocationChangingEventArgs.NewLocation">
            <summary>
            Gets or sets the new location point.
            </summary>
            <value>
            The new location.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.NotificationPanel">
            <summary>
            A panel that catches banner notifications raised in the application, and docks them to the top of the panel.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotificationPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.NotificationPanel"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotificationPanel.Close">
            <summary>
            Closes this notification panel instance.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotificationPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotificationPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotificationPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.Notify">
            <summary>
            The application central location for sending UI notifications.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUp(System.String,System.String,XyratexOSC.UI.NotifyButton,System.String,System.String,System.Action)">
            <summary>
            Sends a pop-up dialog notification.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="buttons">The buttons.</param>
            <param name="request">The request.</param>
            <param name="customButtonText">The custom button text if required.</param>
            <param name="customAction">The custom action if required.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUp(System.String,System.String,XyratexOSC.UI.NotifyButton,XyratexOSC.IO.LightStackColor,System.String,System.String,System.Action)">
            <summary>
            Sends a pop-up dialog notification.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="buttons">The buttons.</param>
            <param name="request">The request.</param>
            <param name="customButtonText">The custom button text if required.</param>
            <param name="customAction">The custom action if required.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUp(System.String,System.String,System.String,System.String[])">
            <summary>
            Sends a pop-up dialog notification.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="request">The request.</param>
            <param name="buttonNames">The custom button names.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUp(System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            Sends a pop-up dialog notification.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="request">The request.</param>
            <param name="defaultButtonIndex">The index of the buttonNames array which is set to be the default button.</param>
            <param name="buttonNames">The custom button names.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUp(System.String,System.String,System.String,XyratexOSC.IO.LightStackColor,System.Int32,System.String[])">
            <summary>
            Sends a pop-up dialog notification.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="request">The request.</param>
            <param name="defaultButtonIndex">The index of the buttonNames array which is set to be the default button.</param>
            <param name="buttonNames">The custom button names.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUp(System.String,System.String,System.String,XyratexOSC.IO.LightStackColor,System.String[])">
            <summary>
            Sends a pop-up dialog notification.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="request">The request.</param>
            <param name="buttonNames">The custom button names.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUpError(System.String,System.Exception)">
            <summary>
            Sends an error pop-up dialog notification. The border and title will be in red.
            </summary>
            <param name="title">The title.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUpError(System.String,System.Exception,XyratexOSC.IO.LightStackColor)">
            <summary>
            Sends an error pop-up dialog notification. The border and title will be in red.
            </summary>
            <param name="title">The title.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUpError(System.String,System.String,System.String)">
            <summary>
            Sends an error pop-up dialog notification. The border and title will be in red.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="details">The error details.</param>
        </member>
        <member name="M:XyratexOSC.UI.Notify.PopUpError(System.String,System.String,XyratexOSC.IO.LightStackColor,System.String)">
            <summary>
            Sends an error pop-up dialog notification. The border and title will be in red.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="details">The error details.</param>
        </member>
        <member name="M:XyratexOSC.UI.Notify.Banner(XyratexOSC.UI.NotifyBanner)">
            <summary>
            Sends a banner notification to be displayed at the top of the application notification panel.
            </summary>
            <param name="banner">The pre-constructed banner.</param>
        </member>
        <member name="M:XyratexOSC.UI.Notify.Banner(System.String,System.String,System.String,System.Action)">
            <summary>
            Sends a banner notification to be displayed at the top of the application notification panel.
            </summary>
            <param name="message">The message.</param>
            <param name="closeText">The close text (defaults to OK).</param>
            <param name="actionText">The action text if providing an interactive button for the user to respond.</param>
            <param name="action">The custom action when the action button is clicked.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.Banner(System.String,System.String,System.String,System.Action,System.String,System.Action)">
            <summary>
            Sends a banner notification (with 2 custom actions) to be displayed at the top of the application notification panel.
            </summary>
            <param name="message">The message.</param>
            <param name="closeText">The close text (defaults to OK).</param>
            <param name="action1Text">First action text.</param>
            <param name="action1">First action.</param>
            <param name="action2Text">Second action text.</param>
            <param name="action2">Second action.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.Banner(System.String,System.String,System.String,System.Action,System.String,System.Action,System.String,System.Action)">
            <summary>
            Sends a banner notification (with 3 custom actions) to be displayed at the top of the application notification panel.
            </summary>
            <param name="message">The message.</param>
            <param name="closeText">The close text (defaults to OK).</param>
            <param name="action1Text">First action text.</param>
            <param name="action1">First action.</param>
            <param name="action2Text">Second action text.</param>
            <param name="action2">Second action.</param>
            <param name="action3Text">Third action text.</param>
            <param name="action3">Third action.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.StartWizard(XyratexOSC.UI.WizardStep[])">
            <summary>
            Starts a <see cref="T:XyratexOSC.UI.WizardBanner"/> notification, which is displayed at the top of the application notification panel.
            </summary>
            <param name="steps">The steps.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.Notify.BannerError(System.String,System.String)">
            <summary>
            Sends an error banner notification to be displayed at the top of the application notification panel. This will be in red.
            </summary>
            <param name="message">The message.</param>
            <param name="details">The error details.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.UI.UserMessageFilter">
            <summary>
            User Message Filter
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.UserMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>
            true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.
            </returns>
        </member>
        <member name="T:XyratexOSC.UI.NotifyForm">
            <summary>
            An enhanced MessageBox style notification form.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.NotifyForm"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.#ctor(System.String,System.String,XyratexOSC.UI.NotifyButton,System.String,System.String,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.NotifyForm"/> class.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="buttons">The buttons.</param>
            <param name="request">The request.</param>
            <param name="customButtonText">The custom button text if a custom button is needed.</param>
            <param name="customAction">The custom action if a custom button is needed.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.#ctor(System.String,System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.NotifyForm"/> class.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="request">The request.</param>
            <param name="buttonNames">The custom button names.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.#ctor(System.String,System.String,System.String,System.Int32,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.NotifyForm"/> class.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
            <param name="request">The request.</param>
            <param name="defaultButtonIndex">The index of the buttonNames array which is set to be the default button.</param>
            <param name="buttonNames">The custom button names.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sends a Windows message
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="Msg">The MSG.</param>
            <param name="wParam">The w param.</param>
            <param name="lParam">The l param.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.ReleaseCapture">
            <summary>
            Releases capture.
            </summary>
            <returns></returns>
        </member>
        <member name="F:XyratexOSC.UI.NotifyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.NotifyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.Buttons">
            <summary>
            Gets the form buttons.
            </summary>
            <value>
            The form buttons.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.ClickedButton">
            <summary>
            Gets the clicked button that caused the form to close.
            </summary>
            <value>
            The clicked button.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.ClickedCustomName">
            <summary>
            Gets the name of the clicked custom button.
            </summary>
            <value>
            The name of the clicked custom button.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.Title">
            <summary>
            Gets or sets the title of the notify form.
            </summary>
            <value>
            The form title.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.Message">
            <summary>
            Gets or sets the message of the notify form.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.Request">
            <summary>
            Gets or sets the request prompt located above the form buttons. Typically in the form of a question.
            </summary>
            <value>
            The request prompt.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.CustomButtonText">
            <summary>
            Gets or sets the custom button text.
            </summary>
            <value>
            The custom button text.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.CustomButtonAction">
            <summary>
            Gets or sets the custom button action.
            </summary>
            <value>
            The custom button action.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.NotifyForm.BackColor">
            <summary>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              </PermissionSet>
        </member>
        <member name="T:XyratexOSC.UI.NotifyButton">
            <summary>
            Standard buttons for notification windows.
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyButton.OK">
            <summary>
            OK
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyButton.Cancel">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyButton.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyButton.Shutdown">
            <summary>
            Shutdown
            </summary>
        </member>
        <member name="F:XyratexOSC.UI.NotifyButton.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:XyratexOSC.UI.PopUpContextForm">
            <summary>
            Hovering, borderless form for context pop-ups that can hold a custom control. Provides more flexibility than a context menu.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.#ctor">
            <summary>
            [For designer purposes only] Initializes a new instance of the <see cref="T:XyratexOSC.UI.PopUpContextForm"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.Show(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Drawing.Size,System.Drawing.Point)">
            <summary>
            Shows the specified popup control.
            </summary>
            <param name="popupControl">The popup control.</param>
            <param name="parent">The parent.</param>
            <param name="size">The size.</param>
            <param name="pos">The pos.</param>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Detects mouse clicks outside of the form in order to close the form when focus is lost.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>
            true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.
            </returns>
        </member>
        <member name="F:XyratexOSC.UI.PopUpContextForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:XyratexOSC.UI.PopUpContextForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.PopUpContextForm.UserControl">
            <summary>
            Gets or sets the custom user control.
            </summary>
            <value>
            The user control.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.ProgressBarEnhanced">
            <summary>
            A progress bar that allows for two overlayed progress bars.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ProgressBarEnhanced.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.ProgressBarEnhanced"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ProgressBarEnhanced.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="P:XyratexOSC.UI.ProgressBarEnhanced.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ProgressBarEnhanced.DrawBlendShadow">
            <summary>
            Gets or sets a value indicating whether the blend shadow is drawn.
            </summary>
            <value>
              <c>true</c> if [draw blend shadow]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ProgressBarEnhanced.BackColor2">
            <summary>
            Gets or sets the back color2.
            </summary>
            <value>
            The back color2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ProgressBarEnhanced.Value2">
            <summary>
            Gets or sets the value2.
            </summary>
            <value>
            The value2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ProgressBarEnhanced.Minimum2">
            <summary>
            Gets or sets the minimum2.
            </summary>
            <value>
            The minimum2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ProgressBarEnhanced.Maximum2">
            <summary>
            Gets or sets the maximum2.
            </summary>
            <value>
            The maximum2.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.ToolStripProgressBarEnhanced">
            <summary>
            A toolstrip control for displaying a <see cref="T:XyratexOSC.UI.ProgressBarEnhanced"/> control.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.ToolStripProgressBarEnhanced.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.ToolStripProgressBarEnhanced"/> class.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.ProgressBar">
            <summary>
            Gets the progress bar.
            </summary>
            <value>
            The progress bar.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.BackColor2">
            <summary>
            Gets or sets the back color2.
            </summary>
            <value>
            The back color2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Value2">
            <summary>
            Gets or sets the value2.
            </summary>
            <value>
            The value2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Minimum2">
            <summary>
            Gets or sets the minimum2.
            </summary>
            <value>
            The minimum2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.Maximum2">
            <summary>
            Gets or sets the maximum2.
            </summary>
            <value>
            The maximum2.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.ForeColor">
            <summary>
            Gets or sets the foreground color of the hosted control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> representing the foreground color of the hosted control.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              </PermissionSet>
        </member>
        <member name="P:XyratexOSC.UI.ToolStripProgressBarEnhanced.BackColor">
            <summary>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the item. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
              </PermissionSet>
        </member>
        <member name="T:XyratexOSC.UI.UIUtility">
            <summary>
            Provides standard UI functions.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.UIUtility.Invoke(System.Windows.Forms.Control,System.Action)">
            <summary>
            Synchronously invokes an action on the thread that owns the specified control, if required.
            </summary>
            <param name="c">The control.</param>
            <param name="a">The action.</param>
        </member>
        <member name="M:XyratexOSC.UI.UIUtility.BeginInvoke(System.Windows.Forms.Control,System.Action)">
            <summary>
            Asynchronously invokes an action on the thread that owns the specified control, if required.
            </summary>
            <param name="c">The control.</param>
            <param name="a">The action.</param>
        </member>
        <member name="M:XyratexOSC.UI.UIUtility.StartAsync(System.Windows.Forms.Control,System.Action,System.Action,System.Action{System.Exception})">
            <summary>
            Starts the an action asynchronously on the thread that owns the specified control, an optionally supplies actions to execute when completed or errored.
            </summary>
            <param name="c">The control.</param>
            <param name="action">The action.</param>
            <param name="onComplete">The action on complete.</param>
            <param name="onError">The action on error.</param>
        </member>
        <member name="M:XyratexOSC.UI.UIUtility.StartAsync(System.Windows.Forms.Control,System.Action,System.Threading.Tasks.TaskCreationOptions,System.Action,System.Action{System.Exception})">
            <summary>
            Starts the an action asynchronously on the thread that owns the specified control, an optionally supplies actions to execute when completed or errored.
            </summary>
            <param name="c">The control.</param>
            <param name="action">The action.</param>
            <param name="taskOptions">The task options.</param>
            <param name="onComplete">The action on complete.</param>
            <param name="onError">The action on error.</param>
        </member>
        <member name="P:XyratexOSC.UI.UIUtility.XyratexBlue">
            <summary>
            Gets the Xyratex blue.
            </summary>
            <value>
            The Xyratex blue.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.WizardBanner">
            <summary>
            A notification banner that provides a series of prompts and associated buttons/actions.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.WizardBanner.#ctor(System.Collections.Generic.IList{XyratexOSC.UI.WizardStep})">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.WizardBanner"/> class.
            </summary>
            <param name="steps">The steps.</param>
        </member>
        <member name="M:XyratexOSC.UI.WizardBanner.#ctor(XyratexOSC.UI.WizardStep[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.WizardBanner"/> class.
            </summary>
            <param name="steps">The steps.</param>
        </member>
        <member name="M:XyratexOSC.UI.WizardBanner.ActionAndProgress">
            <summary>
            Performs the default step action and progresses to the next wizard step.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.WizardBanner.ActionAndProgress(System.String)">
            <summary>
            Performs the step action of the specified button name and progresses to the next wizard step.
            </summary>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="P:XyratexOSC.UI.WizardBanner.Steps">
            <summary>
            Gets the steps.
            </summary>
            <value>
            The steps.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.WizardBanner.CurrentStep">
            <summary>
            Gets the current step.
            </summary>
            <value>
            The current step.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.WizardBanner.PreviousStep">
            <summary>
            Gets the previous step.
            </summary>
            <value>
            The previous step.
            </value>
        </member>
        <member name="T:XyratexOSC.UI.WizardStep">
            <summary>
            A step of the <see cref="T:XyratexOSC.UI.WizardBanner"/> that includes a prompt, and button/action options.
            </summary>
        </member>
        <member name="M:XyratexOSC.UI.WizardStep.#ctor(System.String,System.Action,System.Action,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.WizardStep"/> class.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="setup">The setup.</param>
            <param name="action">The action.</param>
            <param name="cleanup">The cleanup.</param>
        </member>
        <member name="M:XyratexOSC.UI.WizardStep.#ctor(System.String,System.Action,System.Action,System.Tuple{System.String,System.Action}[])">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.UI.WizardStep"/> class.
            </summary>
            <param name="instructions">The instructions.</param>
            <param name="setup">The setup.</param>
            <param name="cleanup">The cleanup.</param>
            <param name="nameAndActions">The name and actions of multiple action options.</param>
        </member>
        <member name="M:XyratexOSC.UI.WizardStep.AddAction(System.String,System.Action)">
            <summary>
            Adds an action option to this step.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:XyratexOSC.UI.WizardStep.RemoveAction(System.String)">
            <summary>
            Removes an action by name from this wizard step.
            </summary>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:XyratexOSC.UI.WizardStep.ClearActions">
            <summary>
            Clears all actions of this wizard step.
            </summary>
        </member>
        <member name="P:XyratexOSC.UI.WizardStep.Setup">
            <summary>
            Gets or sets the action to be performed when this step is entered.
            </summary>
            <value>
            The setup action.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.WizardStep.Actions">
            <summary>
            Gets the actions available button names and associated actions that are available to select during this step prompt.
            </summary>
            <value>
            The prompt actions.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.WizardStep.Cleanup">
            <summary>
            Gets or sets the action executed when this step is exited (regardless of which action was selected).
            </summary>
            <value>
            The cleanup action.
            </value>
        </member>
        <member name="P:XyratexOSC.UI.WizardStep.Instructions">
            <summary>
            Gets or sets the prompt instructions.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="E:XyratexOSC.UI.WizardStep.PropertyChanged">
            <summary>
            Occurs when a property value changes in this step so the Wizard Banner can update.
            </summary>
        </member>
        <member name="T:XyratexOSC.Utilities.AlphaNumericComparer">
            <summary>
            This class provides a semi-numeric IComparer implemention for strings. 
            It will sort by numerics if possible to convert otherwise alphabetically.
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.AlphaNumericComparer.Compare(System.String,System.String)">
            <summary>
            Compares the specified string 1 to string 2.
            </summary>
            <param name="s1">String 1.</param>
            <param name="s2">String 2.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Utilities.AlphaNumericComparer.IsNumeric(System.String)">
            <summary>
            Determines whether the specified value can be converted to a numeric.
            </summary>
            <param name="value">The value.</param>
            <returns>
              <c>true</c> if the specified value is numeric; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:XyratexOSC.Utilities.EnumExtensions">
            <summary>
            Provides Enum value extensions for getting enum member attributes
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.EnumExtensions.GetAttribute``1(System.Enum)">
            <summary>
            Gets the specified attribute for this enum value.
            </summary>
            <typeparam name="T">The Attribute Type</typeparam>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.MissingMemberException">
            No attributes defined for the specified enum.
            or
            The specified attribute is not defined for the specified enum.
            </exception>
        </member>
        <member name="M:XyratexOSC.Utilities.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            Gets the description attribute for this enum value.
            </summary>
            <param name="value">The enum value.</param>
            <returns>The description attribute.</returns>
        </member>
        <member name="T:XyratexOSC.Utilities.ImageHeader">
            <summary>
            Loads image header data without reading the entire contents of the image file 
            (if this fails, then the entire image is loaded to obtain the header)
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.ImageHeader.GetDimensions(System.String)">
            <summary>        
            Gets the dimensions of an image.        
            </summary>        
            <param name="path">The path of the image to get the dimensions of.</param>        
            <returns>The dimensions of the specified image.</returns>        
            <exception cref="T:System.ArgumentException">The image was of an unrecognised format.</exception>        
        </member>
        <member name="M:XyratexOSC.Utilities.ImageHeader.GetDimensions(System.IO.BinaryReader)">
            <summary>
            Gets the dimensions of an image.
            </summary>
            <param name="binaryReader">The binary reader.</param>
            <returns>
            The dimensions of the specified image.
            </returns>
            <exception cref="T:System.ArgumentException">binaryReader</exception>
            <exception cref="T:System.ArgumentException">The image was of an unrecognised format.</exception>
        </member>
        <member name="T:XyratexOSC.Utilities.RollingBuffer`1">
            <summary>
            A generic collection with a fixed length that rolls over when add past capacity.
            </summary>
            <typeparam name="T">T</typeparam>
        </member>
        <member name="M:XyratexOSC.Utilities.RollingBuffer`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Utilities.RollingBuffer`1"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:XyratexOSC.Utilities.RollingBuffer`1.Add(`0)">
            <summary>
            Adds the specified T element. 
            </summary>
            <param name="element">The specified element to add.</param>
        </member>
        <member name="M:XyratexOSC.Utilities.RollingBuffer`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator&lt;T&gt;"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:XyratexOSC.Utilities.CreateableElement`1">
            <summary>
            A factory element that can create objects of the generic type T during runtime.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:XyratexOSC.Utilities.IFactoryElement">
            <summary>
            An object that can be created during runtime from reflection with or without optional parameters
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.IFactoryElement.New(System.Object[])">
            <summary>
            Creates a new object of the factory type.
            </summary>
            <param name="args">The optional constructor arguments.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Utilities.CreateableElement`1.New(System.Object[])">
            <summary>
            Creates a new object of the factory type T.
            </summary>
            <param name="args">The optional constructor arguments.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Utilities.Factory`2">
            <summary>
            A facotry that can create objects of type T based off of keys of type K.
            </summary>
            <typeparam name="K">The key type.</typeparam>
            <typeparam name="T">The factory object type.</typeparam>
        </member>
        <member name="T:XyratexOSC.Utilities.IFactory`2">
            <summary>
            A Factory that can create objects of type T based on a key of type K.
            </summary>
            <typeparam name="K">The key type.</typeparam>
            <typeparam name="T">The factory object type.</typeparam>
        </member>
        <member name="M:XyratexOSC.Utilities.IFactory`2.CanCreate(`0)">
            <summary>
            Determines whether this instance can create an object based on the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if this instance can create the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Utilities.IFactory`2.Create(`0,System.Object[])">
            <summary>
            Creates an object of type T based off of the key of type K.
            </summary>
            <param name="key">The object key.</param>
            <param name="args">The optional contructor aruments.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Utilities.IFactory`2.GetKeys">
            <summary>
            Gets a list of possible keys that have been registered with this factory.
            </summary>
            <returns></returns>
        </member>
        <member name="F:XyratexOSC.Utilities.Factory`2.elements">
            Elements that can be created
        </member>
        <member name="M:XyratexOSC.Utilities.Factory`2.AddNewable``1(`0)">
            <summary>
             Add a new creatable (no args) kind of object to the factory, based on the specified key.
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.Factory`2.AddCreatable``1(`0)">
            <summary>
            Add a creatable kind of object to the factory which can have any number of args.
            </summary>
            <remarks>
            These are not as safe as AddNewable, because the arguments supplied can only be checked at runtime.
            </remarks>
        </member>
        <member name="M:XyratexOSC.Utilities.Factory`2.CanCreate(`0)">
            <summary>
            Determines whether this factory can create an object based on the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if this instance can create the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XyratexOSC.Utilities.Factory`2.Create(`0,System.Object[])">
            <summary>
            Creates a new object based on the specified key with any optional construtor arguments. 
            A NewableElement must have already been added to the factory using AddNewable.
            </summary>
            <param name="key">The key.</param>
            <param name="args">The optional constructor arguments.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Factory cannot create the unknown type ' + typeof(T).Name + '</exception>
        </member>
        <member name="M:XyratexOSC.Utilities.Factory`2.GetKeys">
            <summary>
            Gets a list of possible keys that have been registered with this factory.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Utilities.NewableElement`1">
            <summary>
            A factory element that provides a constructor for the generic type at runtime.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XyratexOSC.Utilities.NewableElement`1.New(System.Object[])">
            <summary>
            Creates a new object of the factory type.
            </summary>
            <param name="args">The optional constructor arguments.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Utilities.StringExtensions">
            <summary>
            Exention methods related to string objects
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.StringExtensions.ToIntList(System.String,System.Char)">
            <summary>
            Creates a list of integers from a string of comma separated, hyphonated numbers. IE. printer pages.
            </summary>
            <param name="intChain">The int chain.</param>
            <param name="wildcard">The wildcard.</param>
            <returns></returns>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:XyratexOSC.Utilities.StringExtensions.ToIntListString(System.Collections.Generic.List{System.Int32})">
            <summary>
            Creates comma separated, hyphonated string of numbers from a list of integers. (ie. printer pages)
            </summary>
            <param name="ints">The ints.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Utilities.StringExtensions.ToIntListString(System.Collections.Generic.List{System.Int32},System.Char)">
            <summary>
            Creates comma separated, hyphonated string of numbers from a list of integers. (ie. printer pages)
            </summary>
            <param name="ints">The ints.</param>
            <param name="wildcard">The wildcard to represent negative integers.</param>
            <returns></returns>
        </member>
        <member name="M:XyratexOSC.Utilities.StringExtensions.ToIntListString(System.Collections.Generic.List{System.Int32},System.Char,System.Boolean)">
            <summary>
            Creates comma separated, hyphonated string of numbers from a list of integers. (ie. printer pages)
            </summary>
            <param name="ints">The ints.</param>
            <param name="wildcard">The wildcard to represent negative integers.</param>
            <param name="useWildcard">if set to <c>true</c> to use wildcards.</param>
            <returns></returns>
        </member>
        <member name="T:XyratexOSC.Utilities.TimedLock">
            <summary>
            Provides a mechanism that synchronizes access to objects with a specified timeout (using Monitor.TryEnter).
            </summary>
            <remarks>
            This is a Monitor.TryEnter construct developed by Ian Griffith.
            http://www.interact-sw.co.uk/iangblog/2004/03/23/locking
            </remarks>
            <example>
            private static readonly object _locker = new object();
            
            using (TimedLock.Lock(_locker))
            {
                ...
            }
            </example>
        </member>
        <member name="M:XyratexOSC.Utilities.TimedLock.Lock(System.Object)">
            <summary>
            Attempts, for 5 sec, to acquire an exclusive lock on the specified object, and throws a LockTimeoutException if lock could not be taken.
            </summary>
            <param name="o">The object on which to acquire the lock.</param>
            <returns>A TimedLock object which allows for a using statement</returns>
            <exception cref="T:XyratexOSC.Utilities.LockTimeoutException">
            The lock could not be taken in the specified amount of time.
            </exception>
        </member>
        <member name="M:XyratexOSC.Utilities.TimedLock.Lock(System.Object,System.String)">
            <summary>
            Attempts, for 5 sec, to acquire an exclusive lock on the specified object, and throws a LockTimeoutException if lock could not be taken.
            </summary>
            <param name="o">The object on which to acquire the lock.</param>
            <param name="message">The message to be thrown by the LockTimeoutException.</param>
            <returns>A TimedLock object which allows for a using statement</returns>
            <exception cref="T:XyratexOSC.Utilities.LockTimeoutException">
            The lock could not be taken in the specified amount of time.
            </exception>
        </member>
        <member name="M:XyratexOSC.Utilities.TimedLock.Lock(System.Object,System.TimeSpan,System.String)">
            <summary>
            Attempts, for the specified amount of time, to acquire an exclusive lock on the specified object, and throws a LockTimeoutException if lock could not be taken.
            </summary>
            <param name="o">The object on which to acquire the lock.</param>
            <param name="timeout">The amount of time to wait for the lock. A value of –1 millisecond specifies an infinite wait.</param>
            <param name="message">The message to be thrown by the LockTimeoutException.</param>
            <returns>
            A TimedLock object which allows for a using statement
            </returns>
            <exception cref="T:XyratexOSC.Utilities.LockTimeoutException">
            The lock could not be taken in the specified amount of time.
            </exception>
        </member>
        <member name="M:XyratexOSC.Utilities.TimedLock.Dispose">
            <summary>
            Releases the TimedLock.
            </summary>
        </member>
        <member name="T:XyratexOSC.Utilities.LockTimeoutException">
            <summary>
            Represents a timeout error waiting for a lock.
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.LockTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Utilities.LockTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:XyratexOSC.Utilities.LockTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.Utilities.LockTimeoutException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:XyratexOSC.XMath.Statistics">
            <summary>
            Provides statistical helper methods
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Statistics.SmoothHist(System.Int32[],System.Double[])">
            <summary>
            Smoothes the specified histogram using the specified mask.
            </summary>
            <param name="originalValues">The original histogram.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Statistics.FindPeaks(System.Int32[],System.Collections.Generic.List{XyratexOSC.XMath.Statistics.Peak}@,System.Double)">
            <summary>
            Finds the peaks of the specified histogram.
            </summary>
            <param name="histogram">The histogram.</param>
            <param name="peaks">The peaks.</param>
            <param name="valleyPercent">The valley percent.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Statistics.FindPeaks(System.Int32[],System.Collections.Generic.List{XyratexOSC.XMath.Statistics.Peak}@,System.Int32,System.Double)">
            <summary>
            Finds the peaks of the specified histogram.
            </summary>
            <param name="histogram">The histogram.</param>
            <param name="peaks">The peaks.</param>
            <param name="valleyPercent">The valley percent.</param>
        </member>
        <member name="T:XyratexOSC.XMath.Statistics.Peak">
            <summary>
            Represents a peak in a histogram
            </summary>
        </member>
        <member name="M:XyratexOSC.XMath.Statistics.Peak.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XyratexOSC.XMath.Statistics.Peak"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="steepness">The steepness.</param>
        </member>
        <member name="M:XyratexOSC.XMath.Statistics.Peak.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:XyratexOSC.XMath.Statistics.Peak.X">
            <summary>
            Gets or sets the X value.
            </summary>
            <value>
            The X value.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Statistics.Peak.Y">
            <summary>
            Gets or sets the Y value of the peak.
            </summary>
            <value>
            The Y value.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Statistics.Peak.Width">
            <summary>
            Gets or sets the width of the peak.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Statistics.Peak.Height">
            <summary>
            Gets or sets the height from the Y value to the average of the neighboring valley Y values.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:XyratexOSC.XMath.Statistics.Peak.Steepness">
            <summary>
            Gets or sets the steepness score.
            </summary>
            <value>
            The steepness score.
            </value>
        </member>
    </members>
</doc>
